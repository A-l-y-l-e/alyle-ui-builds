{"version":3,"file":"alyle-ui-icon.js","sources":["ng://@alyle/ui/icon/icon.service.ts","ng://@alyle/ui/icon/icon.ts","ng://@alyle/ui/icon/icon.module.ts"],"sourcesContent":["import { Injectable, Optional, Inject, SecurityContext } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport { LyTheme2 } from '@alyle/ui';\nimport { SafeHtml, DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\nconst STYLE_PRIORITY = -2;\n\nexport interface FontClassOptions {\n  key: string;\n  /** Class name */\n  class?: string;\n  /** Frefix class */\n  prefix?: string;\n}\n\n/** The following styles will never be updated */\nconst styles = {\n  svg: {\n    width: 'inherit',\n    height: 'inherit',\n    fill: 'currentColor',\n  }\n};\n\nexport interface SvgIcon {\n  obs?: Observable<SVGElement>;\n  svg?: SVGElement;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyIconService {\n  private _defaultClass?: string = 'material-icons';\n  private _defaultClassPrefix?: string;\n  private svgMap = new Map<string, SvgIcon>();\n  private _fontClasses = new Map<string, FontClassOptions>();\n  /**\n   * Styles\n   * @docs-private\n   */\n  readonly classes = this.theme.addStyleSheet(styles, STYLE_PRIORITY);\n  readonly defaultSvgIcon: SVGElement;\n  get defaultClass() {\n    return this._defaultClass;\n  }\n  get defaultClassPrefix() {\n    return this._defaultClassPrefix;\n  }\n\n  constructor(\n    private http: HttpClient,\n    private _sanitizer: DomSanitizer,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    private theme: LyTheme2\n  ) {\n    this.defaultSvgIcon = this._textToSvg('<svg viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"10\" r=\"10\"></circle></svg>');\n  }\n\n  setSvg(key: string, url: SafeResourceUrl) {\n    if (!this.svgMap.has(key)) {\n      const urlSanitized = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, url);\n      const svgIcon: SvgIcon = {\n        obs: this.http.get(`${urlSanitized}.svg`, { responseType: 'text' })\n        .pipe(\n          share(),\n          map(svgText => {\n            if (svgIcon.svg) {\n              return svgIcon.svg;\n            }\n            const svg = this._textToSvg(svgText);\n            this._cacheSvgIcon(svg, key);\n            return svg;\n          }),\n        )\n      };\n      this.svgMap.set(key, svgIcon);\n    }\n  }\n\n  addSvgIconLiteral(key: string, literal: SafeHtml) {\n    if (!this.svgMap.has(key)) {\n      const sanitizedLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n      if (!sanitizedLiteral) {\n        throw new Error(`LyIconService: Failed sanitize '${key}'`);\n      }\n      const svg = this._textToSvg(sanitizedLiteral);\n      this.svgMap.set(key, {\n        svg\n      });\n    }\n  }\n\n  private _textToSvg(str: string): SVGElement {\n    const div = this._document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg') as SVGElement;\n    return svg;\n  }\n\n  private _cacheSvgIcon(svg: SVGElement, key: string) {\n    const svgIconInfo = this.svgMap.get(key);\n    if (!svgIconInfo!.svg) {\n      this.svgMap.get(key)!.svg = svg;\n    }\n  }\n\n  getSvg(key: string): SvgIcon {\n    if (!this.svgMap.has(key)) {\n      throw new Error(`LyIconService: Icon ${key} not found`);\n    }\n    return this.svgMap.get(key)!;\n  }\n  /**\n   * Set default className for `ly-icon`\n   * @param className class name\n   * @param prefix Class prefix,\n   * For example if you use FontAwesome your prefix would be `fa-`,\n   * then in the template it is no longer necessary to use the prefix\n   * Example: `<ly-icon fontIcon=\"alarm\">`\n   */\n  setDefaultClass(className?: string, prefix?: string) {\n    this._defaultClass = className;\n    this._defaultClassPrefix = prefix;\n  }\n\n  /**\n   * Register new font class alias\n   * demo:\n   * For FontAwesome\n   * registerFontClass({\n   *   key: 'fa',\n   *   class: 'fa'\n   *   prefix: 'fa-'\n   * })\n   */\n  registerFontClass(opt: FontClassOptions) {\n    this._fontClasses.set(opt.key, opt);\n  }\n\n  getFontClass(key: string) {\n    return this._fontClasses.get(key);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2\n  } from '@angular/core';\nimport { FontClassOptions, LyIconService, SvgIcon } from './icon.service';\nimport {\n  LyTheme2,\n  mixinBg,\n  mixinColor,\n  mixinElevation,\n  mixinOutlined,\n  mixinRaised,\n  mixinShadowColor,\n  mixinStyleUpdater,\n  Platform,\n  ThemeVariables\n  } from '@alyle/ui';\nimport { take } from 'rxjs/operators';\n\nconst STYLE_PRIORITY = -2;\n\n/** @docs-private */\nexport class LyIconBase {\n  constructor(\n    public _theme: LyTheme2\n  ) { }\n}\n\n/** @docs-private */\nexport const LyIconMixinBase = mixinStyleUpdater(\nmixinBg(\n  mixinColor(\n    mixinRaised(\n      mixinOutlined(\n        mixinElevation(\n          mixinShadowColor(LyIconBase)))))));\n\n\n@Directive({\n  selector: 'ly-icon',\n  inputs: [\n    'bg',\n    'color',\n    'raised',\n    'outlined',\n    'elevation',\n    'shadowColor',\n  ],\n})\nexport class LyIcon extends LyIconMixinBase implements OnChanges, OnInit, OnDestroy {\n  private _icon: string;\n  private _fontSet: string;\n  private _previousFontSet: FontClassOptions;\n  private _currentClass: string;\n  private _fontIcon: string;\n  private _iconElement?: SVGElement;\n\n  @Input()\n  get icon() {\n    return this._icon;\n  }\n  set icon(val: string) {\n    this._icon = val;\n    if (Platform.isBrowser) {\n      this._prepareSvgIcon(this.iconService.getSvg(val));\n    } else {\n      this._appendDefaultSvgIcon();\n    }\n  }\n\n  @Input()\n  get fontSet(): string {\n    return this._fontSet;\n  }\n  set fontSet(key: string) {\n    this._fontSet = key;\n  }\n\n  @Input()\n  get fontIcon(): string {\n    return this._fontIcon;\n  }\n  set fontIcon(key: string) {\n    this._fontIcon = key;\n  }\n\n  constructor(\n    private iconService: LyIconService,\n    private _el: ElementRef,\n    private _renderer: Renderer2,\n    theme: LyTheme2\n  ) {\n    super(theme);\n    this.setAutoContrast();\n  }\n\n  ngOnChanges() {\n    if (this.fontSet || this.fontIcon) {\n      this._updateFontClass();\n    }\n    this.updateStyle(this._el);\n  }\n\n  private _isDefault() {\n    return !(this.icon || this.fontSet);\n  }\n\n  private _prepareSvgIcon(svgIcon: SvgIcon) {\n    if (svgIcon.svg) {\n      this._appendChild(svgIcon.svg.cloneNode(true) as SVGElement);\n    } else {\n      svgIcon.obs!\n        .pipe(\n          take(1)\n        )\n        .subscribe((svgElement) => {\n          this._appendChild(svgElement.cloneNode(true) as SVGElement);\n        });\n    }\n  }\n\n  private _appendChild(svg: SVGElement) {\n    this._cleanIcon();\n    this._iconElement = svg;\n    this._renderer.addClass(svg, this.iconService.classes.svg);\n    this._renderer.appendChild(this._el.nativeElement, svg);\n  }\n\n  private _appendDefaultSvgIcon() {\n    this._appendChild(this.iconService.defaultSvgIcon);\n  }\n\n  private _updateClass() {\n    if (this._isDefault() && this.iconService.defaultClass) {\n      this._renderer.addClass(this._el.nativeElement, this.iconService.defaultClass);\n    }\n  }\n\n  ngOnInit() {\n    this._updateClass();\n    this._theme.addStyle('lyIconRoot', (theme: ThemeVariables) => (\n      `font-size:${theme.icon.fontSize};` +\n      `width:1em;` +\n      `position:relative;` +\n      `height:1em;` +\n      `display:inline-flex;` +\n      `-webkit-box-sizing: content-box;` +\n      `-moz-box-sizing: content-box;` +\n      `box-sizing: content-box;`\n    ), this._el.nativeElement, undefined, STYLE_PRIORITY);\n  }\n\n  ngOnDestroy() {\n    this._cleanIcon();\n  }\n\n  /**\n   * run only browser\n   * remove current icon\n   */\n  private _cleanIcon() {\n    const icon = this._iconElement;\n    if (icon) {\n      this._renderer.removeChild(this._el.nativeElement, icon);\n      this._iconElement = undefined;\n    }\n  }\n\n  private _updateFontClass() {\n\n    const currentClass = this._currentClass;\n    const fontSetKey = this.fontSet;\n    const icon = this.fontIcon;\n    const el = this._el.nativeElement;\n    const iconClass = this.iconService.getFontClass(fontSetKey);\n    if (currentClass) {\n      this._renderer.removeClass(el, currentClass);\n    }\n    if (this._previousFontSet) {\n      if (this._previousFontSet.class) {\n        this._renderer.removeClass(el, this._previousFontSet.class);\n      }\n    }\n    if (iconClass) {\n      this._previousFontSet = iconClass;\n    } else {\n      throw new Error(`Icon with key${fontSetKey} not found`);\n    }\n    this._currentClass = `${iconClass.prefix}${icon}`;\n    this._renderer.addClass(el, this._currentClass);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyCommonModule } from '@alyle/ui';\nimport { LyIcon } from './icon';\n\n@NgModule({\n  declarations: [LyIcon],\n  exports: [LyIcon, LyCommonModule]\n})\nexport class LyIconModule { }\n"],"names":["tslib_1.__param","STYLE_PRIORITY","tslib_1.__decorate"],"mappings":";;;;;;;;AAQA,MAAM,cAAc,GAAG,CAAC,CAAC,CAAC;;AAW1B,MAAM,MAAM,GAAG;IACb,GAAG,EAAE;QACH,KAAK,EAAE,SAAS;QAChB,MAAM,EAAE,SAAS;QACjB,IAAI,EAAE,cAAc;KACrB;CACF,CAAC;AAUF,IAAa,aAAa,GAA1B,MAAa,aAAa;IAkBxB,YACU,IAAgB,EAChB,UAAwB,EACM,SAAc,EAC5C,KAAe;QAHf,SAAI,GAAJ,IAAI,CAAY;QAChB,eAAU,GAAV,UAAU,CAAc;QACM,cAAS,GAAT,SAAS,CAAK;QAC5C,UAAK,GAAL,KAAK,CAAU;QArBjB,kBAAa,GAAY,gBAAgB,CAAC;QAE1C,WAAM,GAAG,IAAI,GAAG,EAAmB,CAAC;QACpC,iBAAY,GAAG,IAAI,GAAG,EAA4B,CAAC;;;;;QAKlD,YAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAelE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,yEAAyE,CAAC,CAAC;KAClH;IAdD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IACD,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;IAWD,MAAM,CAAC,GAAW,EAAE,GAAoB;QACtC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACzB,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YACjF,MAAM,OAAO,GAAY;gBACvB,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;qBAClE,IAAI,CACH,KAAK,EAAE,EACP,GAAG,CAAC,OAAO;oBACT,IAAI,OAAO,CAAC,GAAG,EAAE;wBACf,OAAO,OAAO,CAAC,GAAG,CAAC;qBACpB;oBACD,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;oBACrC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBAC7B,OAAO,GAAG,CAAC;iBACZ,CAAC,CACH;aACF,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;SAC/B;KACF;IAED,iBAAiB,CAAC,GAAW,EAAE,OAAiB;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACzB,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACjF,IAAI,CAAC,gBAAgB,EAAE;gBACrB,MAAM,IAAI,KAAK,CAAC,mCAAmC,GAAG,GAAG,CAAC,CAAC;aAC5D;YACD,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;gBACnB,GAAG;aACJ,CAAC,CAAC;SACJ;KACF;IAEO,UAAU,CAAC,GAAW;QAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC;QACpB,MAAM,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAe,CAAC;QACnD,OAAO,GAAG,CAAC;KACZ;IAEO,aAAa,CAAC,GAAe,EAAE,GAAW;QAChD,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,WAAY,CAAC,GAAG,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG,GAAG,GAAG,CAAC;SACjC;KACF;IAED,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACzB,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,YAAY,CAAC,CAAC;SACzD;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;KAC9B;;;;;;;;;IASD,eAAe,CAAC,SAAkB,EAAE,MAAe;QACjD,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;KACnC;;;;;;;;;;;IAYD,iBAAiB,CAAC,GAAqB;QACrC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACrC;IAED,YAAY,CAAC,GAAW;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACnC;CACF,CAAA;;AA/GY,aAAa;IAHzB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;IAsBGA,WAAA,QAAQ,EAAE,CAAA,EAAEA,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;qCAFf,UAAU;QACJ,YAAY,UAEjB,QAAQ;GAtBd,aAAa,CA+GzB;;AC1HD,MAAMC,gBAAc,GAAG,CAAC,CAAC,CAAC;;AAG1B,MAAa,UAAU;IACrB,YACS,MAAgB;QAAhB,WAAM,GAAN,MAAM,CAAU;KACpB;CACN;;AAGD,MAAa,eAAe,GAAG,iBAAiB,CAChD,OAAO,CACL,UAAU,CACR,WAAW,CACT,aAAa,CACX,cAAc,CACZ,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAc7C,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,eAAe;IAqCzC,YACU,WAA0B,EAC1B,GAAe,EACf,SAAoB,EAC5B,KAAe;QAEf,KAAK,CAAC,KAAK,CAAC,CAAC;QALL,gBAAW,GAAX,WAAW,CAAe;QAC1B,QAAG,GAAH,GAAG,CAAY;QACf,cAAS,GAAT,SAAS,CAAW;QAI5B,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IApCD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,IAAI,IAAI,CAAC,GAAW;QAClB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,QAAQ,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACpD;aAAM;YACL,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;KACF;IAGD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,GAAW;QACrB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;KACrB;IAGD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,GAAW;QACtB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;KACtB;IAYD,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IAEO,UAAU;QAChB,OAAO,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;KACrC;IAEO,eAAe,CAAC,OAAgB;QACtC,IAAI,OAAO,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAe,CAAC,CAAC;SAC9D;aAAM;YACL,OAAO,CAAC,GAAI;iBACT,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,CACR;iBACA,SAAS,CAAC,CAAC,UAAU;gBACpB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAe,CAAC,CAAC;aAC7D,CAAC,CAAC;SACN;KACF;IAEO,YAAY,CAAC,GAAe;QAClC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;KACzD;IAEO,qBAAqB;QAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;KACpD;IAEO,YAAY;QAClB,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;YACtD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;SAChF;KACF;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,KAAqB,MACvD,aAAa,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG;YACnC,YAAY;YACZ,oBAAoB;YACpB,aAAa;YACb,sBAAsB;YACtB,kCAAkC;YAClC,+BAA+B;YAC/B,0BAA0B,CAC3B,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,EAAEA,gBAAc,CAAC,CAAC;KACvD;IAED,WAAW;QACT,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;;IAMO,UAAU;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/B,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;KACF;IAEO,gBAAgB;QAEtB,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;QAChC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;QAClC,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;SAC9C;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;gBAC/B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAC7D;SACF;QACD,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;SACnC;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,gBAAgB,UAAU,YAAY,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,aAAa,GAAG,GAAG,SAAS,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KACjD;CACF,CAAA;AArICC;IADC,KAAK,EAAE;;;kCAGP;AAWDA;IADC,KAAK,EAAE;;;qCAGP;AAMDA;IADC,KAAK,EAAE;;;sCAGP;AAhCU,MAAM;IAXlB,SAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,MAAM,EAAE;YACN,IAAI;YACJ,OAAO;YACP,QAAQ;YACR,UAAU;YACV,WAAW;YACX,aAAa;SACd;KACF,CAAC;qCAuCuB,aAAa;QACrB,UAAU;QACJ,SAAS;QACrB,QAAQ;GAzCN,MAAM,CA8IlB;;IC5LY,YAAY,GAAzB,MAAa,YAAY;CAAI,CAAA;AAAhB,YAAY;IAJxB,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,MAAM,CAAC;QACtB,OAAO,EAAE,CAAC,MAAM,EAAE,cAAc,CAAC;KAClC,CAAC;GACW,YAAY,CAAI;;;;"}