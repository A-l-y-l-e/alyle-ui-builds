{"version":3,"file":"alyle-ui-resizing-cropping-images.js.map","sources":["ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.ts","ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.module.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  EventEmitter,\n  Renderer2\n} from '@angular/core';\nimport { LyTheme2, mergeDeep, LY_COMMON_STYLES } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -2;\n\nconst styles = ({\n  root: {\n    '-webkit-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  imgContainer: {\n    cursor: 'move',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    '& > img': {\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n    }\n  },\n  croppingContainer: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    boxShadow: '0 0 0 20000px rgba(0, 0, 0, 0.4)',\n    '&:before, &:after': {\n      ...LY_COMMON_STYLES.fill,\n      content: `''`,\n    },\n    '&:before': {\n      width: 0,\n      height: 0,\n      margin: 'auto',\n      borderRadius: '50%',\n      background: '#fff',\n      border: 'solid 2px rgb(255, 255, 255)'\n    },\n    '&:after': {\n      border: 'solid 2px rgb(255, 255, 255)'\n    }\n  },\n  croppContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&, & > input': LY_COMMON_STYLES.fill,\n    '& *:not(input)': {\n      pointerEvents: 'none'\n    },\n    '& > input': {\n      background: 'transparent',\n      opacity: 0,\n      width: '100%',\n      height: '100%'\n    }\n  }\n});\n/** Image Cropper Config */\nexport interface ImgCropperConfig {\n  /** Cropper area width*/\n  width: number;\n  /** Cropper area height*/\n  height: number;\n  /** If this is not defined, the new image will be automatically defined */\n  type?: string;\n  /** Background color( default: null), if is null in png is transparent but not in jpg */\n  fill?: string | null;\n  /** Set anti-aliased( default: true) */\n  antiAliased?: boolean;\n  output?: {\n    width: number;\n    height: number;\n  } | ImgResolution;\n}\n\n/** @deprecated */\nexport type LyResizingCroppingImagesConfig = ImgCropperConfig;\n\n/** Image output */\nexport enum ImgResolution {\n  /** Resizing & cropping */\n  Default,\n  /** Only cropping */\n  OriginalImage\n}\n\nexport interface ImgCropperEvent {\n  /** Cropped image in base64 */\n  base64: string;\n  name: string;\n  /** Filetype */\n  type: string;\n  width: number;\n  height: number;\n  /** Original Image in base64 */\n  originalBase64: string;\n}\n\nconst CONFIG_DEFAULT = <ImgCropperConfig>{\n  width: 250,\n  height: 200,\n  output: ImgResolution.Default,\n  antiAliased: true\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  selector: 'ly-img-cropper, ly-cropping',\n  templateUrl: 'resizing-cropping-images.html'\n })\nexport class LyResizingCroppingImages {\n  /**\n   * styles\n   * @ignore\n   */\n  classes = this.theme.addStyleSheet(styles, STYLE_PRIORITY);\n  _originalImgBase64: string;\n  private _fileName: string;\n\n  private _img: HTMLImageElement;\n  private offset: {x: number, y: number, left: number, top: number};\n  private _scale: number;\n  private _minScale: number;\n  private _config: ImgCropperConfig;\n\n  @ViewChild('_imgContainer') _imgContainer: ElementRef;\n  @ViewChild('_croppingContainer') _croppingContainer: ElementRef;\n  @Input()\n  get config(): ImgCropperConfig {\n    return this._config;\n  }\n  set config(val: ImgCropperConfig) {\n    this._config = mergeDeep({}, CONFIG_DEFAULT, val);\n  }\n  /** Get current scale */\n  get scale(): number {\n    return this._scale;\n  }\n  /** Get min scale */\n  get minScale(): number {\n    return this._minScale;\n  }\n  isLoaded: boolean;\n  isCropped: boolean;\n\n  /** On loaded new image */\n  @Output() loaded = new EventEmitter<ImgCropperEvent>();\n  /** On crop new image */\n  @Output() cropped = new EventEmitter<ImgCropperEvent>();\n  /** Emit an error when the loaded image is not valid */\n  @Output() error = new EventEmitter<ImgCropperEvent>();\n\n  private _defaultType: string;\n  constructor(\n    private _renderer: Renderer2,\n    private theme: LyTheme2,\n    private elementRef: ElementRef<HTMLElement>,\n    private cd: ChangeDetectorRef\n  ) {\n    this._renderer.addClass(elementRef.nativeElement, this.classes.root);\n  }\n\n  private _imgLoaded(imgElement: HTMLImageElement) {\n    if (imgElement) {\n      this._img = imgElement;\n      /** set zoom scale */\n      const minScale = {\n        width: this.config.width / this._img.width * 100,\n        height: this.config.height / this._img.height * 100\n      };\n      this._minScale = Math.max(minScale.width, minScale.height) / 100;\n      this.fit();\n      this.cd.markForCheck();\n    }\n  }\n\n  private _setStylesForContImg(newStyles: {\n    width: string;\n    height: string;\n    transform: string;\n  }) {\n    for (const key in newStyles) {\n      if (newStyles.hasOwnProperty(key)) {\n        this._renderer.setStyle(this._imgContainer.nativeElement, key, newStyles[key]);\n      }\n    }\n  }\n\n  selectInputEvent(img: Event) {\n    const _img = img.target as HTMLInputElement;\n    if (_img.files.length !== 1) {\n      return;\n    }\n    const fileReader: FileReader = new FileReader();\n    this._fileName = _img.value.replace(/.*(\\/|\\\\)/, '');\n\n    /** Set type */\n    this._defaultType = null;\n    if (!this.config.type) {\n      this._defaultType = _img.files[0].type;\n    }\n    this.isLoaded = false;\n    this.isCropped = false;\n    fileReader.addEventListener('loadend', (loadEvent) => {\n      const originalImageUrl = (loadEvent.target as FileReader).result as string;\n      this._setImageUrl(originalImageUrl);\n      this.cd.markForCheck();\n    });\n    fileReader.readAsDataURL(_img.files[0]);\n  }\n\n  /** Set the size of the image, the values can be 0 between 1, where 1 is the original size */\n  setScale(size: number) {\n    // fix min scale\n    size = size > this.minScale && size <= 1 ? size : this.minScale;\n    this._scale = size;\n    size = size * 100;\n    const initialImg = this._img;\n    const width = fixedNum(initialImg.width * size / 100);\n    const height = fixedNum(initialImg.height * size / 100);\n    const hostRect = this.elementRef.nativeElement.getBoundingClientRect() as DOMRect;\n    if (!this.isLoaded) {\n      this._setStylesForContImg({\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: this.customCenter(width, height)\n      });\n    } else {\n      const imgContainerRect = this._imgContainer.nativeElement.getBoundingClientRect() as DOMRect;\n      this.offset = {\n        x: (hostRect.width / 2) - (imgContainerRect.x - hostRect.x), // â\n        y: (hostRect.height / 2) - (imgContainerRect.y - hostRect.y), // â\n        left: imgContainerRect.left - hostRect.x, // â\n        top: imgContainerRect.top - hostRect.y // â\n      };\n      this._setStylesForContImg({\n        width: `${width}px`,\n        height: `${height}px`,\n      } as any);\n      this._move({\n        srcEvent: {},\n        center: {\n          x: (hostRect.width / 2 - (this.offset.x * (width / imgContainerRect.width))) + hostRect.x + this.offset.x,\n          y: (hostRect.height / 2 - (this.offset.y * (height / imgContainerRect.height))) + hostRect.y + this.offset.y\n        }\n      });\n    }\n  }\n  private customCenter(width: number, height: number) {\n    const root = this.elementRef.nativeElement as HTMLElement;\n    const l = (root.offsetWidth - width) / 2;\n    const r = (root.offsetHeight - height) / 2;\n    return `translate3d(${l}px, ${r}px, 0)`;\n  }\n\n  /**\n   * Ajustar a la pantalla\n   */\n  fitToScreen() {\n    const container = this.elementRef.nativeElement as HTMLElement;\n    const min = {\n      width: container.offsetWidth,\n      height: container.offsetHeight\n    };\n    const size = {\n      width: this._img.width,\n      height: this._img.height\n    };\n    const minScale = {\n      width: min.width / size.width * 100,\n      height: min.height / size.height * 100\n    };\n    const result = Math.max(minScale.width, minScale.height) / 100;\n    this.setScale(result);\n  }\n\n  fit() {\n    this.setScale(0);\n  }\n\n  _moveStart(event) {\n    const hostRect = this.elementRef.nativeElement.getBoundingClientRect() as DOMRect;\n    const imgContainerRect = this._imgContainer.nativeElement.getBoundingClientRect() as DOMRect;\n    this.offset = {\n      x: event.center.x - imgContainerRect.x,\n      y: event.center.y - imgContainerRect.y,\n      left: imgContainerRect.left - hostRect.x,\n      top: imgContainerRect.top - hostRect.y\n    };\n  }\n  _move(event) {\n    let x, y;\n    const hostRect = this.elementRef.nativeElement.getBoundingClientRect() as DOMRect;\n    const imgContainerRect = this._imgContainer.nativeElement.getBoundingClientRect() as DOMRect;\n    const croppingContainerRect = this._croppingContainer.nativeElement.getBoundingClientRect() as DOMRect;\n\n    // Limit for left\n    if (event.center.x - this.offset.x >= croppingContainerRect.x) {\n      x = croppingContainerRect.x - hostRect.x;\n    }\n    // Limit for top\n    if (event.center.y - this.offset.y >= croppingContainerRect.y) {\n      y = croppingContainerRect.y - hostRect.y;\n    }\n    // Limit for right\n    if (event.center.x - this.offset.x + imgContainerRect.width <= croppingContainerRect.x + croppingContainerRect.width) {\n      x = croppingContainerRect.x - hostRect.x - imgContainerRect.width + croppingContainerRect.width;\n    }\n    // Limit for bottom\n    if (event.center.y - this.offset.y + imgContainerRect.height <= croppingContainerRect.y + croppingContainerRect.height) {\n      y = croppingContainerRect.y - hostRect.y - imgContainerRect.height + croppingContainerRect.height;\n    }\n\n    // When press shiftKey\n    if (event.srcEvent.shiftKey) {\n      if (Math.abs(event.deltaX) === Math.max(Math.abs(event.deltaX), Math.abs(event.deltaY))) {\n        y = this.offset.top;\n      } else {\n        x = this.offset.left;\n      }\n    }\n    if (x === undefined) { x = event.center.x - hostRect.x - (this.offset.x); }\n    if (y === undefined) { y = event.center.y - hostRect.y - (this.offset.y); }\n\n    this._setStylesForContImg({\n      width: this._imgContainer.nativeElement.offsetWidth,\n      height: this._imgContainer.nativeElement.offsetHeight,\n      transform: `translate3d(${x}px, ${y}px, 0)`\n    });\n  }\n\n  private roundNumber(num: number) {\n    return Math.round(num * 100000) / 100000;\n  }\n  /**+ */\n  zoomIn() {\n    const scale = this.roundNumber(this._scale + .05);\n    if (scale > 0 && scale <= 1) {\n      this.setScale(scale);\n    } else {\n      this.setScale(1);\n    }\n  }\n\n  /** Clean the img cropper */\n  clean() {\n    this._defaultType = null;\n    this.isLoaded = false;\n    this.isCropped = false;\n    this._originalImgBase64 = null;\n    this.cd.markForCheck();\n  }\n\n  /**- */\n  zoomOut() {\n    const scale = this.roundNumber(this._scale - .05);\n    if (scale > this.minScale && scale <= 1) {\n      this.setScale(scale);\n    } else {\n      this.fit();\n    }\n  }\n  center() {\n    const img = this._imgContainer.nativeElement.firstElementChild;\n    const newStyles = {\n      width: `${img.width}px`,\n      height: `${img.height}px`,\n      transform: this.customCenter(img.width, img.height)\n    };\n    this._setStylesForContImg(newStyles);\n  }\n  private _setImageUrl(src: string) {\n    this._originalImgBase64 = src;\n    if (!src) { return; }\n    const img = new Image;\n    const cropEvent: ImgCropperEvent = {\n      name: this._fileName,\n      type: this._defaultType,\n      base64: null,\n      width: null,\n      height: null,\n      originalBase64: src\n    };\n    img.src = src;\n    img.addEventListener('error', (err) => {\n      this.error.emit(cropEvent);\n    });\n    img.addEventListener('load', () => {\n      this._imgLoaded(img);\n      cropEvent.width = img.width;\n      cropEvent.height = img.height;\n      this.loaded.emit(cropEvent);\n      this.isLoaded = true;\n      this.cd.markForCheck();\n    });\n  }\n  private max(...values: number[]) {\n    return Math.max(...values);\n  }\n\n  private imageSmoothingQuality(img: HTMLCanvasElement, config, quality: number): HTMLCanvasElement {\n    /** Calculate total number of steps needed */\n    let  numSteps = Math.ceil(Math.log(this.max(img.width, img.height) / this.max(config.height, config.width)) / Math.log(2)) - 1;\n    numSteps = numSteps <= 0 ? 0 : numSteps;\n\n    /**Array steps */\n    const steps = Array.from(Array(numSteps).keys());\n\n    /** Context */\n    const octx = img.getContext('2d');\n\n    const q = Math.pow(quality * 10, numSteps) / Math.pow(10, numSteps);\n\n    /** If Steps => imageSmoothingQuality */\n    if (numSteps) {\n      /** Set size */\n      const w = img.width * quality;\n      const h = img.height * quality;\n      /** Only the new img is shown. */\n      octx.globalCompositeOperation = 'copy';\n\n      /** Steps */\n      (steps as Array<number>).forEach((a, b) => {\n        octx.drawImage(img,\n          0, 0,\n          w, h\n        );\n      });\n    }\n\n    /**\n     * Step final\n     * Resizing & cropping image\n     */\n    const oc = document.createElement('canvas'),\n    ctx = oc.getContext('2d');\n    oc.width = config.width;\n    oc.height = config.height;\n    ctx.drawImage(img,\n      0, 0,\n      img.width * (q), img.height * (q),\n      0, 0,\n      oc.width, oc.height\n    );\n    return oc;\n  }\n\n  /**\n   * Crop Image\n   * Resizing & cropping image\n   */\n  crop(config?: ImgCropperConfig): ImgCropperEvent {\n    const newConfig = config ? mergeDeep({}, this.config || CONFIG_DEFAULT, config) : this.config;\n    const cropEvent = this._imgCrop(newConfig);\n    return cropEvent;\n  }\n\n  /**\n   * @ignore\n   */\n  _imgCrop(myConfig: ImgCropperConfig) {\n    const canvasElement: HTMLCanvasElement = document.createElement('canvas');\n    const rect = this._croppingContainer.nativeElement.getBoundingClientRect() as ClientRect;\n    const img = this._imgContainer.nativeElement.firstElementChild.getBoundingClientRect() as ClientRect;\n    const left = rect.left - img.left;\n    const top = rect.top - img.top;\n    const config = {\n      width: myConfig.width,\n      height: myConfig.height\n    };\n    canvasElement.width = config.width / this._scale;\n    canvasElement.height = config.height / this._scale;\n    const ctx = canvasElement.getContext('2d');\n    if (myConfig.fill) {\n      ctx.fillStyle = myConfig.fill;\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    }\n    ctx.drawImage(this._img,\n      -(left / this._scale), -(top / this._scale),\n    );\n    let result = canvasElement;\n    const antiAliasedQ = myConfig.antiAliased ? .5 : 1;\n    if (myConfig.output === 0) {\n      result = this.imageSmoothingQuality(result, config, antiAliasedQ);\n    } else if (typeof myConfig.output === 'object') {\n      result = this.imageSmoothingQuality(result, myConfig.output, antiAliasedQ);\n    }\n    let url;\n    if (myConfig.type) {\n      url = result.toDataURL(`image/${myConfig.type}`);\n    } else {\n      url = result.toDataURL(this._defaultType);\n    }\n    const cropEvent = {\n      base64: url,\n      type: this._defaultType || myConfig.type,\n      name: this._fileName,\n      width: config.width,\n      height: config.height,\n      originalBase64: this._originalImgBase64\n    };\n    this.cropped.emit(cropEvent);\n    this.isCropped = true;\n    return cropEvent;\n  }\n}\n\n/** @ignore */\nconst fixedNum = (num: number) => parseFloat(num.toFixed(0));\n","import { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LyHammerGestureConfig } from '@alyle/ui';\n\nimport { LyResizingCroppingImages } from './resizing-cropping-images';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [LyResizingCroppingImages],\n  providers: [\n    { provide: HAMMER_GESTURE_CONFIG, useClass: LyHammerGestureConfig }\n  ],\n  declarations: [LyResizingCroppingImages]\n})\nexport class LyResizingCroppingImageModule {}\n"],"names":[],"mappings":"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"}
