{"version":3,"file":"alyle-ui-resizing-cropping-images.js.map","sources":["ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.ts","ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.module.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  HostListener,\n  OnDestroy\n} from '@angular/core';\nimport { LyTheme2, mergeDeep, LY_COMMON_STYLES } from '@alyle/ui';\nimport { take } from 'rxjs/operators';\nimport { fromEvent, Subscription } from 'rxjs';\n\nconst STYLE_PRIORITY = -2;\n\nconst styles = ({\n  root: {\n    '-webkit-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  imgContainer: {\n    cursor: 'move',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    '& > canvas': {\n      // width: '100%',\n      // height: '100%',\n      pointerEvents: 'none',\n    }\n  },\n  croppingContainer: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    boxShadow: '0 0 0 20000px rgba(0, 0, 0, 0.4)',\n    '&:before, &:after': {\n      ...LY_COMMON_STYLES.fill,\n      content: `''`,\n    },\n    '&:before': {\n      width: 0,\n      height: 0,\n      margin: 'auto',\n      borderRadius: '50%',\n      background: '#fff',\n      border: 'solid 2px rgb(255, 255, 255)'\n    },\n    '&:after': {\n      border: 'solid 2px rgb(255, 255, 255)'\n    }\n  },\n  croppContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&, & > input': LY_COMMON_STYLES.fill,\n    '& *:not(input)': {\n      pointerEvents: 'none'\n    },\n    '& > input': {\n      background: 'transparent',\n      opacity: 0,\n      width: '100%',\n      height: '100%'\n    }\n  }\n});\n/** Image Cropper Config */\nexport interface ImgCropperConfig {\n  /** Cropper area width*/\n  width: number;\n  /** Cropper area height*/\n  height: number;\n  /** If this is not defined, the new image will be automatically defined */\n  type?: string;\n  /** Background color( default: null), if is null in png is transparent but not in jpg */\n  fill?: string | null;\n  /** Set anti-aliased( default: true) */\n  antiAliased?: boolean;\n  autoCrop?: boolean;\n  output?: ImgOutput | ImgResolution;\n}\n\nexport interface ImgOutput {\n  width: number;\n  height: number;\n}\n\n/** Image output */\nexport enum ImgResolution {\n  /** Resizing & cropping */\n  Default,\n  /** Only cropping */\n  OriginalImage\n}\n\nexport interface ImgCropperEvent {\n  /** Cropped image data URL */\n  dataURL: string;\n  name: string;\n  /** Filetype */\n  type: string;\n  width: number;\n  height: number;\n  /** Original Image data URL */\n  originalDataURL: string;\n  scale: number;\n  /** Current rotation in degrees */\n  rotation: number;\n  position: {\n    x: number\n    y: number\n  };\n}\n\nconst CONFIG_DEFAULT = <ImgCropperConfig>{\n  width: 250,\n  height: 200,\n  output: ImgResolution.Default,\n  antiAliased: true\n};\n\ninterface ImgRect {\n  x: number;\n  y: number;\n  xc: number;\n  yc: number;\n  // w: number;\n  // h: number;\n  /** transform with */\n  wt: number;\n  ht: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  selector: 'ly-img-cropper, ly-cropping',\n  templateUrl: 'resizing-cropping-images.html'\n })\nexport class LyResizingCroppingImages implements OnDestroy {\n  /**\n   * styles\n   * @docs-private\n   */\n  readonly classes = this.theme.addStyleSheet(styles, STYLE_PRIORITY);\n  _originalImgBase64: string;\n  private _fileName: string;\n\n  /** Original image */\n  private _img: HTMLImageElement;\n  private offset: {\n    x: number\n    y: number\n    left: number\n    top: number\n  };\n  private _scale: number;\n  private _scal3Fix: number;\n  private _minScale: number;\n  private _config: ImgCropperConfig;\n  private _imgRect: ImgRect = {} as any;\n  private _rotation: number;\n  private _listeners = new Set<Subscription>();\n\n  @ViewChild('_imgContainer') _imgContainer: ElementRef;\n  @ViewChild('_croppingContainer') _croppingContainer: ElementRef;\n  @ViewChild('_imgCanvas') _imgCanvas: ElementRef<HTMLCanvasElement>;\n  @Output() readonly scaleChange = new EventEmitter<number>();\n\n  @Input()\n  get config(): ImgCropperConfig {\n    return this._config;\n  }\n  set config(val: ImgCropperConfig) {\n    this._config = mergeDeep({}, CONFIG_DEFAULT, val);\n  }\n  /** Set scale */\n  @Input()\n  get scale(): number {\n    return this._scale;\n  }\n  set scale(val: number) {\n    this.setScale(val);\n  }\n\n  /** Get min scale */\n  get minScale(): number {\n    return this._minScale;\n  }\n\n  /** When is loaded image */\n  _isLoadedImg: boolean;\n\n  /** When is loaded image & ready for crop */\n  isLoaded: boolean;\n  isCropped: boolean;\n\n  /** On loaded new image */\n  @Output() readonly loaded = new EventEmitter<ImgCropperEvent>();\n  /** On crop new image */\n  @Output() readonly cropped = new EventEmitter<ImgCropperEvent>();\n  /** Emit an error when the loaded image is not valid */\n  @Output() readonly error = new EventEmitter<ImgCropperEvent>();\n\n  private _defaultType: string;\n  constructor(\n    private _renderer: Renderer2,\n    private theme: LyTheme2,\n    private elementRef: ElementRef<HTMLElement>,\n    private cd: ChangeDetectorRef,\n    private _ngZone: NgZone\n  ) {\n    this._renderer.addClass(elementRef.nativeElement, this.classes.root);\n  }\n\n  ngOnDestroy() {\n    this._listeners.forEach(listen => listen.unsubscribe());\n    this._listeners.clear();\n  }\n\n  private _imgLoaded(imgElement: HTMLImageElement) {\n    if (imgElement) {\n      this._img = imgElement;\n      const canvas = this._imgCanvas.nativeElement;\n      canvas.width = imgElement.width;\n      canvas.height = imgElement.height;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(imgElement, 0, 0);\n      /** set min scale */\n      this._minScale = getMinScale(this.config.width, this.config.height, canvas.width, canvas.height);\n    }\n  }\n\n  private _setStylesForContImg(values: {\n    x?: number\n    y?: number\n  }) {\n    const newStyles = { } as any;\n    const rootRect = this._rootRect();\n    if (values.x !== void 0 && values.y !== void 0) {\n      const x = rootRect.width / 2 - (values.x);\n      const y = rootRect.height / 2 - (values.y);\n\n      this._imgRect.x = (values.x);\n      this._imgRect.y = (values.y);\n      this._imgRect.xc = (x);\n      this._imgRect.yc = (y);\n    }\n    newStyles.transform = `translate3d(${(this._imgRect.x)}px,${(this._imgRect.y)}px, 0)`;\n    newStyles.transform += `scale(${this._scal3Fix})`;\n    newStyles.transformOrigin = `${this._imgRect.xc}px ${this._imgRect.yc}px 0`;\n    for (const key in newStyles) {\n      if (newStyles.hasOwnProperty(key)) {\n        this._renderer.setStyle(this._imgContainer.nativeElement, key, newStyles[key]);\n      }\n    }\n  }\n\n  @HostListener('window:resize') _resize$() {\n    if (this.isLoaded) {\n      this.updatePosition();\n    }\n  }\n\n  selectInputEvent(img: Event) {\n    const _img = img.target as HTMLInputElement;\n    if (_img.files.length !== 1) {\n      return;\n    }\n    const fileReader: FileReader = new FileReader();\n\n    this._fileName = _img.value.replace(/.*(\\/|\\\\)/, '');\n\n    const listener = fromEvent(fileReader, 'loadend')\n    .pipe(take(1))\n    .subscribe(loadEvent => {\n      const originalImageUrl = (loadEvent.target as FileReader).result as string;\n      this.setImageUrl(originalImageUrl);\n      /** Set type */\n      if (!this.config.type) {\n        this._defaultType = _img.files[0].type;\n      }\n      this.cd.markForCheck();\n      this._listeners.delete(listener);\n    });\n\n    this._listeners.add(listener);\n\n    fileReader.readAsDataURL(_img.files[0]);\n  }\n\n  /** Set the size of the image, the values can be 0 between 1, where 1 is the original size */\n  setScale(size: number, noAutoCrop?: boolean) {\n    // fix min scale\n    const newSize = size >= this.minScale && size <= 1 ? size : this.minScale;\n\n    // check\n    const changed = size != null && size !== this.scale && newSize !== this.scale;\n    this._scale = size;\n    if (!changed) {\n      return;\n    }\n    this._scal3Fix = newSize;\n    if (this.isLoaded) {\n      if (changed) {\n        const originPosition = {...this._imgRect};\n        this.offset = {\n          x: originPosition.x,\n          y: originPosition.y,\n          left: originPosition.xc,\n          top: originPosition.yc\n        };\n        this._setStylesForContImg({});\n        this._move({\n          srcEvent: {},\n          deltaX: 0,\n          deltaY: 0\n        });\n      } else {\n        return;\n      }\n    } else if (this.minScale) {\n      this._setStylesForContImg({\n        ...this._getCenterPoints()\n      });\n    } else {\n      return;\n    }\n\n    this.scaleChange.emit(size);\n    if (!noAutoCrop) {\n      this._cropIfAutoCrop();\n    }\n\n  }\n\n  private _getCenterPoints() {\n    const root = this.elementRef.nativeElement as HTMLElement;\n    const img = this._imgCanvas.nativeElement;\n    const x = (root.offsetWidth - (img.width)) / 2;\n    const y = (root.offsetHeight - (img.height)) / 2;\n    return {\n      x,\n      y\n    };\n  }\n\n  /**\n   * Ajustar a la pantalla\n   */\n  fitToScreen() {\n    const container = this.elementRef.nativeElement as HTMLElement;\n    const min = {\n      width: container.offsetWidth,\n      height: container.offsetHeight\n    };\n    const { width, height } = this._img;\n    const minScale = {\n      width: min.width / width,\n      height: min.height / height\n    };\n    const result = Math.max(minScale.width, minScale.height);\n    this.setScale(result);\n  }\n\n  fit() {\n    this.setScale(this.minScale);\n  }\n\n  _moveStart() {\n    this.offset = {\n      x: this._imgRect.x,\n      y: this._imgRect.y,\n      left: this._imgRect.xc,\n      top: this._imgRect.yc\n    };\n  }\n  _move(event: { srcEvent?: {}; deltaX: any; deltaY: any; }) {\n    let x: number, y: number;\n    const canvas = this._imgCanvas.nativeElement;\n    const scaleFix = this._scal3Fix;\n    const config = this.config;\n    const startP = this.offset;\n    // Limit for left\n    if ((config.width / 2 / scaleFix) >= startP.left - (event.deltaX / scaleFix)) {\n      x = startP.x + (startP.left) - (config.width / 2 / scaleFix);\n    }\n\n    // // Limit for top\n    if ((config.height / 2 / scaleFix) >= (startP.top - (event.deltaY / scaleFix))) {\n      y = startP.y + (startP.top) - (config.height / 2 / scaleFix);\n    }\n\n    // // Limit for right\n    if ((config.width / 2 / scaleFix) + (canvas.width) - (startP.left - (event.deltaX / scaleFix)) <= config.width / scaleFix) {\n      x = startP.x + (startP.left) + (config.width / 2 / scaleFix) - canvas.width;\n    }\n\n    // // Limit for bottom\n    if (((config.height / 2 / scaleFix) + (canvas.height) - (startP.top - (event.deltaY / scaleFix))) <= (config.height / scaleFix)) {\n      y = startP.y + (startP.top) + (config.height / 2 / scaleFix) - canvas.height;\n    }\n\n    // When press shiftKey, deprecated\n    // if (event.srcEvent && event.srcEvent.shiftKey) {\n    //   if (Math.abs(event.deltaX) === Math.max(Math.abs(event.deltaX), Math.abs(event.deltaY))) {\n    //     y = this.offset.top;\n    //   } else {\n    //     x = this.offset.left;\n    //   }\n    // }\n\n    if (x === void 0) { x = (event.deltaX / scaleFix) + (this.offset.x); }\n    if (y === void 0) { y = (event.deltaY / scaleFix) + (this.offset.y); }\n    this._setStylesForContImg({\n      x, y\n    });\n  }\n\n  updatePosition(x?: number, y?: number) {\n    const hostRect = this._rootRect();\n    const croppingContainerRect = this._areaCropperRect();\n    if (x === void 0 && y === void 0) {\n      x = this._imgRect.xc;\n      y = this._imgRect.yc;\n    }\n    x = (croppingContainerRect.x - hostRect.x) - (x - (this.config.width / 2));\n    y = (croppingContainerRect.y - hostRect.y) - (y - (this.config.height / 2));\n    this._setStylesForContImg({\n      x, y\n    });\n  }\n\n  _slideEnd() {\n    this._cropIfAutoCrop();\n  }\n\n  private _cropIfAutoCrop() {\n    if (this.config.autoCrop) {\n      this.crop();\n    }\n  }\n\n  /**+ */\n  zoomIn() {\n    const scale = this._scal3Fix + .05;\n    if (scale > 0 && scale <= 1) {\n      this.setScale(scale);\n    } else {\n      this.setScale(1);\n    }\n  }\n\n  /** Clean the img cropper */\n  clean() {\n    if (this.isLoaded) {\n      this._imgRect = { } as any;\n      this.offset = null;\n      this.scale = null;\n      this._scal3Fix = null;\n      this._rotation = 0;\n      this._minScale = null;\n      this._defaultType = null;\n      this._isLoadedImg = undefined;\n      this.isLoaded = null;\n      this.isCropped = undefined;\n      this._originalImgBase64 = undefined;\n      const canvas = this._imgCanvas.nativeElement;\n      canvas.width = 0;\n      canvas.height = 0;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**- */\n  zoomOut() {\n    const scale = this._scal3Fix - .05;\n    if (scale > this.minScale && scale <= 1) {\n      this.setScale(scale);\n    } else {\n      this.fit();\n    }\n  }\n  center() {\n    const newStyles = {\n      ...this._getCenterPoints()\n    };\n    this._setStylesForContImg(newStyles);\n    this._cropIfAutoCrop();\n  }\n\n/**\n * Load Image from URL\n * @param src URL\n * @param fn function that will be called before emit the event loaded\n */\n  setImageUrl(src: string, fn?: () => void) {\n    this.clean();\n    this._originalImgBase64 = src;\n    const img = new Image;\n    img.crossOrigin = 'anonymous';\n    const cropEvent: ImgCropperEvent = {\n      name: this._fileName,\n      type: this._defaultType,\n      dataURL: null,\n      width: null,\n      height: null,\n      scale: null,\n      originalDataURL: src,\n      rotation: null,\n      position: null\n    };\n    img.src = src;\n    const errorListen = fromEvent(img, 'error').pipe(\n      take(1)\n    ).subscribe(() => {\n      this.error.emit(cropEvent);\n      this._listeners.delete(errorListen);\n    });\n    this._listeners.add(errorListen);\n    const loadListen = fromEvent(img, 'load')\n    .pipe(\n      take(1)\n    ).subscribe(() => {\n      this._imgLoaded(img);\n      cropEvent.width = img.width;\n      cropEvent.height = img.height;\n      this._isLoadedImg = true;\n      this.cd.markForCheck();\n      this._ngZone\n          .onStable\n          .pipe(take(1))\n          .subscribe(() => this._ngZone.run(() => {\n            this.isLoaded = null;\n\n            if (fn) {\n              fn();\n            } else {\n              this.setScale(this.minScale, true);\n            }\n\n            this.loaded.emit(cropEvent);\n            this.isLoaded = true;\n            this._cropIfAutoCrop();\n            this.cd.markForCheck();\n          }));\n      this._listeners.delete(loadListen);\n    });\n    this._listeners.add(loadListen);\n  }\n\n  rotate(degrees: number) {\n    const validDegrees = this._rotation = convertToValidDegrees(degrees);\n    const degreesRad = validDegrees * Math.PI / 180;\n    const canvas = this._imgCanvas.nativeElement;\n    const canvasClon = createCanvasImg(canvas);\n    const ctx = canvas.getContext('2d');\n\n    // clear\n    ctx.clearRect(0, 0, canvasClon.width, canvasClon.height);\n\n    // rotate canvas image\n    this._renderer.setStyle(canvas, 'transform', `rotate(${validDegrees}deg) scale(${1 / this._scal3Fix})`);\n    this._renderer.setStyle(canvas, 'transformOrigin', `${this._imgRect.xc}px ${this._imgRect.yc}px 0`);\n    const { x, y } = canvas.getBoundingClientRect() as DOMRect;\n\n    // save rect\n    const canvasRect = canvas.getBoundingClientRect();\n\n    // remove rotate styles\n    this._renderer.removeStyle(canvas, 'transform');\n    this._renderer.removeStyle(canvas, 'transformOrigin');\n\n    // set w & h\n    const w = canvasRect.width;\n    const h = canvasRect.height;\n    ctx.canvas.width = w;\n    ctx.canvas.height = h;\n\n    // clear\n    ctx.clearRect(0, 0, w, h);\n\n    // translate and rotate\n    ctx.translate(w / 2, h / 2);\n    ctx.rotate(degreesRad);\n    ctx.drawImage(canvasClon, -canvasClon.width / 2, -canvasClon.height / 2);\n\n    // Update min scale\n    this._minScale = getMinScale(this.config.width, this.config.height, canvas.width, canvas.height);\n\n    // set the minimum scale, only if necessary\n    if (this.scale < this.minScale) {\n      this.setScale(0, true);\n    } //                â no AutoCrop\n\n    const rootRect = this._rootRect();\n    this._setStylesForContImg({\n      x: (x - rootRect.x),\n      y: (y - rootRect.y)\n    });\n\n    // keep image inside the frame\n    const originPosition = {...this._imgRect};\n    this.offset = {\n      x: originPosition.x,\n      y: originPosition.y,\n      left: originPosition.xc,\n      top: originPosition.yc\n    };\n    this._setStylesForContImg({});\n    this._move({\n      srcEvent: {},\n      deltaX: 0,\n      deltaY: 0\n    });\n\n    this._cropIfAutoCrop();\n  }\n\n  private imageSmoothingQuality(img: HTMLCanvasElement, config, quality: number): HTMLCanvasElement {\n    /** Calculate total number of steps needed */\n    let  numSteps = Math.ceil(Math.log(Math.max(img.width, img.height) / Math.max(config.width, config.height)) / Math.log(2)) - 1;\n    numSteps = numSteps <= 0 ? 0 : numSteps;\n\n    /**Array steps */\n    const steps = Array.from(Array(numSteps).keys());\n\n    /** Context */\n    const octx = img.getContext('2d');\n\n    const q = ((quality * 10) ** numSteps) / (10 ** numSteps);\n    const fileType = this._defaultType;\n    /** If Steps => imageSmoothingQuality */\n    if (numSteps) {\n      /** Set size */\n      const w = img.width * quality;\n      const h = img.height * quality;\n      /** Only the new img is shown. */\n      if (fileType === 'image/png' || fileType === 'image/svg+xml') {\n        octx.globalCompositeOperation = 'copy';\n      }\n\n      /** Steps */\n      (steps as Array<number>).forEach(() => {\n        octx.drawImage(img,\n          0, 0,\n          w, h\n        );\n      });\n    }\n\n    /**\n     * Step final\n     * Resizing & cropping image\n     */\n    const oc = document.createElement('canvas'),\n    ctx = oc.getContext('2d');\n    oc.width = config.width;\n    oc.height = config.height;\n    ctx.drawImage(img,\n      0, 0,\n      img.width * q, img.height * q,\n      0, 0,\n      oc.width, oc.height\n    );\n    return oc;\n  }\n\n  /**\n   * Crop Image\n   * Resizing & cropping image\n   */\n  crop(config?: ImgCropperConfig): ImgCropperEvent {\n    const newConfig = config ? mergeDeep({}, this.config || CONFIG_DEFAULT, config) : this.config;\n    const cropEvent = this._imgCrop(newConfig);\n    this.cd.markForCheck();\n    return cropEvent;\n  }\n\n  /**\n   * @ignore\n   */\n  _imgCrop(myConfig: ImgCropperConfig) {\n    const canvasElement: HTMLCanvasElement = document.createElement('canvas');\n    const imgRect = this._imgRect;\n    const scaleFix = this._scal3Fix;\n    const left = imgRect.xc - (myConfig.width / 2 / scaleFix);\n    const top = imgRect.yc - (myConfig.height / 2 / scaleFix);\n    const config = {\n      width: myConfig.width,\n      height: myConfig.height\n    };\n    canvasElement.width = config.width / scaleFix;\n    canvasElement.height = config.height / scaleFix;\n    const ctx = canvasElement.getContext('2d');\n    if (myConfig.fill) {\n      ctx.fillStyle = myConfig.fill;\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    }\n    ctx.drawImage(this._imgCanvas.nativeElement as any,\n      -(left), -(top),\n    );\n    let result = canvasElement;\n    const antiAliasedQ = myConfig.antiAliased ? .5 : 1;\n    if (myConfig.output === 0) {\n      result = this.imageSmoothingQuality(result, config, antiAliasedQ);\n    } else if (typeof myConfig.output === 'object') {\n      result = this.imageSmoothingQuality(result, myConfig.output, antiAliasedQ);\n    }\n    let url;\n    if (myConfig.type) {\n      url = result.toDataURL(`${myConfig.type}`);\n    } else {\n      url = result.toDataURL(this._defaultType);\n    }\n    const cropEvent: ImgCropperEvent = {\n      dataURL: url,\n      type: this._defaultType || myConfig.type,\n      name: this._fileName,\n      width: config.width,\n      height: config.height,\n      originalDataURL: this._originalImgBase64,\n      scale: this._scal3Fix,\n      rotation: this._rotation,\n      position: {\n        x: this._imgRect.xc,\n        y: this._imgRect.yc\n      }\n    };\n    this.isCropped = true;\n    this.cropped.emit(cropEvent);\n    return cropEvent;\n  }\n\n  private _rootRect(): DOMRect {\n    return this.elementRef.nativeElement.getBoundingClientRect() as DOMRect;\n  }\n\n  private _areaCropperRect(): DOMRect {\n    return this._croppingContainer.nativeElement.getBoundingClientRect() as DOMRect;\n  }\n\n}\n\n/**\n * convertToValidDegrees(45) === 90\n * convertToValidDegrees(40) === 0\n * convertToValidDegrees(100) === 90\n * @docs-private\n */\nfunction convertToValidDegrees(num: number) {\n  const val360 = limitNum(num, 360);\n  const val90 = limitNum(val360.result, 90);\n  const sign = Math.sign(num);\n  if (val90.result >= (90 / 2)) {\n    return 90 * (val90.parts + 1) * sign;\n  } else {\n    return 90 * val90.parts * sign;\n  }\n}\n\n/**\n * demo:\n * limitNum(450, 360) === 90\n * @docs-private\n */\nfunction limitNum(num: number, num2: number) {\n  const numAbs = Math.abs(num);\n  const parts = Math.floor(numAbs / num2);\n  let result: number;\n  if (parts) {\n    result = numAbs - (num2 * parts);\n  } else {\n    result = num;\n  }\n  if (numAbs !== num) {\n    result *= -1;\n  }\n  return {\n    result,\n    parts\n  };\n}\n\n/**\n * @docs-private\n */\nfunction createCanvasImg(img: HTMLCanvasElement | HTMLImageElement) {\n\n  // create a new canvas\n  const newCanvas = document.createElement('canvas');\n  const context = newCanvas.getContext('2d');\n\n  // set dimensions\n  newCanvas.width = img.width;\n  newCanvas.height = img.height;\n\n  // apply the old canvas to the new one\n  context.drawImage(img, 0, 0);\n\n  // return the new canvas\n  return newCanvas;\n}\n\n/**\n * @docs-private\n */\nfunction getMinScale(mw: number, mh: number, w: number, h: number) {\n  return Math.max(mw / w, mh / h);\n}\n","import { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LyHammerGestureConfig } from '@alyle/ui';\n\nimport { LyResizingCroppingImages } from './resizing-cropping-images';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [LyResizingCroppingImages],\n  providers: [\n    { provide: HAMMER_GESTURE_CONFIG, useClass: LyHammerGestureConfig }\n  ],\n  declarations: [LyResizingCroppingImages]\n})\nexport class LyResizingCroppingImageModule {}\n"],"names":[],"mappings":"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"}
