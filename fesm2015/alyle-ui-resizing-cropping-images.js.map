{"version":3,"file":"alyle-ui-resizing-cropping-images.js.map","sources":["ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.ts","ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.module.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  HostListener\n} from '@angular/core';\nimport { LyTheme2, mergeDeep, LY_COMMON_STYLES } from '@alyle/ui';\nimport { take } from 'rxjs/operators';\n\nconst STYLE_PRIORITY = -2;\n\nconst styles = ({\n  root: {\n    '-webkit-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  imgContainer: {\n    cursor: 'move',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    '& > canvas': {\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n    }\n  },\n  croppingContainer: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    boxShadow: '0 0 0 20000px rgba(0, 0, 0, 0.4)',\n    '&:before, &:after': {\n      ...LY_COMMON_STYLES.fill,\n      content: `''`,\n    },\n    '&:before': {\n      width: 0,\n      height: 0,\n      margin: 'auto',\n      borderRadius: '50%',\n      background: '#fff',\n      border: 'solid 2px rgb(255, 255, 255)'\n    },\n    '&:after': {\n      border: 'solid 2px rgb(255, 255, 255)'\n    }\n  },\n  croppContent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&, & > input': LY_COMMON_STYLES.fill,\n    '& *:not(input)': {\n      pointerEvents: 'none'\n    },\n    '& > input': {\n      background: 'transparent',\n      opacity: 0,\n      width: '100%',\n      height: '100%'\n    }\n  }\n});\n/** Image Cropper Config */\nexport interface ImgCropperConfig {\n  /** Cropper area width*/\n  width: number;\n  /** Cropper area height*/\n  height: number;\n  /** If this is not defined, the new image will be automatically defined */\n  type?: string;\n  /** Background color( default: null), if is null in png is transparent but not in jpg */\n  fill?: string | null;\n  /** Set anti-aliased( default: true) */\n  antiAliased?: boolean;\n  autoCrop?: boolean;\n  output?: {\n    width: number\n    height: number\n  } | ImgResolution;\n}\n\n/** @deprecated */\nexport type LyResizingCroppingImagesConfig = ImgCropperConfig;\n\n/** Image output */\nexport enum ImgResolution {\n  /** Resizing & cropping */\n  Default,\n  /** Only cropping */\n  OriginalImage\n}\n\nexport interface ImgCropperEvent {\n  /** Cropped image in base64, !deprecated use instead `dataURL` */\n  base64: string;\n  /** Cropped image data URL */\n  dataURL: string;\n  name: string;\n  /** Filetype */\n  type: string;\n  width: number;\n  height: number;\n  /** Original Image data URL */\n  originalDataURL: string;\n  scale: number;\n  /** Current rotation in degrees */\n  rotation: number;\n  position: {\n    x: number\n    y: number\n  };\n}\n\nconst CONFIG_DEFAULT = <ImgCropperConfig>{\n  width: 250,\n  height: 200,\n  output: ImgResolution.Default,\n  antiAliased: true\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  selector: 'ly-img-cropper, ly-cropping',\n  templateUrl: 'resizing-cropping-images.html'\n })\nexport class LyResizingCroppingImages {\n  /**\n   * styles\n   * @ignore\n   */\n  readonly classes = this.theme.addStyleSheet(styles, STYLE_PRIORITY);\n  _originalImgBase64: string;\n  private _fileName: string;\n\n  /** Original image */\n  private _img: HTMLImageElement;\n  private offset: {\n    x: number\n    y: number\n    left: number\n    top: number\n  };\n  private _scale: number;\n  private _scal3Fix: number;\n  private _minScale: number;\n  private _config: ImgCropperConfig;\n  private _imgRect: {\n    x: number\n    y: number\n    xc: number\n    yc: number\n    w: number\n    h: number\n    /** transform with */\n    wt: number\n    ht: number\n  } = {} as any;\n  private _rotation: number;\n\n  @ViewChild('_imgContainer') _imgContainer: ElementRef;\n  @ViewChild('_croppingContainer') _croppingContainer: ElementRef;\n  @ViewChild('_imgCanvas') _imgCanvas: ElementRef<HTMLCanvasElement>;\n  @Output() readonly scaleChange = new EventEmitter<number>();\n\n  @Input()\n  get config(): ImgCropperConfig {\n    return this._config;\n  }\n  set config(val: ImgCropperConfig) {\n    this._config = mergeDeep({}, CONFIG_DEFAULT, val);\n  }\n  /** Set scale */\n  @Input()\n  get scale(): number {\n    return this._scale;\n  }\n  set scale(val: number) {\n    this.setScale(val);\n  }\n\n  /** Get min scale */\n  get minScale(): number {\n    return this._minScale;\n  }\n\n  /** When is loaded image */\n  _isLoadedImg: boolean;\n\n  /** When is loaded image & ready for crop */\n  isLoaded: boolean;\n  isCropped: boolean;\n\n  /** On loaded new image */\n  @Output() readonly loaded = new EventEmitter<ImgCropperEvent>();\n  /** On crop new image */\n  @Output() readonly cropped = new EventEmitter<ImgCropperEvent>();\n  /** Emit an error when the loaded image is not valid */\n  @Output() readonly error = new EventEmitter<ImgCropperEvent>();\n\n  private _defaultType: string;\n  constructor(\n    private _renderer: Renderer2,\n    private theme: LyTheme2,\n    private elementRef: ElementRef<HTMLElement>,\n    private cd: ChangeDetectorRef,\n    private _ngZone: NgZone\n  ) {\n    this._renderer.addClass(elementRef.nativeElement, this.classes.root);\n  }\n\n  private _imgLoaded(imgElement: HTMLImageElement) {\n    if (imgElement) {\n      this._img = imgElement;\n      const canvas = this._imgCanvas.nativeElement;\n      canvas.height = imgElement.height;\n      canvas.width = imgElement.width;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(imgElement, 0, 0);\n      /** set zoom scale */\n      const minScale = {\n        width: this.config.width / canvas.width,\n        height: this.config.height / canvas.height\n      };\n      this._minScale = Math.max(minScale.width, minScale.height);\n    }\n  }\n\n  private _setStylesForContImg(values: {\n    width: number\n    height: number\n    x?: number\n    y?: number\n  }) {\n    const newStyles = {\n      width: `${fix(values.width)}px`,\n      height: `${fix(values.height)}px`\n    } as any;\n    if (values.x !== void 0 && values.y !== void 0) {\n      const rootRect = this._rootRect();\n      const imgRect = this._imgContainerRect();\n      const x = rootRect.width / 2 - (values.x);\n      const y = rootRect.height / 2 - (values.y);\n      newStyles.transform = `translate3d(${fix(values.x)}px,${fix(values.y)}px, 0)`;\n\n      this._imgRect.x = fix(values.x);\n      this._imgRect.y = fix(values.y);\n      this._imgRect.xc = fix(x);\n      this._imgRect.yc = fix(y);\n      this._imgRect.wt = fix(imgRect.width);\n      this._imgRect.ht = fix(imgRect.height);\n    }\n    this._imgRect.w = fix(values.width);\n    this._imgRect.h = fix(values.height);\n    for (const key in newStyles) {\n      if (newStyles.hasOwnProperty(key)) {\n        this._renderer.setStyle(this._imgContainer.nativeElement, key, newStyles[key]);\n      }\n    }\n  }\n\n  @HostListener('window:resize') resize$() {\n    if (this.isLoaded) {\n      this.updatePosition();\n    }\n  }\n\n  selectInputEvent(img: Event) {\n    const _img = img.target as HTMLInputElement;\n    if (_img.files.length !== 1) {\n      return;\n    }\n    const fileReader: FileReader = new FileReader();\n    this._fileName = _img.value.replace(/.*(\\/|\\\\)/, '');\n\n    /** Set type */\n    this._defaultType = null;\n    if (!this.config.type) {\n      this._defaultType = _img.files[0].type;\n    }\n    fileReader.addEventListener('loadend', (loadEvent) => {\n      const originalImageUrl = (loadEvent.target as FileReader).result as string;\n      this.setImageUrl(originalImageUrl);\n      this.cd.markForCheck();\n    });\n    fileReader.readAsDataURL(_img.files[0]);\n  }\n\n  /** Set the size of the image, the values can be 0 between 1, where 1 is the original size */\n  setScale(size: number, noAutoCrop?: boolean) {\n    // fix min scale\n    size = size > this.minScale && size <= 1 ? size : this.minScale;\n\n    // check\n    const changed = size === this.scale;\n    this._scale = size;\n    if (changed) {\n      return;\n    }\n\n    size = this._scal3Fix = fix(size, 4);\n    const initialImg = this._imgCanvas.nativeElement;\n    const width = (initialImg.width * size);\n    const height = (initialImg.height * size);\n    const hostRect = this._rootRect();\n    if (!this.isLoaded) {\n      this._setStylesForContImg({\n        width,\n        height,\n        ...this._getCenterPoints()\n      });\n    } else {\n      const originPosition = {...this._imgRect};\n      this.offset = {\n        x: (hostRect.width / 2) - (originPosition.x),\n        y: (hostRect.height / 2) - (originPosition.y),\n        left: originPosition.x,\n        top: originPosition.y\n      };\n      this._setStylesForContImg({\n        width,\n        height,\n      });\n      this._move({\n        srcEvent: {},\n        center: {\n          x: (hostRect.width / 2 - (this.offset.x * (width / originPosition.w))) + hostRect.x + this.offset.x,\n          y: (hostRect.height / 2 - (this.offset.y * (height / originPosition.h))) + hostRect.y + this.offset.y\n        }\n      });\n    }\n    this.scaleChange.emit(this._scale);\n    if (!noAutoCrop) {\n      this._cropIfAutoCrop();\n    }\n  }\n\n  private _getCenterPoints() {\n    const root = this.elementRef.nativeElement as HTMLElement;\n    const img = this._imgCanvas.nativeElement;\n    const size = this._scal3Fix;\n    const x = (root.offsetWidth - (img.width * size)) / 2;\n    const y = (root.offsetHeight - (img.height * size)) / 2;\n    return {\n      x,\n      y\n    };\n  }\n\n  /**\n   * Ajustar a la pantalla\n   */\n  fitToScreen() {\n    const container = this.elementRef.nativeElement as HTMLElement;\n    const min = {\n      width: container.offsetWidth,\n      height: container.offsetHeight\n    };\n    const { width, height } = this._img;\n    const minScale = {\n      width: min.width / width,\n      height: min.height / height\n    };\n    const result = Math.max(minScale.width, minScale.height);\n    this.setScale(result);\n  }\n\n  fit() {\n    this.setScale(0);\n  }\n\n  _moveStart(event) {\n    const hostRect = this._rootRect();\n    const imgRect = this._imgRect;\n    this.offset = {\n      x: event.center.x - hostRect.x - imgRect.x,\n      y: event.center.y - hostRect.y - imgRect.y,\n      left: imgRect.x,\n      top: imgRect.y\n    };\n  }\n  _move(event) {\n    let x, y;\n    const hostRect = this._rootRect();\n    const imgContainerRect = this._imgRect;\n    const croppingContainerRect = this._areaCropperRect();\n\n    // Limit for left\n    if (event.center.x - this.offset.x > croppingContainerRect.x) {\n      x = croppingContainerRect.x - hostRect.x;\n    }\n    // Limit for top\n    if (event.center.y - this.offset.y > croppingContainerRect.y) {\n      y = croppingContainerRect.y - hostRect.y;\n    }\n    // Limit for right\n    if (event.center.x - this.offset.x + imgContainerRect.w < croppingContainerRect.x + croppingContainerRect.width) {\n      x = croppingContainerRect.x - hostRect.x - imgContainerRect.w + croppingContainerRect.width;\n    }\n    // Limit for bottom\n    if (event.center.y - this.offset.y + imgContainerRect.h < croppingContainerRect.y + croppingContainerRect.height) {\n      y = croppingContainerRect.y - hostRect.y - imgContainerRect.h + croppingContainerRect.height;\n    }\n\n    // When press shiftKey\n    if (event.srcEvent && event.srcEvent.shiftKey) {\n      if (Math.abs(event.deltaX) === Math.max(Math.abs(event.deltaX), Math.abs(event.deltaY))) {\n        y = this.offset.top;\n      } else {\n        x = this.offset.left;\n      }\n    }\n    if (x === void 0) { x = event.center.x - hostRect.x - (this.offset.x); }\n    if (y === void 0) { y = event.center.y - hostRect.y - (this.offset.y); }\n\n    this._setStylesForContImg({\n      width: this._imgContainer.nativeElement.offsetWidth,\n      height: this._imgContainer.nativeElement.offsetHeight,\n      x, y\n    });\n  }\n\n  updatePosition(x?: number, y?: number) {\n    const hostRect = this._rootRect();\n    const croppingContainerRect = this._areaCropperRect();\n    if (x === void 0 && y === void 0) {\n      x = this._imgRect.xc;\n      y = this._imgRect.yc;\n    }\n    x = (croppingContainerRect.x - hostRect.x) - (x - (this.config.width / 2));\n    y = (croppingContainerRect.y - hostRect.y) - (y - (this.config.height / 2));\n    this._setStylesForContImg({\n      width: this._imgContainer.nativeElement.offsetWidth,\n      height: this._imgContainer.nativeElement.offsetHeight,\n      x, y\n    });\n  }\n\n  _slideEnd() {\n    this._cropIfAutoCrop();\n  }\n\n  private _cropIfAutoCrop() {\n    if (this.config.autoCrop) {\n      this.crop();\n    }\n  }\n\n  /**+ */\n  zoomIn() {\n    const scale = fix(this._scal3Fix + .05, 4);\n    if (scale > 0 && scale <= 1) {\n      this.setScale(scale);\n    } else {\n      this.setScale(1);\n    }\n  }\n\n  /** Clean the img cropper */\n  clean() {\n    this._defaultType = null;\n    this._isLoadedImg = false;\n    this.isLoaded = false;\n    this.isCropped = false;\n    this._originalImgBase64 = null;\n    const canvas = this._imgCanvas.nativeElement;\n    canvas.width = 0;\n    canvas.height = 0;\n    this.cd.markForCheck();\n  }\n\n  /**- */\n  zoomOut() {\n    const scale = fix(this._scal3Fix - .05, 4);\n    if (scale > this.minScale && scale <= 1) {\n      this.setScale(scale);\n    } else {\n      this.fit();\n    }\n  }\n  center() {\n    // TODO: fix this\n    const imgRect = this._imgRect;\n    const newStyles = {\n      width: imgRect.w,\n      height: imgRect.h,\n      ...this._getCenterPoints()\n    };\n    this._setStylesForContImg(newStyles);\n    this._cropIfAutoCrop();\n  }\n\n  /** Set Img */\n  setImageUrl(src: string) {\n    this._originalImgBase64 = src;\n    const img = new Image;\n    const cropEvent: ImgCropperEvent = {\n      name: this._fileName,\n      type: this._defaultType,\n      dataURL: null,\n      base64: null,\n      width: null,\n      height: null,\n      scale: null,\n      originalDataURL: src,\n      rotation: null,\n      position: null\n    };\n    img.src = src;\n    img.addEventListener('error', () => {\n      this.clean();\n      this.error.emit(cropEvent);\n    });\n    img.addEventListener('load', () => {\n      this._imgLoaded(img);\n      cropEvent.width = img.width;\n      cropEvent.height = img.height;\n      this._isLoadedImg = true;\n      this.cd.markForCheck();\n      this._ngZone\n          .onStable\n          .pipe(take(1))\n          .subscribe(() => this._ngZone.run(() => {\n            this.isLoaded = false;\n            this.setScale(0, true);\n            this.loaded.emit(cropEvent);\n            this.isLoaded = true;\n            this._cropIfAutoCrop();\n            this.cd.markForCheck();\n          }));\n    });\n  }\n\n  rotate(degrees: number) {\n    const validDegrees = this._rotation = convertToValidDegrees(degrees);\n    const degreesRad = validDegrees * Math.PI / 180;\n    const canvas = this._imgCanvas.nativeElement;\n    const canvasClon = createCanvasImg(canvas);\n    const ctx = canvas.getContext('2d');\n\n    // clear\n    ctx.clearRect(0, 0, canvasClon.width, canvasClon.height);\n\n    // rotate canvas image\n    this._renderer.setStyle(canvas, 'transform', `rotate(${validDegrees}deg)`);\n    this._renderer.setStyle(canvas, 'transformOrigin', `${this._imgRect.xc}px ${this._imgRect.yc}px 0`);\n    const { x, y } = canvas.getBoundingClientRect() as DOMRect;\n    this._renderer.setStyle(canvas, 'width', `initial`);\n    this._renderer.setStyle(canvas, 'height', `initial`);\n\n    // save rect\n    const canvasRect = canvas.getBoundingClientRect();\n\n    // remove rotate styles\n    this._renderer.removeStyle(canvas, 'transform');\n    this._renderer.removeStyle(canvas, 'transformOrigin');\n    this._renderer.removeStyle(canvas, 'width');\n    this._renderer.removeStyle(canvas, 'height');\n\n    // set w & h\n    const w = canvasRect.width;\n    const h = canvasRect.height;\n    ctx.canvas.width = w;\n    ctx.canvas.height = h;\n\n    // clear\n    ctx.clearRect(0, 0, w, h);\n\n    // translate and rotate\n    ctx.translate(w / 2, h / 2);\n    ctx.rotate(degreesRad);\n    ctx.drawImage(canvasClon, -canvasClon.width / 2, -canvasClon.height / 2);\n    const rootRect = this._rootRect();\n    this._setStylesForContImg({\n      width: w * this._scal3Fix,\n      height: h * this._scal3Fix,\n      x: x - rootRect.x,\n      y: y - rootRect.y\n    });\n\n    this._cropIfAutoCrop();\n  }\n\n  private imageSmoothingQuality(img: HTMLCanvasElement, config, quality: number): HTMLCanvasElement {\n    /** Calculate total number of steps needed */\n    let  numSteps = Math.ceil(Math.log(Math.max(img.width, img.height) / Math.max(config.height, config.width)) / Math.log(2)) - 1;\n    numSteps = numSteps <= 0 ? 0 : numSteps;\n\n    /**Array steps */\n    const steps = Array.from(Array(numSteps).keys());\n\n    /** Context */\n    const octx = img.getContext('2d');\n\n    const q = ((quality * 10) ** numSteps) / (10 ** numSteps);\n\n    /** If Steps => imageSmoothingQuality */\n    if (numSteps) {\n      /** Set size */\n      const w = img.width * quality;\n      const h = img.height * quality;\n      /** Only the new img is shown. */\n      octx.globalCompositeOperation = 'copy';\n\n      /** Steps */\n      (steps as Array<number>).forEach(() => {\n        octx.drawImage(img,\n          0, 0,\n          w, h\n        );\n      });\n    }\n\n    /**\n     * Step final\n     * Resizing & cropping image\n     */\n    const oc = document.createElement('canvas'),\n    ctx = oc.getContext('2d');\n    oc.width = config.width;\n    oc.height = config.height;\n    ctx.drawImage(img,\n      0, 0,\n      img.width * (q), img.height * (q),\n      0, 0,\n      oc.width, oc.height\n    );\n    return oc;\n  }\n\n  /**\n   * Crop Image\n   * Resizing & cropping image\n   */\n  crop(config?: ImgCropperConfig): ImgCropperEvent {\n    const newConfig = config ? mergeDeep({}, this.config || CONFIG_DEFAULT, config) : this.config;\n    const cropEvent = this._imgCrop(newConfig);\n    return cropEvent;\n  }\n\n  /**\n   * @ignore\n   */\n  _imgCrop(myConfig: ImgCropperConfig) {\n    const canvasElement: HTMLCanvasElement = document.createElement('canvas');\n    const imgRect = this._imgRect;\n    const left = imgRect.xc - myConfig.width / 2;\n    const top = imgRect.yc - myConfig.height / 2;\n    const scaleFix = this._scal3Fix;\n    const config = {\n      width: myConfig.width,\n      height: myConfig.height\n    };\n    canvasElement.width = config.width / scaleFix;\n    canvasElement.height = config.height / scaleFix;\n    const ctx = canvasElement.getContext('2d');\n    if (myConfig.fill) {\n      ctx.fillStyle = myConfig.fill;\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    }\n    ctx.drawImage(this._imgCanvas.nativeElement as any,\n      -(left / scaleFix), -(top / scaleFix),\n    );\n    let result = canvasElement;\n    const antiAliasedQ = myConfig.antiAliased ? .5 : 1;\n    if (myConfig.output === 0) {\n      result = this.imageSmoothingQuality(result, config, antiAliasedQ);\n    } else if (typeof myConfig.output === 'object') {\n      result = this.imageSmoothingQuality(result, myConfig.output, antiAliasedQ);\n    }\n    let url;\n    if (myConfig.type) {\n      url = result.toDataURL(`image/${myConfig.type}`);\n    } else {\n      url = result.toDataURL(this._defaultType);\n    }\n    const cropEvent = {\n      dataURL: url,\n      base64: url,\n      type: this._defaultType || myConfig.type,\n      name: this._fileName,\n      width: config.width,\n      height: config.height,\n      originalDataURL: this._originalImgBase64,\n      scale: this.scale,\n      rotation: this._rotation,\n      position: {\n        x: this._imgRect.xc,\n        y: this._imgRect.yc\n      }\n    };\n    this.isCropped = true;\n    this.cropped.emit(cropEvent);\n    return cropEvent;\n  }\n\n  private _rootRect(): DOMRect {\n    return this.elementRef.nativeElement.getBoundingClientRect() as DOMRect;\n  }\n  private _imgContainerRect(): DOMRect {\n    return this._imgContainer.nativeElement.getBoundingClientRect() as DOMRect;\n  }\n\n  private _areaCropperRect(): DOMRect {\n    return this._croppingContainer.nativeElement.getBoundingClientRect() as DOMRect;\n  }\n\n}\n\n/**\n * convertToValidDegrees(45) === 90\n * convertToValidDegrees(40) === 0\n * convertToValidDegrees(100) === 90\n * @ignore\n */\nfunction convertToValidDegrees(num: number) {\n  const val360 = limitNum(num, 360);\n  const val90 = limitNum(val360.result, 90);\n  const sign = Math.sign(num);\n  if (val90.result >= (90 / 2)) {\n    return 90 * (val90.parts + 1) * sign;\n  } else {\n    return 90 * val90.parts * sign;\n  }\n}\n\n/**\n * demo:\n * limitNum(450, 360) === 90\n * @ignore\n */\nfunction limitNum(num: number, num2: number) {\n  const numAbs = Math.abs(num);\n  const parts = Math.floor(numAbs / num2);\n  let result: number;\n  if (parts) {\n    result = numAbs - (num2 * parts);\n  } else {\n    result = num;\n  }\n  if (numAbs !== num) {\n    result *= -1;\n  }\n  return {\n    result,\n    parts\n  };\n}\n\n/**\n * @ignore\n */\nfunction createCanvasImg(img: HTMLCanvasElement | HTMLImageElement) {\n\n  // create a new canvas\n  const newCanvas = document.createElement('canvas');\n  const context = newCanvas.getContext('2d');\n\n  // set dimensions\n  newCanvas.width = img.width;\n  newCanvas.height = img.height;\n\n  // apply the old canvas to the new one\n  context.drawImage(img, 0, 0);\n\n  // return the new canvas\n  return newCanvas;\n}\n\nfunction fix(v, decimalPoints?: number) {\n  return +parseFloat(v).toFixed(decimalPoints || 0);\n}\n","import { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LyHammerGestureConfig } from '@alyle/ui';\n\nimport { LyResizingCroppingImages } from './resizing-cropping-images';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [LyResizingCroppingImages],\n  providers: [\n    { provide: HAMMER_GESTURE_CONFIG, useClass: LyHammerGestureConfig }\n  ],\n  declarations: [LyResizingCroppingImages]\n})\nexport class LyResizingCroppingImageModule {}\n"],"names":[],"mappings":"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"}
