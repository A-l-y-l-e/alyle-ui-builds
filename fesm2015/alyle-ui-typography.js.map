{"version":3,"file":"alyle-ui-typography.js","sources":["ng://@alyle/ui/typography/typography.directive.ts","ng://@alyle/ui/typography/typography.module.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, Input, OnInit, OnChanges } from '@angular/core';\nimport { LyTheme2, toBoolean, ThemeVariables, StyleContainer, mixinStyleUpdater, mixinColor } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -1;\nconst styles = (theme: ThemeVariables) => ({\n  root: {\n    margin: 0,\n    display: 'block',\n    '&': theme.typography ? theme.typography.root : null\n  }\n});\n\n/** @docs-private */\nenum Gutter {\n  default,\n  top,\n  bottom\n}\n\n/** @docs-private */\nexport class LyTypographyBase {\n  constructor(\n    public _theme: LyTheme2\n  ) { }\n}\n\n/** @docs-private */\nexport const LyTypographyMixinBase = mixinStyleUpdater(\n    mixinColor((LyTypographyBase)));\n\n@Directive({\n  selector: `[lyTyp]`,\n  inputs: [\n    'color'\n  ]\n})\nexport class LyTypography extends LyTypographyMixinBase implements OnInit, OnChanges {\n  /** @docs-private */\n  readonly classes = this._theme.addStyleSheet(styles, STYLE_PRIORITY);\n  private _lyTyp: string;\n  private _lyTypClass?: string;\n\n  private _gutter: boolean;\n  private _gutterClass: string;\n\n  private _gutterTop: boolean;\n  private _gutterTopClass: string;\n\n  private _gutterBottom: boolean;\n  private _gutterBottomClass: string;\n  private _noWrap: boolean;\n  private _noWrapClass?: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      if (val) {\n        this._lyTypClass = this._createTypClass(val, this._lyTypClass);\n      } else if (this._lyTypClass) {\n        this.renderer.removeClass(this._el.nativeElement, this._lyTypClass);\n        this._lyTypClass = undefined;\n      }\n    }\n  }\n  get lyTyp() {\n    return this._lyTyp;\n  }\n\n  /** The text will truncate with an ellipsis. */\n  @Input()\n  set noWrap(val: boolean) {\n    const newValue = toBoolean(val);\n    if (newValue) {\n      this._noWrapClass = this._theme.addSimpleStyle('lyTyp.noWrap', {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      });\n      this.renderer.addClass(this._el.nativeElement, this._noWrapClass);\n    } else if (this._noWrapClass) {\n      this.renderer.removeClass(this._el.nativeElement, this._noWrapClass);\n      this._noWrapClass = undefined;\n    }\n  }\n  get noWrap() {\n    return this._noWrap;\n  }\n\n  @Input()\n  set gutter(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutter) {\n      this._gutter = newVal;\n      this._gutterClass = this._createGutterClass(Gutter.default, newVal, this._gutterClass);\n    }\n  }\n  get gutter() {\n    return this._gutter;\n  }\n\n  @Input()\n  set gutterTop(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterTop) {\n      this._gutterTop = newVal;\n      // const newClass = this._createGutterClass(Gutter.top, newVal);\n      this._gutterTopClass = this._createGutterClass(Gutter.top, newVal, this._gutterTopClass);\n    }\n  }\n  get gutterTop() {\n    return this._gutterTop;\n  }\n\n  @Input()\n  set gutterBottom(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterBottom) {\n      this._gutterBottom = newVal;\n      this._gutterBottomClass = this._createGutterClass(Gutter.bottom, newVal, this._gutterBottomClass);\n    }\n  }\n  get gutterBottom() {\n    return this._gutterBottom;\n  }\n\n  constructor(\n    _theme: LyTheme2,\n    private _el: ElementRef,\n    private renderer: Renderer2\n  ) {\n    super(_theme);\n    this.renderer.addClass(this._el.nativeElement, this.classes.root);\n  }\n\n  ngOnInit() {\n    if ((this.gutterTop && this.gutterBottom)) {\n      throw new Error(`use '<element lyTyp gutter>' instead of '<element lyTyp gutterTop gutterBottom>'`);\n    }\n  }\n\n  ngOnChanges() {\n    this.updateStyle(this._el.nativeElement);\n  }\n\n  private _createTypClass(key: string, instance?: string) {\n    const newKey = `k-typ:${key}`;\n\n    return this._theme.addStyle(newKey,\n      (theme: ThemeVariables) => {\n        const { typography } = theme;\n        const styl: StyleContainer = Object.assign({ }, typography.lyTyp[key || 'body1']);\n        if (styl.lineHeight) {\n          styl.lineHeight = theme.pxToRem(styl.lineHeight as number);\n        }\n        if (typeof styl.letterSpacing === 'number') {\n          styl.letterSpacing = `${styl.letterSpacing}px`;\n        }\n        // set default fontFamily\n        styl.fontFamily = styl.fontFamily || typography.fontFamily;\n        return styl;\n      },\n      this._el.nativeElement,\n      instance,\n      STYLE_PRIORITY\n    );\n  }\n\n  private _createGutterClass(name: Gutter, val: boolean, instance: string) {\n    return this._theme.addStyle(\n      `k-typ-gutter:${name}:${val}`,\n      (theme: ThemeVariables) => {\n        const gutter = name === Gutter.default;\n        return (\n          `margin-top:${ val && (gutter || name === Gutter.top) ? theme.typography.gutterTop : 0 }em;` +\n          `margin-bottom:${ val && (gutter || name === Gutter.bottom) ? theme.typography.gutterBottom : 0 }em;`\n        );\n      },\n      this._el.nativeElement,\n      instance,\n      STYLE_PRIORITY\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyCommonModule } from '@alyle/ui';\n\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  exports: [LyTypography, LyCommonModule],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n"],"names":["tslib_1.__decorate"],"mappings":"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"}