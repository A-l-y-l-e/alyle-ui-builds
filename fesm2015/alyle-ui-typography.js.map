{"version":3,"file":"alyle-ui-typography.js.map","sources":["ng://@alyle/ui/typography/typography.directive.ts","ng://@alyle/ui/typography/typography.module.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, Input, OnInit } from '@angular/core';\nimport { LyTheme2, toBoolean, ThemeVariables, StyleContainer } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -1;\nconst styles = (theme: ThemeVariables) => ({\n  root: {\n    margin: 0,\n    display: 'block',\n    ...theme.typography.root\n  }\n});\n\n/** @docs-private */\nenum Gutter {\n  default,\n  top,\n  bottom,\n}\n\n@Directive({\n  selector: `[lyTyp]`\n})\nexport class LyTypography implements OnInit {\n  /** @docs-private */\n  readonly classes = this.style.addStyleSheet(styles, STYLE_PRIORITY);\n  private _lyTyp: string;\n  private _lyTypClass?: string;\n\n  private _gutter: boolean;\n  private _gutterClass: string;\n\n  private _gutterTop: boolean;\n  private _gutterTopClass: string;\n\n  private _gutterBottom: boolean;\n  private _gutterBottomClass: string;\n  private _noWrap: boolean;\n  private _noWrapClass?: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      if (val) {\n        this._lyTypClass = this._createTypClass(val, this._lyTypClass);\n      } else if (this._lyTypClass) {\n        this.renderer.removeClass(this.elementRef.nativeElement, this._lyTypClass);\n        this._lyTypClass = undefined;\n      }\n    }\n  }\n  get lyTyp() {\n    return this._lyTyp;\n  }\n\n  /** The text will truncate with an ellipsis. */\n  @Input()\n  set noWrap(val: boolean) {\n    const newValue = toBoolean(val);\n    if (newValue) {\n      this._noWrapClass = this.style.addSimpleStyle('lyTyp.noWrap', {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      });\n      this.renderer.addClass(this.elementRef.nativeElement, this._noWrapClass);\n    } else if (this._noWrapClass) {\n      this.renderer.removeClass(this.elementRef.nativeElement, this._noWrapClass);\n      this._noWrapClass = undefined;\n    }\n  }\n  get noWrap() {\n    return this._noWrap;\n  }\n\n  @Input()\n  set gutter(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutter) {\n      this._gutter = newVal;\n      this._gutterClass = this._createGutterClass(Gutter.default, newVal, this._gutterClass);\n    }\n  }\n  get gutter() {\n    return this._gutter;\n  }\n\n  @Input()\n  set gutterTop(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterTop) {\n      this._gutterTop = newVal;\n      // const newClass = this._createGutterClass(Gutter.top, newVal);\n      this._gutterTopClass = this._createGutterClass(Gutter.top, newVal, this._gutterTopClass);\n    }\n  }\n  get gutterTop() {\n    return this._gutterTop;\n  }\n\n  @Input()\n  set gutterBottom(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterBottom) {\n      this._gutterBottom = newVal;\n      this._gutterBottomClass = this._createGutterClass(Gutter.bottom, newVal, this._gutterBottomClass);\n    }\n  }\n  get gutterBottom() {\n    return this._gutterBottom;\n  }\n\n  constructor(\n    private style: LyTheme2,\n    private elementRef: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.renderer.addClass(this.elementRef.nativeElement, this.classes.root);\n  }\n\n  ngOnInit() {\n    if ((this.gutterTop && this.gutterBottom)) {\n      throw new Error(`use '<element lyTyp gutter>' instead of '<element lyTyp gutterTop gutterBottom>'`);\n    }\n  }\n\n  private _createTypClass(key: string, instance?: string) {\n    const newKey = `k-typ:${key}`;\n\n    return this.style.addStyle(newKey,\n      (theme: ThemeVariables) => {\n        const { typography } = theme;\n        const styl: StyleContainer = Object.assign({ }, typography.lyTyp[key || 'body1']);\n        if (styl.lineHeight) {\n          styl.lineHeight = theme.pxToRem(styl.lineHeight as number);\n        }\n        if (typeof styl.letterSpacing === 'number') {\n          styl.letterSpacing = `${styl.letterSpacing}px`;\n        }\n        // set default fontFamily\n        styl.fontFamily = styl.fontFamily || typography.fontFamily;\n        return styl;\n      },\n      this.elementRef.nativeElement,\n      instance,\n      STYLE_PRIORITY\n    );\n  }\n\n  private _createGutterClass(name: Gutter, val: boolean, instance: string) {\n    return this.style.addStyle(\n      `k-typ-gutter:${name}:${val}`,\n      (theme: ThemeVariables) => {\n        const gutter = name === Gutter.default;\n        return (\n          `margin-top:${ val && (gutter || name === Gutter.top) ? theme.typography.gutterTop : 0 }em;` +\n          `margin-bottom:${ val && (gutter || name === Gutter.bottom) ? theme.typography.gutterBottom : 0 }em;`\n        );\n      },\n      this.elementRef.nativeElement,\n      instance,\n      STYLE_PRIORITY\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyCommonModule } from '@alyle/ui';\n\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  exports: [LyTypography, LyCommonModule],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n"],"names":[],"mappings":"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"}
