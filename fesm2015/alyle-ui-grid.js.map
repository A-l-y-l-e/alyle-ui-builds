{"version":3,"file":"alyle-ui-grid.js.map","sources":["ng://@alyle/ui/grid/grid.ts","ng://@alyle/ui/grid/grid.module.ts"],"sourcesContent":["import { Directive, ElementRef, Input, Optional, Inject, OnInit } from '@angular/core';\nimport { LyTheme2, eachMedia } from '@alyle/ui';\nimport { LY_MEDIA_QUERIES } from '@alyle/ui/responsive';\n\nconst COL_VALUES = { };\n\nconst styles = ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    boxSizing: 'border-box'\n  }\n});\n\n/**\n * example:\n * <ly-grid container [spacing]=\"'16 8@XSmall'\">\n *   <ly-grid item [col]=\"'6 12@XSmall'\">\n *     <div>6 12@XSmall</div>\n *   </ly-grid>\n *   <ly-grid item [col]=\"'6 12@XSmall'\">\n *     <div>6 12@XSmall</div>\n *   </ly-grid>\n * </ly-grid>\n */\n@Directive({\n  selector: 'ly-grid[container]'\n})\nexport class LyGrid {\n  /**\n   * Styles\n   * @ignore\n   */\n  classes = this.theme.addStyleSheet(styles, 'lyGrid');\n  private _spacing: string | number;\n  private _spacingClass: string;\n  private _negativeMarginClass: string;\n\n  /**\n   * Defines the space between the component with the `item` attribute.\n   */\n  @Input()\n  get spacing(): string | number {\n    return this._spacing;\n  }\n  set spacing(val: string | number) {\n    if (val !== this.spacing) {\n      this._spacing = val;\n      this._spacingClass = this.theme.addStyle(`lyGrid-spacing:${val}`, () => {\n        if (typeof val === 'number') {\n          return `padding:${val / 2}px;`;\n        } else {\n          const spacingStyles: {\n            padding?: string\n          } = {};\n          eachMedia(val, (value, media, len) => {\n            const padding = `${(+value) / 2}px`;\n            if (len) {\n              spacingStyles[`@media ${this.mediaQueries[media]}`] = {\n                padding\n              };\n            } else {\n              spacingStyles.padding = padding;\n            }\n          });\n          return spacingStyles as any;\n        }\n      });\n      this._negativeMarginClass = this.theme.addStyle(`lyGrid-negative-margin:${val}`, () => {\n        if (typeof val === 'number') {\n          return `margin:${val / -2}px;width: calc(100% + ${val}px);`;\n        } else {\n          let negativeMarginStyles: {\n            margin?: string\n            width?: string\n          };\n          eachMedia(val, (value, media, len) => {\n            const negativeMarginstyles = {\n              margin: `${(-value) / 2}px`,\n              width: `calc(100% + ${value}px)`\n            };\n            if (len) {\n              if (!negativeMarginStyles) {\n                negativeMarginStyles = {};\n              }\n              negativeMarginStyles[`@media ${this.mediaQueries[media]}`] = negativeMarginstyles;\n            } else {\n              negativeMarginStyles = negativeMarginstyles;\n            }\n          });\n          return negativeMarginStyles as any;\n        }\n      }, this.elementRef.nativeElement, this._negativeMarginClass);\n    }\n  }\n\n  get spacingClass() {\n    return this._spacingClass;\n  }\n\n  constructor(\n    @Optional() @Inject(LY_MEDIA_QUERIES) private mediaQueries: any,\n    private theme: LyTheme2,\n    private elementRef: ElementRef,\n  ) {\n    this.elementRef.nativeElement.classList.add(this.classes.root);\n  }\n}\n\n@Directive({\n  selector: 'ly-grid[item]'\n})\nexport class LyGridCol implements OnInit {\n  private _col: string | number;\n  private _colClass: string;\n\n  @Input()\n  get col(): string | number {\n    return this._col;\n  }\n  set col(val: string | number) {\n    if (val !== this.col) {\n      this._colClass = this.theme.addStyle(`lyGrid-negative-margin:${val}`, () => {\n        if (typeof val === 'number') {\n          return getColStyle(val);\n        } else {\n          let colStyles: {\n            maxWidth?: string | number\n            flexBasis?: string | number\n            flexGrow?: number\n          };\n          eachMedia(val, (value, media, len) => {\n            const newColStyles = getColStyle(+value);\n            if (len) {\n              if (!colStyles) {\n                colStyles = {};\n              }\n              colStyles[`@media ${this.mediaQueries[media]}`] = newColStyles;\n            } else {\n              colStyles = newColStyles;\n            }\n          });\n          return colStyles as any;\n        }\n      }, this.el.nativeElement, this._colClass);\n    }\n  }\n\n  constructor(\n    @Optional() @Inject(LY_MEDIA_QUERIES) private mediaQueries: any,\n    private gridContainer: LyGrid,\n    private el: ElementRef,\n    private theme: LyTheme2\n  ) {\n    if (!gridContainer) {\n      throw new Error(`Rquire`);\n    }\n  }\n\n  ngOnInit() {\n    this._updateSpacing();\n  }\n\n  private _updateSpacing() {\n    if (this.gridContainer.spacingClass) {\n      this.el.nativeElement.classList.add(this.gridContainer.spacingClass);\n    }\n  }\n\n}\n\nfunction getColStyle(val: number) {\n  return {\n    maxWidth: val ? getColVal(val) : '100%',\n    flexBasis: val ? getColVal(val) : 0,\n    flexGrow: val ? 0 : 1\n  };\n}\n\nfunction getColVal(val: string | number): string {\n  return val in COL_VALUES\n              ? COL_VALUES[val]\n              : COL_VALUES[val] = `${+val * 100 / 12}%`;\n}\n","import { NgModule } from '@angular/core';\nimport { LyGrid, LyGridCol } from './grid';\n\n@NgModule({\n  exports: [LyGrid, LyGridCol],\n  declarations: [LyGrid, LyGridCol]\n})\nexport class LyGridModule { }\n"],"names":[],"mappings":"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"}
