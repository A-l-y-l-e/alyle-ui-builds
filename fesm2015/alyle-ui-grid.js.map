{"version":3,"file":"alyle-ui-grid.js","sources":["ng://@alyle/ui/grid/grid.ts","ng://@alyle/ui/grid/grid.module.ts","ng://@alyle/ui/grid/alyle-ui-grid.ts"],"sourcesContent":["import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\nimport {\n  LyTheme2,\n  eachMedia,\n  ThemeVariables,\n  StyleCollection,\n  StyleTemplate,\n  LyHostClass,\n  StyleRenderer } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -1;\n\nconst ALIGN_ALIAS = {\n  rowReverse: 'row-reverse',\n  columnReverse: 'column-reverse',\n  wrapReverse: 'wrap-reverse',\n  start: 'flex-start',\n  end: 'flex-end',\n  between: 'space-between',\n  around: 'space-around',\n  evenly: 'space-evenly',\n};\n\nexport type AlignItems = 'start' | 'center' | 'end' | 'stretch' | 'baseline';\n\nexport const STYLES = () => ({\n  $priority: STYLE_PRIORITY,\n  $name: LyGrid.Ð¸,\n  root: (className: string) => `${className}{width:100%;display:flex;flex-wrap:wrap;box-sizing:border-box;}`,\n  item: (className: string) => `${className},${className} :first-child{box-sizing:border-box;}`\n});\n\nexport type Justify = 'start' | 'center' | 'end' | 'between' | 'around' | 'evenly';\nexport type Direction = 'row' | 'rowReverse' | 'column' | 'columnReverse';\n\n/**\n * Grid container\n */\n@Directive({\n  selector: 'ly-grid[container]'\n})\nexport class LyGrid {\n  static readonly Ð¸ = 'LyGrid';\n  /**\n   * Styles\n   * @docs-private\n   */\n  readonly classes = this.theme.renderStyleSheet(STYLES);\n\n  private _spacing: string | number;\n  _spacingClass?: string;\n\n  private _spacingX: string | number;\n  _spacingXClass?: string;\n\n  private _spacingY: string | number;\n  _spacingYClass?: string;\n\n\n  private _negativeMarginClass?: string;\n\n  private _justify: Justify;\n  private _justifyClass?: string;\n\n  private _direction: Direction;\n  private _directionClass?: string;\n\n  private _alignItems: AlignItems;\n  private _alignItemsClass?: string;\n\n  @Input()\n  get spacingX(): string | number {\n    return this._spacingX;\n  }\n  set spacingX(val: string | number) {\n    if (val !== this.spacingX) {\n      this._spacingX = val;\n      this._createSpacingClass(undefined, val);\n    }\n  }\n\n  @Input()\n  get spacingY(): string | number {\n    return this._spacingY;\n  }\n  set spacingY(val: string | number) {\n    if (val !== this.spacingY) {\n      this._spacingY = val;\n      this._createSpacingClass(undefined, undefined, val);\n    }\n  }\n\n  /**\n   * Defines the space between the component with the `item` attribute.\n   * Support breakpoints\n   */\n  @Input()\n  get spacing(): string | number {\n    return this._spacing;\n  }\n  set spacing(val: string | number) {\n    if (val !== this.spacing) {\n      this._spacing = val;\n      this._createSpacingClass(val);\n    }\n  }\n\n  /**\n   * Only one param must be defined\n   */\n  private _createSpacingClass(xy?: string | number, x?: string | number, y?: string | number) {\n    const newSpacingClass = this.theme.addStyle(`lyGrid-spacing:${xy}Â·${x}Â·${y}`, (theme: ThemeVariables) => {\n      const val = (xy || x || y) as string | number;\n      const spacingStyles: {\n        padding?: string\n      } = {};\n      eachMedia(val, (value, media) => {\n        const valuePadding = `${(+value) / 2}px`;\n        const padding = xy != null\n          ? valuePadding\n          : x != null\n            ? `0 ${valuePadding}`\n            : `${valuePadding} 0`;\n        if (media) {\n          spacingStyles[theme.getBreakpoint(media)] = {\n            padding\n          };\n        } else {\n          spacingStyles.padding = padding;\n        }\n      });\n      return spacingStyles;\n    }, undefined, undefined, STYLE_PRIORITY);\n\n    if (xy) {\n      this._spacingClass = newSpacingClass;\n    } else {\n      if (x) {\n        this._spacingXClass = newSpacingClass;\n      }\n      if (y) {\n        this._spacingYClass = newSpacingClass;\n      }\n    }\n\n    this._negativeMarginClass = this.theme.addStyle(`lyGrid-negative-margin:${xy}Â·${x}Â·${y}`, (theme: ThemeVariables) => {\n      const val = (xy || x || y) as string | number;\n      let negativeMarginStyles: {\n        margin?: string\n        width?: string\n      };\n      eachMedia(val, (value, media) => {\n        const valueMargin = `${(-value) / 2}px`;\n        const margin = xy != null\n          ? valueMargin\n          : x != null\n            ? `0 ${valueMargin}`\n            : `${valueMargin} 0`;\n        const negativeMarginstyles: {\n          margin: string\n          width?: string\n        } = { margin };\n\n        if (xy != null || x != null) {\n          negativeMarginstyles.width = `calc(100% + ${value}px)`;\n        }\n        if (media) {\n          if (!negativeMarginStyles) {\n            negativeMarginStyles = {};\n          }\n          negativeMarginStyles[theme.getBreakpoint(media)] = negativeMarginstyles;\n        } else {\n          negativeMarginStyles = negativeMarginstyles;\n        }\n      });\n      return negativeMarginStyles!;\n    }, this.el.nativeElement, this._negativeMarginClass, STYLE_PRIORITY);\n  }\n\n  /**\n   * Defines the justify-content style property.\n   * Support breakpoints\n   */\n  @Input()\n  get justify(): Justify {\n    return this._justify;\n  }\n  set justify(val: Justify) {\n    if (val !== this.justify) {\n      this._justify = val;\n      this._justifyClass = this.theme.addStyle(`lyGrid-justify:${val}`, (theme: ThemeVariables) => {\n        let justifyStyles: {\n          justifyContent?: string\n        };\n        eachMedia(val, (value, media) => {\n          const newJustifyStyles = {\n            justifyContent: value in ALIGN_ALIAS\n            ? ALIGN_ALIAS[value]\n            : value\n          };\n          if (media) {\n            if (!justifyStyles) {\n              justifyStyles = {};\n            }\n            justifyStyles[theme.getBreakpoint(media)] = newJustifyStyles;\n          } else {\n            justifyStyles = newJustifyStyles;\n          }\n        });\n        return justifyStyles!;\n      }, this.el.nativeElement, this._justifyClass, STYLE_PRIORITY);\n    }\n  }\n\n  /**\n   * Defines the justify-content style property.\n   * Support breakpoints\n   */\n  @Input()\n  get direction(): Direction {\n    return this._direction;\n  }\n  set direction(val: Direction) {\n    if (val !== this.direction) {\n      this._direction = val;\n      this._directionClass = this.theme.addStyle(`lyGrid-direction:${val}`, (theme: ThemeVariables) => {\n        let directionStyles: {\n          flexDirection?: string\n        };\n        eachMedia(val, (value, media) => {\n          const newDirectionStyles = {\n            flexDirection: value in ALIGN_ALIAS\n            ? ALIGN_ALIAS[value]\n            : value\n          };\n          if (media) {\n            if (!directionStyles) {\n              directionStyles = {};\n            }\n            directionStyles[theme.getBreakpoint(media)] = newDirectionStyles;\n          } else {\n            directionStyles = newDirectionStyles;\n          }\n        });\n        return directionStyles!;\n      }, this.el.nativeElement, this._directionClass, STYLE_PRIORITY);\n    }\n  }\n\n  /**\n   * Defines the `align-items` style property.\n   * Support breakpoints\n   */\n  @Input()\n  set alignItems(val: AlignItems) {\n    this._alignItems = val;\n    this._alignItemsClass = this.theme.addStyle(`lyGrid.align:${val}`, (theme: ThemeVariables) => {\n      let alignItemsStyles: {\n        alignItems?: string,\n        [media: string]: {\n          alignItems?: string\n        } | string | undefined\n      };\n      eachMedia(val, (value, media) => {\n        const newAlignItemsStyles = {\n          alignItems: value in ALIGN_ALIAS\n          ? ALIGN_ALIAS[value]\n          : value\n        };\n        if (media) {\n          if (!alignItemsStyles) {\n            alignItemsStyles = {};\n          }\n          alignItemsStyles[theme.getBreakpoint(media)] = newAlignItemsStyles;\n        } else {\n          alignItemsStyles = newAlignItemsStyles;\n        }\n      });\n      return alignItemsStyles!;\n    }, this.el.nativeElement, this._alignItemsClass, STYLE_PRIORITY);\n  }\n  get alignItems() {\n    return this._alignItems;\n  }\n\n  constructor(\n    private theme: LyTheme2,\n    private el: ElementRef,\n  ) {\n    this.el.nativeElement.classList.add(this.classes.root);\n  }\n}\n\n@Directive({\n  selector: 'ly-grid[item], [ly-grid-item], [lyGridItem]',\n  providers: [\n    LyHostClass,\n    StyleRenderer\n  ]\n})\nexport class LyGridItem implements OnInit {\n  static readonly Ð¸ = 'LyGridItem';\n  private _col: string | number;\n  private _colClass: string | null;\n\n  private _order: string | number;\n  private _orderClass: string;\n\n  /**\n   * Defines the number of grids\n   * Support breakpoints\n   */\n  @Input()\n  get col(): string | number {\n    return this._col;\n  }\n  set col(val: string | number) {\n    const newVal = this._col = val || 0;\n    this._colClass = this._sr.add(`${LyGridItem.Ð¸}--col-${newVal}`, (theme: ThemeVariables) => {\n      const medias = new StyleCollection<StyleTemplate>();\n      eachMedia(newVal, (value, media) => {\n        if (typeof value === 'string') {\n          throw new Error(`${LyGridItem.Ð¸}: '${val}' is not valid.`);\n        }\n        const maxWidth = value ? value * 100 / 12 : 100;\n        const flexBasis = value ? value * 100 / 12 : 0;\n        const flexGrow = value ? 0 : 1;\n\n        if (media) {\n          medias.add(\n            (className: string) => `@media ${theme.breakpoints[media]}{${className}{max-width:${maxWidth}%;flex-basis:${flexBasis}%;flex-grow:${flexGrow};}}`\n          );\n        } else {\n          medias.add(\n            (className: string) => `${className}{max-width:${maxWidth}%;flex-basis:${flexBasis}%;flex-grow:${flexGrow};}`\n          );\n        }\n      });\n      return medias.css;\n    }, STYLE_PRIORITY, this._colClass);\n  }\n\n  @Input('lyGridItem')\n  set gridItemCol(val: string | number) {\n    this.col = val;\n  }\n  get gridItemCol() {\n    return this.col;\n  }\n\n  /**\n   * Defines the order style property.\n   * Support breakpoints\n   */\n  @Input()\n  get order(): string | number {\n    return this._order;\n  }\n  set order(val: string | number) {\n    if (val !== this.order) {\n      this._order = val;\n      this._orderClass = this.theme.addStyle(`lyGrid-order:${val}`, (theme: ThemeVariables) => {\n        let orderStyles: {\n          order?: string | number\n        };\n        eachMedia(`${val}`, (value, media) => {\n          const newOrderStyles = {\n            order: value\n          };\n          if (media) {\n            if (!orderStyles) {\n              orderStyles = {};\n            }\n            orderStyles[theme.getBreakpoint(media)] = newOrderStyles;\n          } else {\n            orderStyles = newOrderStyles;\n          }\n        });\n        return orderStyles!;\n      }, this.el.nativeElement, this._orderClass, STYLE_PRIORITY);\n    }\n  }\n\n  constructor(\n    private gridContainer: LyGrid,\n    private el: ElementRef,\n    renderer: Renderer2,\n    private theme: LyTheme2,\n    private _sr: StyleRenderer\n  ) {\n    if (!gridContainer) {\n      throw new Error(`Require parent <ly-grid container>`);\n    }\n    renderer.addClass(el.nativeElement, this.gridContainer.classes.item);\n  }\n\n  ngOnInit() {\n    this._updateSpacing();\n  }\n\n  private _updateSpacing() {\n    if (this.gridContainer._spacingClass) {\n      this.el.nativeElement.classList.add(this.gridContainer._spacingClass);\n    } else {\n      if (this.gridContainer._spacingXClass) {\n        this.el.nativeElement.classList.add(this.gridContainer._spacingXClass);\n      }\n      if (this.gridContainer._spacingYClass) {\n        this.el.nativeElement.classList.add(this.gridContainer._spacingYClass);\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LyGrid, LyGridItem } from './grid';\n\n@NgModule({\n  exports: [LyGrid, LyGridItem],\n  declarations: [LyGrid, LyGridItem]\n})\nexport class LyGridModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}