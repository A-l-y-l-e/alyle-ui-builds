import * as tslib_1 from "tslib";
import { shadowBuilder, StyleCollection, mergeThemes } from '@alyle/ui';
import { Color } from '@alyle/ui/color';
import { MinimaBase } from './base';
var contrast = new Color(0xffffff);
var shadow = new Color(0x333333);
var MinimaLight = /** @class */ (function (_super) {
    tslib_1.__extends(MinimaLight, _super);
    function MinimaLight() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = 'minima-light';
        _this.primary = {
            default: new Color(0x6200EE),
            contrast: contrast
        };
        _this.accent = {
            default: new Color(0xFF2997),
            contrast: contrast,
        };
        _this.warn = {
            default: new Color(0xf5414e),
            contrast: contrast
        };
        _this.action = {
            default: new Color(0, 0, 0, .6),
            contrast: new Color(0xffffff)
        };
        _this.background = {
            default: new Color(0xfafafa),
            primary: {
                default: new Color(0xffffff),
                shadow: shadow
            },
            secondary: new Color(0xfafafa),
            tertiary: new Color(0xefefef),
        };
        _this.hover = new Color(0, 0, 0, 0.04);
        _this.paper = {
            default: new Color(0xffffff),
            shadow: shadow
        };
        _this.disabled = {
            default: new Color(0, 0, 0, 0.27),
            contrast: new Color(0, 0, 0, 0.41)
        };
        _this.text = {
            default: new Color(0, 0, 0, 0.87),
            primary: new Color(0, 0, 0, 0.87),
            secondary: new Color(0, 0, 0, 0.54),
            disabled: new Color(0, 0, 0, 0.26),
            hint: new Color(0, 0, 0, 0.38),
            dark: new Color(0, 0, 0, 0.87),
            light: new Color(0xffffff)
        };
        _this.divider = new Color(0, 0, 0, 0.12);
        _this.colorShadow = new Color(0x333333);
        _this.shadow = new Color(0x333333);
        _this.drawer = {
            backdrop: new Color(0, 0, 0, .6)
        };
        _this.bar = new Color(0xf5f5f5);
        _this.field = mergeThemes(_this.field, {
            root: function (_a) {
                var container = _a.container, fieldset = _a.fieldset, labelContainer = _a.labelContainer, placeholder = _a.placeholder, label = _a.label;
                return function (className) { return className + " " + container + ":after," + className + " " + fieldset + "," + className + " " + labelContainer + "{border-color:" + new Color(0, 0, 0, 0.23) + ";}" + className + " " + label + "," + className + " " + placeholder + "{color:" + new Color(0, 0, 0, 0.6) + ";}"; };
            },
            appearance: {
                filled: function (_a) {
                    var container = _a.container;
                    return function (className) { return className + " " + container + "{background-color:" + new Color(0, 0, 0, 0.04) + ";}"; };
                }
            }
        });
        _this.snackBar = {
            root: new StyleCollection(function (className) { return className + "{background:" + new Color(0x323232) + ";color:" + new Color(0xffffff) + ";box-shadow:" + shadowBuilder(4, new Color(0x323232)) + ";}"; })
        };
        _this.tooltip = {
            root: new StyleCollection(function () { return function (className) { return className + "{background:" + new Color(50, 50, 50, 0.85) + ";color:" + new Color(0xffffff) + ";}"; }; })
        };
        return _this;
    }
    return MinimaLight;
}(MinimaBase));
export { MinimaLight };
//# sourceMappingURL=data:application/json;base64,