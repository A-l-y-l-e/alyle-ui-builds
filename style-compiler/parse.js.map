{"version":3,"file":"parse.js","sourceRoot":"","sources":["../../../../lib/src/parse.ts"],"names":[],"mappings":"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","sourcesContent":["import { Color } from '@alyle/ui/color';\n\nconst LINE_FEED_REGEX = () => /(\\n?[^\\n]+\\n?)/g;\nconst AMPERSAND_REGEX = () => /&/g;\nconst STYLE_TEMPLATE_REGEX = () => /StyleTemplate\\[[\\w]+\\]/g;\nlet id: number = 0;\n\n/**\n * Transform a lyl style block to CSS\n *\n * Allowed blocks:\n *\n * // Simple\n * const BUTTON_STYLE = lyl `{\n *   padding: 8px 12px\n *   font-size: 14px\n *   border-radius: 9px\n *   border: 1px solid #e0e0e0\n * }`\n *\n * // Nesting\n * const style = lyl `{\n *   ul > {\n *     li {\n *       list-style-type: none;\n *     }\n *   }\n *   p {\n *     ~ {\n *       span {\n *         opacity: 0.8;\n *       }\n *     }\n *   }\n * }`\n *\n */\nexport class LylParse {\n\n  constructor(\n    private _template: string,\n    private _className: string = '${className}'\n  ) { }\n\n  toCss() {\n    const selectors: (string[])[] = [];\n    let selector: null | string = null;\n    const rules = new Map<string, string[]>();\n    this._template\n      .replace(/(\\/\\/\\s[^\\n\\r]*(?:[\\n\\r]+|$))/g, '')\n      .replace(/,\\n/g, ',')\n      .replace(LINE_FEED_REGEX(), (_ex, fullLine: string) => {\n      fullLine = fullLine.trim();\n\n      if (fullLine.endsWith('{')) {\n        if (selectors.length === 0) {\n          selectors.push([this._className]);\n          selector = selectors[0][0];\n        } else {\n          const line_1 = fullLine.slice(0, fullLine.length - 1).trim();\n          const isMediaQuery = line_1.includes('@');\n          if (isMediaQuery) {\n            selectors.push(\n              [line_1.trim()]\n            );\n            if (!rules.has(line_1)) {\n              rules.set(line_1, []);\n            }\n          } else {\n            selectors.push(\n              line_1\n              .split(',')\n              .map(_ => _.trim())\n            );\n          }\n          selector = this._resolveSelectors(selectors);\n\n        }\n\n\n        if (!rules.has(selector)) {\n          rules.set(selector, []);\n        }\n      } else if (fullLine.length === 1 && fullLine.endsWith('}')) {\n        selectors.pop();\n        if (selectors.length) {\n          selector = this._resolveSelectors(selectors);\n          if (!rules.has(selector)) {\n            rules.set(selector, []);\n          }\n        }\n      } else if (fullLine.startsWith('/* >> ds')) {\n        selector = this._resolveSelectors(selectors);\n        const lin = fullLine;\n\n        // Ignore compiled css\n        rules.get(selector)!.push(lin);\n        // fullLine = lin;\n        // /** For non LylModule< */else {\n        //   fullLine = `\\${(${lin.slice(2, lin.length - 1)})(\\`${selector}\\`)}`;\n        //   rules.set(createUniqueCommentSelector('ds'), fullLine);\n        // } /** for non LylModule>  */\n      } else if (fullLine.startsWith('...')) {\n        // for non LylModule>\n        const content = fullLine.slice(3);\n        selector = this._resolveSelectors(selectors);\n        // Ignore compiled css\n        rules.get(selector)!.push(`${createUniqueCommentSelector('cc')}${content}`);\n      } else {\n        if (fullLine) {\n          if (fullLine.includes('undefined') || fullLine.startsWith('// ')) {\n            return '';\n          }\n          if (fullLine.endsWith(';')) {\n            throw new Error(`Do not require semicolon in [${fullLine}]`);\n          }\n          if (fullLine.includes(': ')) {\n            fullLine = fullLine.replace(': ', ':');\n          }\n          fullLine += ';';\n          rules.get(selector!)!.push(fullLine);\n        }\n      }\n      return '';\n    });\n\n    // Join media queries & keyframes\n    rules.forEach((val, key) => {\n      const matchArray = key.match(/(@[^\\${]*(?:\\${[^{]*)*){/);\n      if (matchArray) {\n        const media = matchArray[1];\n        if (media !== key && val.length) {\n          const after = rules.get(media)!;\n          const sel = key.replace(media + '{', '');\n          const newValue = after + val.reduce((previous, current) => {\n\n            const last = previous[previous.length - 1];\n\n            if (current.startsWith('/* >> ds')) {\n              previous.push(current.replace(/\\|\\|\\&\\|\\|/g, sel));\n            } else if (current.startsWith('/* >> cc')) {\n              previous.push(transformCC(current, sel));\n            } else {\n              if (Array.isArray(last)) {\n                last.push(current);\n              } else {\n                previous.push([current]);\n              }\n            }\n            return previous;\n          }, [] as (string | string[])[])\n            .map(item => Array.isArray(item) ? `${sel}{${item.join('')}}` : item).join('');\n          // const newValue = after\n          // + sel\n          // + `{${val.join('')}}`;\n          rules.set(media, [newValue]);\n          rules.delete(key);\n        }\n      }\n    });\n\n    return Array.from(rules.entries())\n      .filter(rule => rule[1])\n      .map(rule => {\n        const sel = rule[0];\n        const contents = rule[1];\n        const css: string[] = [];\n        const contentRendered: string[] = [];\n        const set = new Set<string[]>();\n\n        for (let index = 0; index < contents.length; index++) {\n          const content = contents[index];\n          if (content) {\n            if (content.startsWith('/* >> ds')) {\n              contentRendered.push(content.replace(/\\|\\|\\&\\|\\|/g, sel));\n              set.add(contentRendered);\n            } else if (content.startsWith('/* >> cc')) {\n              contentRendered.push(transformCC(content, sel));\n              set.add(contentRendered);\n            } else {\n              // css += `${sel}{${content}}`;\n              css.push(content);\n              set.add(css);\n            }\n          }\n        }\n        return Array.from(set).map((_) => {\n          if (_ === css) {\n            return css.length\n            ? `${sel}{${css.join('')}}`\n            : '';\n          } else {\n            return _.join('');\n          }\n        }).join('');\n        // return (css\n        //   ? `${sel}{${css}}`\n        //   :  '') + contentRendered;\n        // if (content.startsWith('/* >> ds')) {\n        //   return content.replace(/\\|\\|\\&\\|\\|/g, sel);\n        // }\n        // if (content.startsWith('/* >> cc')) {\n        //   content = content.replace(/\\/\\* >> cc[^\\/\\*]+\\*\\//g, '');\n        //   let variable = content.slice(2, content.length - 1);\n        //   variable = `st2c((${variable}), \\`${sel}\\`)`;\n        //   return `\\${${variable}}`;\n        // }\n        // // for non LylModule>\n\n        // if (sel.startsWith('@')) {\n        //   return `${sel}{${rule[1]}}`;\n        // }\n        // return `${sel}{${content}}`;\n      }).join('');\n\n  }\n\n  private _resolveSelectors(selectors: (string[])[]) {\n    let media: string | null = null;\n    const sel = selectors\n      .map(_ => _.filter(__ => {\n        if (__.startsWith('@')) {\n          // save media\n          media = __;\n          return false;\n        }\n        return __;\n      }))\n      .filter(_ => _.length)\n      .reduce((prev, current) => {\n        const result = prev.map(item => current.map(cu => {\n          if (cu.includes('&')) {\n            return cu.replace(AMPERSAND_REGEX(), item);\n          }\n          return `${item} ${cu}`;\n        }));\n        return Array.prototype.concat.apply([], result);\n      })\n      .join(',');\n\n    if (media) {\n      return `${media}{${sel}`;\n    }\n    return sel;\n  }\n\n}\n\nfunction transformCC(content: string, sel: string) {\n  content = content.replace(/\\/\\* >> cc[^\\/\\*]+\\*\\//g, '');\n  let expression = content.slice(2, content.length - 1);\n  expression = `st2c((${expression}), \\`${sel}\\`)`;\n  return `\\${${expression}}`;\n}\n\nexport type StyleTemplate = (className: string) => string;\n\nexport function lyl(literals: TemplateStringsArray, ...placeholders: (string | Color | StyleCollection | number | StyleTemplate | null | undefined)[]) {\n  return (className: string) => {\n    let result = '';\n    const dsMap = new Map<string, (StyleTemplate) | StyleCollection>();\n    for (let i = 0; i < placeholders.length; i++) {\n      const placeholder = placeholders[i];\n      result += literals[i];\n      if (result.endsWith('...')) {\n        result = result.slice(0, result.length - 3);\n        if (typeof placeholder === 'function'\n          || placeholder instanceof StyleCollection\n        ) {\n          const newID = createUniqueId();\n          dsMap.set(newID, placeholder);\n          result += newID;\n        }\n      } else {\n        result += placeholder;\n      }\n    }\n\n    // add the last literal\n    result += literals[literals.length - 1];\n    const css = result.replace(STYLE_TEMPLATE_REGEX(), (str) => {\n      if (dsMap.has(str)) {\n        const fn = dsMap.get(str)!;\n        return `${createUniqueCommentSelector('ds')}${st2c(fn, '||&||')}`;\n      }\n      return '';\n    });\n    return new LylParse(css, className).toCss();\n  };\n}\n\nfunction createUniqueId() {\n  return `StyleTemplate[__${(id++).toString(36)}]`;\n}\n\nfunction createUniqueCommentSelector(text = 'id') {\n  return `/* >> ${text} -- ${Math.floor(new Date().valueOf() * Math.random()).toString(36)} */`;\n}\n\ntype Transformer<T> = (st: T) => (StyleTemplate);\n\nexport class StyleCollection<T = any> {\n  private _templates: (StyleTemplate | T)[];\n  private _transformer?: Transformer<T>;\n\n  constructor(...templates: (T)[])\n  constructor(...templates: (StyleTemplate | T)[]) {\n    this._templates = templates;\n    this.css = this.css.bind(this);\n  }\n\n  add(...templates: (T)[]): StyleCollection<T>;\n  add(...templates: (StyleTemplate | T)[]): StyleCollection;\n  add(...templates: (StyleTemplate | T)[]): StyleCollection | StyleCollection<T> {\n    // return new StyleCollection(...[...this._templates, ...templates]);\n    this._templates.push(...templates);\n    return this;\n  }\n\n  /** Transform style */\n  setTransformer(transformer: Transformer<T>) {\n    this._transformer = transformer;\n    return this;\n  }\n\n  /**\n   * @return StyleTemplate\n   * @docs-private\n   */\n  css(className: string) {\n    let lin = '';\n    const templates = this._templates;\n    for (let index = 0; index < templates.length; index++) {\n      let template: StyleTemplate;\n      if (this._transformer) {\n        template = ((this._transformer(templates[index] as T)));\n      } else {\n        template = (templates[index] as StyleTemplate);\n      }\n      lin += template(className);\n    }\n    return lin;\n  }\n\n}\n\n/**\n * Transform a ...{style} to css\n * For internal use purposes only\n * @param fn StyleTemplate or StyleCollection\n * @param className class name\n */\nexport function st2c(\n  fn: StyleTemplate | StyleCollection | null | undefined,\n  className: string) {\n  if (fn == null) {\n    return '';\n  }\n  if (fn instanceof StyleCollection) {\n    return fn.css(className);\n  }\n  return fn(className);\n}\n\n// export function normalizeStyleTemplate(\n//   fn: StyleTemplate\n//   ) {\n//   if (fn.length) {\n//     return fn as StyleTemplate;\n//   } else {\n//     return (fn as (() => StyleTemplate))();\n//   }\n// }\n\nexport class StringIdGenerator {\n  private _chars: string;\n  private _nextId: number[];\n  constructor(chars = 'abcdefghijklmnopqrstuvwxyz') {\n    this._chars = chars;\n    this._nextId = [0];\n  }\n\n  next() {\n    const r: string[] = [];\n    for (const char of this._nextId) {\n      r.unshift(this._chars[char]);\n    }\n    this._increment();\n    return r.join('');\n  }\n\n  _increment() {\n    for (let i = 0; i < this._nextId.length; i++) {\n      const val = ++this._nextId[i];\n      if (val >= this._chars.length) {\n        this._nextId[i] = 0;\n      } else {\n        return;\n      }\n    }\n    this._nextId.push(0);\n  }\n}\n"]}