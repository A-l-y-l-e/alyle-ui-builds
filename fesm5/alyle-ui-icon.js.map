{"version":3,"file":"alyle-ui-icon.js.map","sources":["ng://@alyle/ui/icon/icon.service.ts","ng://@alyle/ui/icon/icon.ts","ng://@alyle/ui/icon/icon.module.ts"],"sourcesContent":["import { Injectable, Optional, Inject, SecurityContext } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport { LyTheme2 } from '@alyle/ui';\nimport { SafeHtml, DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\nconst STYLE_PRIORITY = -2;\n\nexport interface FontClassOptions {\n  key: string;\n  /** Class name */\n  class?: string;\n  /** Frefix class */\n  prefix?: string;\n}\nconst styles = {\n  svg: {\n    width: 'inherit',\n    height: 'inherit',\n    fill: 'currentColor',\n  }\n};\n\nexport interface SvgIcon {\n  obs?: Observable<SVGElement>;\n  svg?: SVGElement;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyIconService {\n  private _defaultClass = 'material-icons';\n  private _defaultClassPrefix: string;\n  private svgMap = new Map<string, SvgIcon>();\n  private _fontClasses = new Map<string, FontClassOptions>();\n  classes = this.theme.addStyleSheet(styles, STYLE_PRIORITY);\n  readonly defaultSvgIcon: SVGElement;\n  get defaultClass() {\n    return this._defaultClass;\n  }\n  get defaultClassPrefix() {\n    return this._defaultClassPrefix;\n  }\n\n  constructor(\n    private http: HttpClient,\n    private _sanitizer: DomSanitizer,\n    @Optional() @Inject(DOCUMENT) private document: any,\n    private theme: LyTheme2\n  ) {\n    this.defaultSvgIcon = this._textToSvg('<svg viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"10\" r=\"10\"></circle></svg>');\n  }\n\n  setSvg(key: string, url: SafeResourceUrl) {\n    if (!this.svgMap.has(key)) {\n      const urlSanitized = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, url);\n      const svgIcon: SvgIcon = {\n        obs: this.http.get(`${urlSanitized}.svg`, { responseType: 'text' })\n        .pipe(\n          share(),\n          map(svgText => {\n            if (svgIcon.svg) {\n              return svgIcon.svg;\n            }\n            const svg = this._textToSvg(svgText);\n            this._cacheSvgIcon(svg, key);\n            return svg;\n          }),\n        )\n      };\n      this.svgMap.set(key, svgIcon);\n    }\n  }\n\n  addSvgIconLiteral(key: string, literal: SafeHtml) {\n    if (!this.svgMap.has(key)) {\n      const sanitizedLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n      const svg = this._textToSvg(sanitizedLiteral);\n      this.svgMap.set(key, {\n        svg\n      });\n    }\n  }\n\n  private _textToSvg(str: string): SVGElement {\n    const div = this.document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg') as SVGElement;\n    return svg;\n  }\n\n  private _cacheSvgIcon(svg: SVGElement, key: string) {\n    const svgIconInfo = this.svgMap.get(key);\n    if (!svgIconInfo.svg) {\n      this.svgMap.get(key).svg = svg;\n    }\n  }\n\n  getSvg(key: string): SvgIcon {\n    return this.svgMap.get(key);\n  }\n  /**\n   * Set default className for `ly-icon`\n   * @param className class name\n   * @param prefix Class prefix,\n   * For example if you use FontAwesome your prefix would be `fa-`,\n   * then in the template it is no longer necessary to use the prefix\n   * Example: `<ly-icon fontIcon=\"alarm\">`\n   */\n  setDefaultClass(className: string | null, prefix?: string) {\n    this._defaultClass = className;\n    this._defaultClassPrefix = prefix;\n  }\n\n  /**\n   * Register new font class alias\n   * demo:\n   * For FontAwesome\n   * registerFontClass('fa', 'fa', 'fa-')\n   * @param key\n   * @param className\n   * @param prefix Class prefix\n   */\n  registerFontClass(opt: FontClassOptions) {\n    this._fontClasses.set(opt.key, opt);\n  }\n\n  getFontClass(key: string) {\n    return this._fontClasses.get(key);\n  }\n}\n","import { Directive, Input, Renderer2, ElementRef, OnInit, OnChanges } from '@angular/core';\nimport { LyIconService, SvgIcon, FontClassOptions } from './icon.service';\nimport { take } from 'rxjs/operators';\nimport { Platform, LyTheme2, mixinStyleUpdater, mixinBg, mixinFlat, mixinColor, mixinRaised, mixinOutlined, mixinElevation, mixinShadowColor } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -2;\n\n/** @docs-private */\nexport class LyIconBase {\n  constructor(\n    public _theme: LyTheme2\n  ) { }\n}\n\n/** @docs-private */\nexport const LyIconMixinBase = mixinStyleUpdater(\nmixinBg(\n  mixinFlat(\n    mixinColor(\n      mixinRaised(\n        mixinOutlined(\n          mixinElevation(\n            mixinShadowColor(LyIconBase))))))));\n\n\n@Directive({\n  selector: 'ly-icon',\n  inputs: [\n    'bg',\n    'flat',\n    'color',\n    'raised',\n    'outlined',\n    'elevation',\n    'shadowColor',\n  ],\n})\nexport class LyIcon extends LyIconMixinBase implements OnChanges, OnInit {\n  private _src: string;\n  private _icon: string;\n  private _fontSet: string;\n  private _previousFontSet: FontClassOptions;\n  private _currentClass: string;\n  private _fontIcon: string;\n\n  /** deprecated */\n  @Input()\n  set src(val: string) {\n    this._src = val;\n    if (Platform.isBrowser) {\n      if (val) {\n        const key = `_url:${val}`;\n        this.iconService.setSvg(key, val);\n        this._prepareSvgIcon(this.iconService.getSvg(key));\n      }\n    } else {\n      this._appendDefaultSvgIcon();\n    }\n  }\n  get src() {\n    return this._src;\n  }\n\n  @Input()\n  get icon() {\n    return this._icon;\n  }\n  set icon(val: string) {\n    this._icon = val;\n    if (Platform.isBrowser) {\n      this._prepareSvgIcon(this.iconService.getSvg(val));\n    } else {\n      this._appendDefaultSvgIcon();\n    }\n  }\n\n  @Input()\n  get fontSet(): string {\n    return this._fontSet;\n  }\n  set fontSet(key: string) {\n    this._fontSet = key;\n  }\n\n  @Input()\n  get fontIcon(): string {\n    return this._fontIcon;\n  }\n  set fontIcon(key: string) {\n    this._fontIcon = key;\n  }\n\n  constructor(\n    private iconService: LyIconService,\n    private _el: ElementRef,\n    private _renderer: Renderer2,\n    theme: LyTheme2\n  ) {\n    super(theme);\n    this.setAutoContrast();\n  }\n\n  ngOnChanges() {\n    if (this.fontSet || this.fontIcon) {\n      this._updateFontClass();\n    }\n    this.updateStyle(this._el);\n  }\n\n  private _isDefault() {\n    return !(this.src || this.icon || this.fontSet);\n  }\n\n  private _prepareSvgIcon(svgIcon: SvgIcon) {\n    if (svgIcon.svg) {\n      this._cleanIcon();\n      this._appendChild(svgIcon.svg.cloneNode(true) as SVGElement);\n    } else {\n      svgIcon.obs\n        .pipe(\n          take(1)\n        )\n        .subscribe((svgElement) => {\n          this._cleanIcon();\n          this._appendChild(svgElement.cloneNode(true) as SVGElement);\n        });\n    }\n  }\n\n  private _appendChild(svg: SVGElement) {\n    this._renderer.addClass(svg, this.iconService.classes.svg);\n    this._renderer.appendChild(this._el.nativeElement, svg);\n  }\n\n  private _appendDefaultSvgIcon() {\n    this._appendChild(this.iconService.defaultSvgIcon);\n  }\n\n  private _updateClass() {\n    if (this._isDefault()) {\n      this._renderer.addClass(this._el.nativeElement, this.iconService.defaultClass);\n    }\n  }\n\n  ngOnInit() {\n    this._updateClass();\n    this._theme.addStyle('lyIconRoot', theme => (\n      `font-size:${theme.icon.fontSize};` +\n      `width:1em;` +\n      `position:relative;` +\n      `height:1em;` +\n      `display:inline-flex;`\n    ), this._el.nativeElement, undefined, STYLE_PRIORITY);\n  }\n\n  /**\n   * run only browser\n   * remove current icon\n   */\n  private _cleanIcon() {\n    const icon = this._el.nativeElement.querySelector('svg');\n    if (icon) {\n      this._renderer.removeChild(this._el, icon);\n    }\n  }\n\n  private _updateFontClass() {\n\n    const currentClass = this._currentClass;\n    const fontSetKey = this.fontSet;\n    const icon = this.fontIcon;\n    const el = this._el.nativeElement;\n    const iconClass = this.iconService.getFontClass(fontSetKey);\n    if (currentClass) {\n      this._renderer.removeClass(el, currentClass);\n    }\n    if (this._previousFontSet) {\n      if (this._previousFontSet.class) {\n        this._renderer.removeClass(el, this._previousFontSet.class);\n      }\n    }\n    if (iconClass) {\n      this._previousFontSet = iconClass;\n    } else {\n      Error(`Icon with key${fontSetKey} not found`);\n    }\n    this._currentClass = `${iconClass.prefix}${icon}`;\n    this._renderer.addClass(el, this._currentClass);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyCommonModule } from '@alyle/ui';\nimport { LyIcon } from './icon';\n\n@NgModule({\n  declarations: [LyIcon],\n  exports: [LyIcon, LyCommonModule]\n})\nexport class LyIconModule { }\n"],"names":["STYLE_PRIORITY","tslib_1.__extends"],"mappings":"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"}
