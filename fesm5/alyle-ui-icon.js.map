{"version":3,"file":"alyle-ui-icon.js.map","sources":["ng://@alyle/ui/icon/icon.service.ts","ng://@alyle/ui/icon/icon.ts","ng://@alyle/ui/icon/icon.module.ts"],"sourcesContent":["import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport { LyTheme2 } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -2;\n\nconst styles = {\n  svg: {\n    width: 'inherit',\n    height: 'inherit',\n    fill: 'currentColor',\n    }\n};\n\nexport interface SvgIcon {\n  obs: Observable<SVGElement>;\n  loaded?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyIconService {\n  private svgMap = new Map<string, SvgIcon>();\n  classes = this.theme.addStyleSheet(styles, 'lyIcon', STYLE_PRIORITY);\n  constructor(\n    private http: HttpClient,\n    @Optional() @Inject(DOCUMENT) private document: any,\n    private theme: LyTheme2\n  ) { }\n\n  setSvg(key: string, url: string) {\n    if (!this.svgMap.has(key)) {\n      url = `${url}.svg`;\n      this.svgMap.set(key,\n        {\n          obs: this.http.get(url, { responseType: 'text' })\n          .pipe(\n            share(),\n            map(svgText => this.textToSvg(svgText)),\n          )\n        }\n      );\n    }\n  }\n\n  textToSvg(str: string): SVGElement {\n    const div = this.document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg') as SVGElement;\n    return svg;\n  }\n\n  getSvg(key: string): SvgIcon {\n    return this.svgMap.get(key);\n  }\n}\n\n","import { Directive, Input, Renderer2, ElementRef, OnInit } from '@angular/core';\nimport { LyIconService, SvgIcon } from './icon.service';\nimport { take } from 'rxjs/operators';\nimport { Platform, LyTheme2 } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -2;\n\n@Directive({\n  selector: 'ly-icon'\n})\nexport class Icon implements OnInit {\n  private _defaultClass = 'material-icons';\n  private _src: string;\n  private _icon: string;\n  @Input()\n  set src(val: string) {\n    this._src = val;\n    if (Platform.isBrowser) {\n      if (val) {\n        const key = `_url:${val}`;\n        this.iconService.setSvg(key, val);\n        this._prepareSvgIcon(this.iconService.getSvg(key));\n      }\n    } else {\n      this._appendDefaultSvgIcon();\n    }\n  }\n  get src() {\n    return this._src;\n  }\n\n  @Input() set icon(val: string) {\n    this._icon = val;\n    if (Platform.isBrowser) {\n      this._prepareSvgIcon(this.iconService.getSvg(val));\n    } else {\n      this._appendDefaultSvgIcon();\n    }\n  }\n  get icon() {\n    return this._icon;\n  }\n\n  constructor(\n    private iconService: LyIconService,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private theme: LyTheme2\n  ) { }\n\n  private _isDefault() {\n    return !(this.src || this.icon);\n  }\n\n  private _prepareSvgIcon(svgIcon: SvgIcon) {\n    svgIcon.obs\n      .pipe(\n        take(1)\n      )\n      .subscribe((svgElement) => {\n        this._cleanIcon();\n        this._appendChild(svgElement);\n      });\n  }\n\n  private _appendChild(svg: SVGElement) {\n    this.renderer.addClass(svg, this.iconService.classes.svg);\n    this.renderer.appendChild(this.elementRef.nativeElement, svg);\n  }\n\n  private _appendDefaultSvgIcon() {\n    this._appendChild(this.iconService.textToSvg('<svg viewBox=\"0 0 20 20\"><circle cx=\"10\" cy=\"10\" r=\"10\"></circle></svg>'));\n  }\n\n  private _updateClass() {\n    if (this._isDefault()) {\n      this.renderer.addClass(this.elementRef.nativeElement, this._defaultClass);\n    }\n  }\n\n  ngOnInit() {\n    this._updateClass();\n    this.theme.addStyle('lyIconRoot', theme => (\n      `font-size:${theme.icon.fontSize};` +\n      `width:1em;` +\n      `height:1em;` +\n      `display:inline-flex;`\n    ), this.elementRef.nativeElement, undefined, STYLE_PRIORITY);\n  }\n\n  /**\n   * run only browser\n   * remove current icon\n   */\n  private _cleanIcon() {\n    const icon = this.elementRef.nativeElement.querySelector('svg');\n    if (icon) {\n      this.renderer.removeChild(this.elementRef, icon);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Icon } from './icon';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [Icon],\n  exports: [Icon]\n})\nexport class LyIconModule { }\n"],"names":["STYLE_PRIORITY"],"mappings":"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"}
