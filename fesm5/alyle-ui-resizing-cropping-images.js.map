{"version":3,"file":"alyle-ui-resizing-cropping-images.js.map","sources":["ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.ts","ng://@alyle/ui/resizing-cropping-images/resizing-cropping-images.module.ts"],"sourcesContent":["/**\r\n * TODO: add resizing image\r\n */\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  AfterContentInit,\r\n  EventEmitter,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { BehaviorSubject , Subject , Observable } from 'rxjs';\r\nimport { LyTheme2 } from '@alyle/ui';\r\n\r\nconst STYLE_PRIORITY = -2;\r\n\r\nconst styles = ({\r\n  root: {\r\n    '-webkit-user-select': 'none',\r\n    '-moz-user-select': 'none',\r\n    '-ms-user-select': 'none',\r\n    userSelect: 'none',\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  imgContainer: {\r\n    cursor: 'move',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    '& > img': {\r\n      width: '100%',\r\n      height: '100%',\r\n      pointerEvents: 'none',\r\n    }\r\n  },\r\n  croppingContainer: {\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    boxShadow: '0 0 0 20000px rgba(0, 0, 0, 0.29)',\r\n    '&::after': {\r\n      content: `''`,\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      border: 'solid 2px rgb(255, 255, 255)'\r\n    }\r\n  },\r\n  croppContent: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    '& *:not(input)': {\r\n      pointerEvents: 'none'\r\n    },\r\n    '& > input': {\r\n      position: 'absolute',\r\n      background: 'transparent',\r\n      opacity: 0,\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      width: '100%',\r\n      height: '100%'\r\n    }\r\n  }\r\n});\r\n\r\nexport interface LyResizingCroppingImagesConfig {\r\n  width: number;\r\n  height: number;\r\n  /** If this is not defined, the new image will be automatically defined */\r\n  type?: string;\r\n  /** Background color( default: null), if is null in png is transparent but not in jpg */\r\n  fill?: string | null;\r\n  output?: {\r\n    width: number;\r\n    height: number;\r\n  } | ImageResolution;\r\n}\r\nexport enum ImageResolution {\r\n  /** Resizing & cropping */\r\n  Default,\r\n  /** Only cropping */\r\n  OriginalImage\r\n}\r\nexport interface CroppedImage {\r\n  base64Image: string;\r\n  type: string;\r\n}\r\nexport interface ImageState {\r\n  isLoaded: boolean;\r\n  isCrop: boolean;\r\n}\r\nconst CONFIG_DEFAULT = <LyResizingCroppingImagesConfig>{\r\n  width: 250,\r\n  height: 200,\r\n  output: ImageResolution.Default\r\n};\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  selector: 'ly-cropping',\r\n  template: `<div [className]=\"classes.imgContainer\" #_imgContainer\n(panstart)=\"_moveStart($event)\"\n(pan)=\"_move($event)\"\n[ngStyle]=\"dragData | async\">\n  <img *ngIf=\"isLoaded\"\n  [src]=\"src\">\n</div>\n<div #_croppingContainer *ngIf=\"isLoaded; else content\" [className]=\"classes.croppingContainer\" [ngStyle]=\"{\n  width: config.width + 'px',\n  height: config.height + 'px'\n}\"></div>\n<ng-template #content>\n  <div [className]=\"classes.croppContent\">\n    <input #_fileInput type=\"file\" (change)=\"selectInputEvent($event)\" accept=\"image/*\">\n    <ng-content></ng-content>\n  </div>\n</ng-template>`\r\n })\r\nexport class LyResizingCroppingImages implements AfterContentInit {\r\n  classes = this.theme.addStyleSheet(styles, 'ly-image-cropper', STYLE_PRIORITY);\r\n  img: BehaviorSubject<HTMLImageElement> = new BehaviorSubject<HTMLImageElement>(null);\r\n  result: string;\r\n  fileName: string;\r\n\r\n  private _img: HTMLImageElement;\r\n  private offset: {x: number, y: number, left: number, top: number};\r\n  private scale: number;\r\n\r\n  @ViewChild('_imgContainer') imgContainer: ElementRef;\r\n  @ViewChild('_croppingContainer') croppingContainer: ElementRef;\r\n  @Input() src: string;\r\n  @Input() format: string;\r\n  @Input() config: LyResizingCroppingImagesConfig = CONFIG_DEFAULT;\r\n  isLoaded: boolean;\r\n  isCropped: boolean;\r\n  /** On loaded new image */\r\n  @Output() loaded = new EventEmitter<null>();\r\n  /** On crop new image */\r\n  @Output() cropped = new EventEmitter<CroppedImage>();\r\n  /** On error new image */\r\n  @Output() error = new EventEmitter<null>();\r\n\r\n  private defaultType: string;\r\n  private _dragData: Subject<{width: string, height: string, transform: string}> = new Subject();\r\n  dragData: Observable<{width: string, height: string, transform: string}>;\r\n  private zoomScale = .1;\r\n  constructor(\r\n    private _renderer: Renderer2,\r\n    private theme: LyTheme2,\r\n    private elementRef: ElementRef,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    this._renderer.addClass(elementRef.nativeElement, this.classes.root);\r\n    this.dragData = this._dragData.asObservable();\r\n    const img = this.img;\r\n    img.subscribe((imgElement: HTMLImageElement) => {\r\n      if (imgElement) {\r\n        this._img = imgElement;\r\n        /** set zoom scale */\r\n        const minScale = {\r\n          width: this.config.width / this._img.width * 100,\r\n          height: this.config.height / this._img.height * 100\r\n        };\r\n        this.zoomScale = Math.max(minScale.width, minScale.height) / 100;\r\n        this.fit();\r\n        this.cd.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  selectInputEvent(img: Event) {\r\n    const _img = img.target as HTMLInputElement;\r\n    if (_img.files.length !== 1) {\r\n      return;\r\n    }\r\n    const fileReader: FileReader = new FileReader();\r\n    this.fileName = _img.value.replace(/.*(\\/|\\\\)/, '');\r\n\r\n    /** Set type */\r\n    this.defaultType = null;\r\n    if (!this.config.type) {\r\n      this.defaultType = _img.files[0].type;\r\n    }\r\n    this.isLoaded = false;\r\n    this.isCropped = false;\r\n    this._dragData.next(null);\r\n    fileReader.addEventListener('loadend', (loadEvent) => {\r\n      const originalImageUrl = (loadEvent.target as FileReader).result;\r\n      this.setImageUrl(originalImageUrl);\r\n      this.cd.markForCheck();\r\n    });\r\n    fileReader.readAsDataURL(_img.files[0]);\r\n  }\r\n  fixedNum(num: number) {\r\n    return parseFloat(num.toFixed(0));\r\n  }\r\n  setScale(size: number) {\r\n    // if (!(size > 0 && size <= 1)) { return; }\r\n    this.scale = size;\r\n    size = size * 100;\r\n    const img = this.imgContainer.nativeElement.firstElementChild;\r\n    const initialImg = this._img;\r\n    const width = this.fixedNum(initialImg.width * size / 100);\r\n    const height = this.fixedNum(initialImg.height * size / 100);\r\n    this._dragData.next({\r\n      width: `${width}px`,\r\n      height: `${height}px`,\r\n      transform: this.customCenter(width, height)\r\n    });\r\n  }\r\n  private customCenter(width: number, height: number) {\r\n    const root = this.elementRef.nativeElement as HTMLElement;\r\n    const w = (root.offsetWidth - width) / 2;\r\n    const h = (root.offsetHeight - height) / 2;\r\n    return `translate3d(${w}px, ${h}px, 0)`;\r\n  }\r\n\r\n  '1:1'() {\r\n    this.setScale(1);\r\n  }\r\n\r\n  /**\r\n   * Ajustar a la pantalla\r\n   */\r\n  fitToScreen() {\r\n    const container = this.elementRef.nativeElement as HTMLElement;\r\n    const min = {\r\n      width: container.offsetWidth,\r\n      height: container.offsetHeight\r\n    };\r\n    const size = {\r\n      width: this._img.width,\r\n      height: this._img.height\r\n    };\r\n    const minScale = {\r\n      width: min.width / size.width * 100,\r\n      height: min.height / size.height * 100\r\n    };\r\n    const result = Math.max(minScale.width, minScale.height) / 100;\r\n    // if (result >= 1) {\r\n      // this.setScale(1);\r\n    // } else {\r\n      this.setScale(result);\r\n    // }\r\n  }\r\n\r\n  fit() {\r\n    const minScale = {\r\n      width: this.config.width / this._img.width * 100,\r\n      height: this.config.height / this._img.height * 100\r\n    };\r\n    this.setScale(Math.max(minScale.width, minScale.height) / 100);\r\n  }\r\n\r\n  _moveStart(event) {\r\n    const rect = this.imgContainer.nativeElement.getBoundingClientRect();\r\n    const hostRect = this.elementRef.nativeElement.getBoundingClientRect();\r\n    let target;\r\n    if (event.type === 'touchstart') {\r\n      target = {\r\n        x: event.targetTouches[0].clientX,\r\n        y: event.targetTouches[0].clientY\r\n      };\r\n    } else {\r\n      target = {\r\n        x: event.center.x,\r\n        y: event.center.y\r\n      };\r\n    }\r\n    this.offset = {\r\n      x: event.center.x - rect.x,\r\n      y: event.center.y - rect.y,\r\n      left: (rect as ClientRect).left - hostRect.x,\r\n      top: (rect as ClientRect).top - hostRect.y\r\n    };\r\n  }\r\n  _move(event) {\r\n    let x, y;\r\n    const hostRect = this.elementRef.nativeElement.getBoundingClientRect();\r\n    const rect = this.imgContainer.nativeElement.getBoundingClientRect();\r\n    if (event.srcEvent.shiftKey) {\r\n      if (Math.abs(event.deltaX) === Math.max(Math.abs(event.deltaX), Math.abs(event.deltaY))) {\r\n        y = this.offset.top;\r\n      } else {\r\n        x = this.offset.left;\r\n      }\r\n    }\r\n    if (x === undefined) { x = event.center.x - hostRect.x - (this.offset.x); }\r\n    if (y === undefined) { y = event.center.y - hostRect.y - (this.offset.y); }\r\n\r\n    this._dragData.next({\r\n      width: this.imgContainer.nativeElement.offsetWidth,\r\n      height: this.imgContainer.nativeElement.offsetHeight,\r\n      transform: `translate3d(${x}px, ${y}px, 0)`\r\n    });\r\n  }\r\n  private roundNumber(num: number) {\r\n    return Math.round(num * 100000) / 100000;\r\n  }\r\n  /**+ */\r\n  zoomIn() {\r\n    // const scale = this.roundNumber(this.scale + this.zoomScale);\r\n    const scale = this.roundNumber(this.scale + .05);\r\n    if (scale > 0 && scale <= 1) {\r\n      this.setScale(scale);\r\n    } else {\r\n      this.setScale(1);\r\n    }\r\n  }\r\n  /**- */\r\n  zoomOut() {\r\n    // const scale = this.roundNumber(this.scale - this.zoomScale);\r\n    const scale = this.roundNumber(this.scale - .05);\r\n    if (scale > this.zoomScale && scale <= 1) {\r\n      this.setScale(scale);\r\n    } else {\r\n      this.fit();\r\n    }\r\n  }\r\n  ngAfterContentInit() {\r\n    this.setImageUrl(this.src);\r\n  }\r\n  center(img?: HTMLImageElement) {\r\n    if (!img) {\r\n      img = this.imgContainer.nativeElement.firstElementChild;\r\n    }\r\n    const root = this.elementRef.nativeElement as HTMLElement;\r\n    const w = (root.offsetWidth - img.width) / 2;\r\n    const h = (root.offsetHeight - img.height) / 2;\r\n    const result = {\r\n      width: `${img.width}px`,\r\n      height: `${img.height}px`,\r\n      transform: this.customCenter(img.width, img.height)\r\n    };\r\n    this._dragData.next(result);\r\n  }\r\n  setImageUrl(src: string) {\r\n    this.src = src;\r\n    if (!src) { return; }\r\n    const img = new Image;\r\n    img.src = src;\r\n    img.addEventListener('error', (err) => {\r\n      this.error.emit(null);\r\n    });\r\n    img.addEventListener('load', () => {\r\n      this.img.next(img);\r\n      this.loaded.emit(null);\r\n      this.isLoaded = true;\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n  private max(...values: number[]) {\r\n    return Math.max(...values);\r\n  }\r\n\r\n  private imageSmoothingQuality(img: HTMLCanvasElement, config, quality: number): HTMLCanvasElement {\r\n    /** Calculate total number of steps needed */\r\n    let  numSteps = Math.ceil(Math.log(this.max(img.width, img.height) / this.max(config.height, config.width)) / Math.log(2)) - 1;\r\n    numSteps = numSteps <= 0 ? 0 : numSteps;\r\n\r\n    /**Array steps */\r\n    const steps = Array.from(Array(numSteps).keys());\r\n\r\n    /** Context */\r\n    const octx = img.getContext('2d');\r\n\r\n    const q = Math.pow(quality * 10, numSteps) / Math.pow(10, numSteps);\r\n\r\n    /** If Steps => imageSmoothingQuality */\r\n    if (numSteps) {\r\n      /** Set size */\r\n      const w = img.width * quality;\r\n      const h = img.height * quality;\r\n      /** Only the new img is shown. */\r\n      octx.globalCompositeOperation = 'copy';\r\n\r\n      /** Steps */\r\n      (steps as Array<number>).forEach((a, b) => {\r\n        octx.drawImage(img,\r\n          0, 0,\r\n          w, h\r\n        );\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Step final\r\n     * Resizing & cropping image\r\n     */\r\n    const oc = document.createElement('canvas'),\r\n    ctx = oc.getContext('2d');\r\n    oc.width = config.width;\r\n    oc.height = config.height;\r\n    ctx.drawImage(img,\r\n      0, 0,\r\n      img.width * (q), img.height * (q),\r\n      0, 0,\r\n      oc.width, oc.height\r\n    );\r\n    return oc;\r\n  }\r\n\r\n  /**\r\n   * Crop Image\r\n   * Resizing & cropping image\r\n   */\r\n  crop(): CroppedImage {\r\n    return {\r\n      base64Image: this.cropp(),\r\n      type: this.defaultType || this.config.type\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Deprecated, use crop() instead\r\n   */\r\n  cropp(): string {\r\n    const myConfig = Object.assign({}, CONFIG_DEFAULT, this.config);\r\n    const canvasElement: HTMLCanvasElement = document.createElement('canvas');\r\n    const rect = this.croppingContainer.nativeElement.getBoundingClientRect() as ClientRect;\r\n    const img = this.imgContainer.nativeElement.firstElementChild.getBoundingClientRect() as ClientRect;\r\n    const left = (rect.left - img.left);\r\n    const top = (rect.top - img.top);\r\n    const config = {\r\n      width: myConfig.width,\r\n      height: myConfig.height\r\n    };\r\n    const configCanvas = {\r\n      width: this._img.width,\r\n      height: this._img.height\r\n    };\r\n    canvasElement.width = config.width / this.scale;\r\n    canvasElement.height = config.height / this.scale;\r\n    const ctx = canvasElement.getContext('2d');\r\n    if (myConfig.fill) {\r\n      ctx.fillStyle = myConfig.fill;\r\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\r\n    }\r\n    ctx.drawImage(this._img,\r\n      -(left / this.scale), -(top / this.scale),\r\n    );\r\n    let result = canvasElement;\r\n    if (myConfig.output === 0) {\r\n      result = this.imageSmoothingQuality(result, config, 0.5);\r\n    } else if (typeof myConfig.output === 'object') {\r\n      result = this.imageSmoothingQuality(result, myConfig.output, 0.5);\r\n    }\r\n    let url;\r\n    if (myConfig.type) {\r\n      url = result.toDataURL(`image/${myConfig.type}`);\r\n    } else {\r\n      url = result.toDataURL(this.defaultType);\r\n    }\r\n    this.result = (url);\r\n    this.cropped.emit({\r\n      base64Image: url,\r\n      type: this.defaultType || myConfig.type\r\n    });\r\n    this.isCropped = true;\r\n    return url;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LyResizingCroppingImages } from './resizing-cropping-images';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  exports: [LyResizingCroppingImages],\n  declarations: [LyResizingCroppingImages]\n})\nexport class LyResizingCroppingImageModule {}\n"],"names":[],"mappings":"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"}
