{"version":3,"file":"alyle-ui-checkbox.js.map","sources":["ng://@alyle/ui/checkbox/ly-checkbox/ly-checkbox.component.ts","ng://@alyle/ui/checkbox/ly-checkbox.service.ts","ng://@alyle/ui/checkbox/ly-checkbox.module.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  AfterContentInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const LY_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => LyCheckbox),\n  multi: true\n};\nexport enum CheckboxState {\n  /** The initial state. */\n  Init,\n  /** Checked state. */\n  Checked,\n  /** Unchecked state. */\n  Unchecked,\n  /** Indeterminate state. */\n  Indeterminate,\n}\n\n@Component({\n  selector: 'ly-checkbox',\n  template: `<label>\n  <div class=\"ly-checkbox-container\">\n    <input #input\n           [hidden]=\"false\" type=\"checkbox\"\n           [id]=\"id\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [value]=\"value\"\n           [disabled]=\"disabled\"\n           [name]=\"name\"\n           [indeterminate]=\"indeterminate\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n  </div>\n</label>\n`,\n  styles: [`:host{display:inline-block}`],\n  providers: [LY_CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class LyCheckbox implements OnInit, AfterContentInit, ControlValueAccessor, OnChanges, OnDestroy {\n  private _currentCheckState: CheckboxState = CheckboxState.Init;\n  @Input('id') id: string;\n  // tslint:disable-next-line:no-input-rename\n  @Input('attr.aria-label') ariaLabel: string;\n  // tslint:disable-next-line:no-input-rename\n  @Input('attr.aria-labelledby') ariaLabelledby: string;\n  @Input('required') required: string;\n  @Input('labelPosition') labelPosition: string;\n  @Input('color') color: string;\n  @Input('value') value: string;\n  @Input('name') name: string;\n  @Input('disabled') disabled: string;\n  @Input('checked') checked = false;\n  @Input('indeterminate') indeterminate: string;\n  @Output('change') change: EventEmitter<any> = new EventEmitter<any>();\n  @Output('indeterminateChange') indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  onTouched: () => any = () => {};\n  private _controlValueAccessorChangeFn: (value: any) => void = (value) => {};\n  constructor() { }\n\n  /** Toggles the `checked` state of the checkbox. */\n  toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  _onChangeEvent(event: Event) {\n    event.stopPropagation();\n  }\n  _onInputClick(event: Event) {\n    const ev = event.target as HTMLInputElement;\n    this.checked = ev.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n    console.log('_onInputClick', ev.checked);\n  }\n\n  writeValue(value: any) {\n    this.checked = !!value;\n    console.log('value', this.checked);\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('changes', changes);\n    if (changes['src']) {\n      // fn\n    }\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterContentInit() {\n\n  }\n  ngOnDestroy() {\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LyCheckboxService {\n\n  constructor() { }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LyCheckbox } from './ly-checkbox/ly-checkbox.component';\nimport { LyCheckboxService } from './ly-checkbox.service';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyCheckbox],\n  declarations: [LyCheckbox],\n  providers: [LyCheckboxService]\n})\nexport class LyCheckboxModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LyCheckboxModule,\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
