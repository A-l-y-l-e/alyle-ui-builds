{"version":3,"file":"alyle-ui-typography.js.map","sources":["ng://@alyle/ui/typography/typography.service.ts","ng://@alyle/ui/typography/typography.directive.ts","ng://@alyle/ui/typography/typography.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CoreTheme } from '@alyle/ui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyTypographyClasses {\n  root: string;\n  constructor(\n    styleCore: CoreTheme\n  ) {\n    this.root = styleCore.setUpStyleSecondary(\n      'k-typ',\n      () => (\n        // `margin: 1em 0 0.65em 0;` +\n        `margin: 0;` +\n        `display: block;`\n      )\n    );\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, isDevMode, OnInit } from '@angular/core';\nimport { LyTheme2, toBoolean } from '@alyle/ui';\n// import { IMinimaTheme } from '../themes';\nimport { LyTypographyClasses } from './typography.service';\n\nenum Gutter {\n  default,\n  top,\n  bottom,\n}\n\n@Directive({\n  selector: `[lyTyp]`\n})\nexport class LyTypography implements OnInit {\n  private _lyTyp: string;\n  private _lyTypClass: string;\n\n  private _gutter: boolean;\n  private _gutterClass: string;\n\n  private _gutterTop: boolean;\n  private _gutterTopClass: string;\n\n  private _gutterBottom: boolean;\n  private _gutterBottomClass: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      const newClass = this._createTypClass(val);\n      this.style.updateClassName(this.elementRef.nativeElement, this.renderer, newClass, this._lyTypClass);\n      this._lyTypClass = newClass;\n    }\n  }\n  get lyTyp() {\n    return this._lyTyp;\n  }\n\n  @Input()\n  set gutter(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutter) {\n      this._gutter = newVal;\n      const newClass = this._createGutterClass(Gutter.default, newVal);\n      this._gutterClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterClass);\n    }\n  }\n  get gutter() {\n    return this._gutter;\n  }\n\n  @Input()\n  set gutterTop(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterTop) {\n      this._gutterTop = newVal;\n      const newClass = this._createGutterClass(Gutter.top, newVal);\n      this._gutterTopClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterTopClass);\n    }\n  }\n  get gutterTop() {\n    return this._gutterTop;\n  }\n\n  @Input()\n  set gutterBottom(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterBottom) {\n      this._gutterBottom = newVal;\n      const newClass = this._createGutterClass(Gutter.bottom, newVal);\n      this._gutterBottomClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterBottomClass);\n    }\n  }\n  get gutterBottom() {\n    return this._gutterBottom;\n  }\n\n  constructor(\n    private style: LyTheme2,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    classes: LyTypographyClasses\n  ) {\n    this.renderer.addClass(this.elementRef.nativeElement, classes.root);\n  }\n\n  ngOnInit() {\n    if ((this.gutterTop && this.gutterBottom)) {\n      throw new Error(`use '<element lyTyp gutter>' instead of '<element lyTyp gutterTop gutterBottom>'`);\n    }\n  }\n\n  private _createTypClass(key: string) {\n    const newKey = `k-typ:${key}`;\n\n    return this.style.setUpStyleSecondary<any/** IMinimaTheme */>(newKey,\n      theme => {\n        const { typography } = theme;\n        const { fontSize, fontWeight, letterSpacing, textTransform, lineHeight } = typography[key || 'body1'];\n        let style = (\n          `font-size:${theme.pxToRem(fontSize)};` +\n          `font-weight:${fontWeight};` +\n          `letter-spacing:${theme.pxToRem(letterSpacing)};`\n        );\n        if (lineHeight) {\n          style += `line-height:${theme.pxToRem(lineHeight)};`;\n        }\n        if (textTransform) {\n          style += `text-transform:${textTransform};`;\n        }\n        return style;\n      }\n    );\n  }\n\n  private _createGutterClass(name: Gutter, val: boolean) {\n    return this.style.setUpStyleSecondary<any>(\n      `k-typ-gutter:${name}:${val}`,\n      theme => {\n        const gutter = name === Gutter.default;\n        return (\n          `margin-top:${ val && (gutter || name === Gutter.top) ? theme.typography.gutterTop : 0 }em;` +\n          `margin-bottom:${ val && (gutter || name === Gutter.bottom) ? theme.typography.gutterBottom : 0 }em;`\n        );\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyTypography],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n"],"names":[],"mappings":"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"}
