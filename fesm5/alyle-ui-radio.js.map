{"version":3,"file":"alyle-ui-radio.js.map","sources":["ng://@alyle/ui/radio/radio.service.ts","ng://@alyle/ui/radio/radio.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LyTheme2 } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -2;\n\nconst styles = ({\n  root: {\n    display: 'inline-block'\n  },\n  labelContent: {\n    padding: '0 0.5em'\n  },\n  radioButton: {\n    display: 'inline-block'\n  }\n});\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyRadioService {\n  classes = this.theme.addStyleSheet(styles, STYLE_PRIORITY);\n  constructor(\n    private theme: LyTheme2\n  ) { }\n}\n","import {\n  Component,\n  forwardRef,\n  NgModule,\n  Input,\n  Output,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  Optional,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  NgZone,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport { LyRippleModule, LyRippleService, Ripple } from '@alyle/ui/ripple';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n  FormsModule,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { LyCommonModule, LyTheme2, LyCoreStyles, toBoolean } from '@alyle/ui';\nimport { LyRadioService } from './radio.service';\n\nconst STYLE_PRIORITY = -2;\n\nexport const LY_RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => LyRadioGroup),\n  multi: true\n};\n\nlet idx = 0;\n\nexport class UndefinedValue {\n  constructor() { }\n}\n\nconst styles = theme => ({\n  label: {\n    cursor: 'pointer',\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline'\n  },\n  container: {\n    position: 'relative',\n    width: '1.5em',\n    margin: 'auto',\n    '&>div *': {\n      margin: 'auto',\n      borderRadius: '50%',\n      transition: 'transform cubic-bezier(.1, 1, 0.5, 1)',\n      transitionDuration: '250ms',\n      width: '1em',\n      height: '1em'\n    },\n    '& div>:nth-child(2)': {\n      background: 'currentColor',\n      transform: 'scale(0)'\n    },\n    '& div>:nth-child(1)': {\n      transform: 'scale(1)',\n      border: 'solid .08em currentColor',\n      color: theme.radio.radioOuterCircle\n    }\n  }\n});\n\n@Component({\n  selector: 'ly-radio-group',\n  template: `<ng-content></ng-content>`,\n  providers: [LY_RADIO_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  exportAs: 'lyRadioGroup'\n})\nexport class LyRadioGroup implements ControlValueAccessor {\n  _value = new UndefinedValue;\n  name = `ly-radio-name-${idx++}`;\n  _color = 'accent';\n\n  classes = this.theme.addStyleSheet(styles, STYLE_PRIORITY);\n\n  @Input()\n  set value(val: any) {\n    if (this._value !== val) {\n      // this._value = val;\n      if (this._radios) {\n        this._updateCheckFromValue(val);\n      }\n    }\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Output() readonly change: EventEmitter<void> = new EventEmitter<void>();\n\n  @Input() withColor = 'accent';\n  @ContentChildren(forwardRef(() => LyRadio)) _radios: QueryList<LyRadio>;\n\n  /** The method to be called in order to update ngModel */\n  _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /**\n   * onTouch function registered via registerOnTouch (ControlValueAccessor).\n   * @docs-private\n   */\n  onTouched: () => any = () => {};\n\n  /**\n   * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n   * radio buttons upon their blur.\n   */\n  _touch() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  writeValue(value: any) {\n    if (!!this._radios) {\n      this.value = value;\n      this.markForCheck();\n    }\n  }\n\n  /**\n   * Registers a callback to be triggered when the model value changes.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the control is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n   * @param isDisabled Whether the control should be disabled.\n   */\n  setDisabledState(isDisabled: boolean) {\n    // this.disabled = isDisabled;\n    this.markForCheck();\n  }\n\n  constructor(\n    public _radioService: LyRadioService,\n    elementRef: ElementRef,\n    _renderer: Renderer2,\n    public theme: LyTheme2,\n    public ngZone: NgZone,\n    private cd: ChangeDetectorRef\n  ) {\n    _renderer.addClass(elementRef.nativeElement, this._radioService.classes.root);\n  }\n\n  _updateCheckFromValue(val: any) {\n    let newChecked: boolean;\n    this._radios.forEach(radioButton => {\n      if (val === radioButton.value) {\n        this.updatevalue(val);\n        newChecked = true;\n        radioButton.checked = true;\n      } else if (radioButton.checked) {\n        radioButton.checked = false;\n      }\n    });\n    if (!newChecked) {\n      /** when val not exist in radio button !==  */\n      this._controlValueAccessorChangeFn(null);\n      if (this._value !== null) {\n        this._value = null;\n      }\n    }\n  }\n\n  updatevalue(value: any) {\n    this._value = value;\n    this._controlValueAccessorChangeFn(value);\n    this.change.emit();\n    this.markForCheck();\n  }\n\n  markForCheck() {\n    this.cd.markForCheck();\n  }\n\n  _radioResetChecked() {\n    this._radios.forEach(_ => _._setCheckedToFalsy());\n  }\n\n}\n@Component({\n  selector: 'ly-radio',\n  // styleUrls: ['radio.scss'],\n  template: `\n  <label #_labelContainer [attr.for]=\"inputId\" [className]=\"radioGroup.classes.label\">\n    <input\n      [className]=\"coreStyles.classes.visuallyHidden\"\n      [id]=\"inputId\"\n      [checked]=\"checked\"\n      [name]=\"name\"\n      (change)=\"_onInputChange($event)\"\n      (click)=\"_onInputClick($event)\"\n      type=\"radio\"\n      >\n    <div #_radioContainer>\n      <div>\n        <div [className]=\"coreStyles.classes.fill\"></div>\n        <div [className]=\"coreStyles.classes.fill\"></div>\n      </div>\n    </div>\n    <div\n    [className]=\"radioGroup._radioService.classes.labelContent\">\n      <ng-content></ng-content>\n    </div>\n  </label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class LyRadio implements OnInit, OnDestroy {\n  id = `ly-radio-id-${idx++}`;\n  name = '';\n  _value = null;\n  private _withColor: string;\n  private _ripple: Ripple;\n  private _checked = false;\n  private checkedClass: string;\n  @ViewChild('_radioContainer') private _radioContainer: ElementRef;\n  @ViewChild('_labelContainer') _labelContainer: ElementRef;\n  @Input()\n  set withColor(val: string) {\n    if (this._withColor !== val) {\n      this._withColor = val;\n      if (this.checkedClass) {\n        /** create new class if exist `this.checkedClass` */\n        this.checkedClass = this._createStyleWithColor(val);\n      }\n    }\n  }\n  get withColor() {\n    return this._withColor;\n  }\n  @Output() change = new EventEmitter<boolean>();\n\n  @Input()\n  set value(val) {\n    if (this._value !== val) {\n      this._value = val;\n    }\n  }\n  get value() { return this._value; }\n\n  @Input()\n  set checked(val: boolean) {\n    const newCheckedState = toBoolean(val);\n    const before = this._checked;\n    if (before !== newCheckedState) {\n      this._checked = newCheckedState;\n      if (!before && newCheckedState) {\n        /** Use current checked class or create new class */\n        this.checkedClass = this.checkedClass || this._createStyleWithColor(this.withColor || this.radioGroup.withColor);\n        /** Add class checked */\n        this._renderer.addClass(this._radioContainer.nativeElement, this.checkedClass);\n\n        if (this.value !== this.radioGroup.value) {\n          /** update Value */\n          this.radioGroup.updatevalue(this.value);\n        }\n      } else {\n        /** Remove class checked */\n        this._renderer.removeClass(this._radioContainer.nativeElement, this.checkedClass);\n      }\n      this._markForCheck();\n    }\n  }\n  get checked() {\n    return this._checked;\n  }\n  get inputId(): string {\n    return `${this.id}-input`;\n  }\n\n  _onInputChange(event: any) {\n    event.stopPropagation();\n    this.radioGroup._updateCheckFromValue(this.value);\n    // this.radioGroup._radioResetChecked();\n    // this.checked = true;\n    this.radioGroup._touch();\n  }\n\n  _onInputClick(event: Event) { event.stopPropagation(); }\n\n  _setCheckedToFalsy() {\n    this.checked = false;\n  }\n\n  _createStyleWithColor(val: string) {\n    return this.theme.addStyle(\n      `lyRadio-checked:${val}`, theme => ({\n        color: theme.colorOf(val),\n        '& div>:nth-child(1)': {\n          transform: 'scale(1.25)',\n          color: theme.colorOf(val),\n        },\n        '& div>:nth-child(2)': {\n          transform: 'scale(0.8)'\n        },\n      }),\n      this._radioContainer.nativeElement,\n      this.checkedClass,\n      STYLE_PRIORITY\n    );\n  }\n\n  ngOnInit() {\n    if (this.radioGroup) {\n      // Copy name from parent radio group\n      this.name = this.radioGroup.name;\n      this._renderer.addClass(this._radioContainer.nativeElement, this.radioGroup.classes.container);\n    }\n    this._ripple = new Ripple(this.theme.config, this.ngZone, this._rippleService.classes, this._radioContainer.nativeElement, this._elementRef.nativeElement);\n    this._ripple.setConfig({\n      centered: true,\n      radius: 'containerSize',\n      percentageToIncrease: 100\n    });\n  }\n\n  _markForCheck() {\n    this.changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy() {\n    this._ripple.removeEvents();\n  }\n\n\n  constructor(\n    @Optional() public radioGroup: LyRadioGroup,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    public theme: LyTheme2,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    public coreStyles: LyCoreStyles,\n    private _rippleService: LyRippleService\n  ) {\n    _renderer.addClass(_elementRef.nativeElement, radioGroup._radioService.classes.radioButton);\n  }\n}\n\n@NgModule({\n  imports: [CommonModule, FormsModule, LyRippleModule, LyCommonModule],\n  exports: [LyRadioGroup, LyRadio],\n  declarations: [LyRadioGroup, LyRadio],\n})\nexport class LyRadioModule { }\n"],"names":["STYLE_PRIORITY","styles"],"mappings":"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"}
