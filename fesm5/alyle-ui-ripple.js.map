{"version":3,"file":"alyle-ui-ripple.js.map","sources":["ng://@alyle/ui/ripple/ripple.ts","ng://@alyle/ui/ripple/ripple.service.ts","ng://@alyle/ui/ripple/ripple.directive.ts","ng://@alyle/ui/ripple/ripple.module.ts","ng://@alyle/ui/ripple/ripple.variables.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\nimport { Platform, ThemeVariables } from '@alyle/ui';\n\nexport interface RippleConfig {\n  centered?: boolean;\n  disabled?: boolean;\n  sensitive?: boolean;\n  radius?: 'containerSize' | number;\n  percentageToIncrease?: number;\n}\n\nexport class RippleRef {\n  state = true;\n  timestamp = -Date.now();\n  readonly container: HTMLElement = document.createElement('span');\n  end() {\n    this.state = false;\n    this.timestamp += Date.now();\n  }\n}\n\nexport class Ripple {\n  private _rippleRef: RippleRef;\n  private _eventHandlers: Map<string, (e: Event) => void> = new Map<string, (e: Event) => void>();\n  private rippleConfig: RippleConfig = {};\n  private _transitionDuration = this._themeVariables.ripple.duration;\n  private _eventOptions = {passive: true} as any;\n  constructor(\n    private _themeVariables: ThemeVariables,\n    private _ngZone: NgZone,\n    private classes: any,\n    private _containerElement: HTMLElement,\n    private _triggerElement?: HTMLElement\n  ) {\n    if (Platform.isBrowser) {\n      if (typeof TouchEvent === 'function' && !!TouchEvent) {\n        this._eventHandlers.set('pointerdown', this.onPointerDown.bind(this));\n        this._eventHandlers.set('touchend', this.onPointerLeave.bind(this));\n      } else {\n        this._eventHandlers.set('mousedown', this.onPointerDown.bind(this));\n      }\n      this._eventHandlers.set('mouseup', this.onPointerLeave.bind(this));\n      this._eventHandlers.set('mouseleave', this.onPointerLeave.bind(this));\n      if (!_triggerElement) {\n        _triggerElement = _containerElement;\n      }\n      this.setTriggerElement(_triggerElement);\n    }\n  }\n\n  setConfig(config: RippleConfig) {\n    this.rippleConfig = config;\n  }\n\n  private get _rectContainer(): ClientRect {\n    return this._containerElement.getBoundingClientRect();\n  }\n\n  private setTriggerElement(element: HTMLElement | null) {\n    if (element) {\n      // element.classList.add(this.stylesData[0]);\n      // this._renderer.addClass(element, this.stylesData[0].id);\n      this._ngZone.runOutsideAngular(() => {\n        this._eventHandlers.forEach((fn, type) => element.addEventListener(type, fn, this._eventOptions));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n\n  private createRipple(styles: {[key: string]: number | string}) {\n    this._rippleRef = new RippleRef();\n    const container = this._rippleRef.container;\n    container.className = this.classes.rippleContainer;\n    for (const key in styles) {\n      if (styles.hasOwnProperty(key)) {\n        const element = styles[key];\n        if (typeof element === 'number') {\n          container.style[key] = `${element}px`;\n        } else {\n          container.style[key] = element;\n        }\n      }\n    }\n    this._containerElement.appendChild(container);\n    window.getComputedStyle(container).getPropertyValue('opacity');\n    container.style.transform = `scale(1)`;\n  }\n\n  private onPointerDown(event: MouseEvent) {\n    if (!this.rippleConfig.disabled) {\n      /**Destroy previous ripple if exist */\n      this.endRipple();\n      this.startRipple(event, this.rippleConfig);\n    }\n  }\n  private onPointerLeave(event: MouseEvent) {\n    if (!this.rippleConfig.disabled) {\n      this.endRipple();\n    }\n  }\n\n  startRipple(event: MouseEvent | PointerEvent, rippleConfig: RippleConfig) {\n    const containerRect = this._rectContainer;\n    let x = event.clientX,\n    y = event.clientY;\n    if (rippleConfig.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const left = x - containerRect.left;\n    const top = y - containerRect.top;\n    let radius = rippleConfig.radius === 'containerSize' ? maxSize(containerRect) / 2 : rippleConfig.radius || rippleRadius(x, y, containerRect);\n    if (rippleConfig.percentageToIncrease) {\n      radius += radius * rippleConfig.percentageToIncrease / 100;\n    }\n    this.createRipple({\n      left: left - radius,\n      top: top - radius,\n      width: radius * 2,\n      height: radius * 2,\n      transitionDuration: `${this._transitionDuration}ms`\n    });\n  }\n\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  endRipple() {\n    const rippleRef: RippleRef = this._rippleRef || null;\n    const duration = this._transitionDuration;\n    if (rippleRef && rippleRef.state) {\n      rippleRef.end();\n      this.runTimeoutOutsideZone(() => {\n        rippleRef.container.style.opacity = '0';\n        rippleRef.container.style.transitionDuration = `${this._transitionDuration / 5}ms`;\n      // }, rippleRef.timestamp < duration ? duration : 0);\n      // }, rippleRef.timestamp < duration ? duration / (duration * .001 + 1) : 0);\n      }, rippleRef.timestamp < duration ? duration * .15 : 0);\n      this.runTimeoutOutsideZone(() => {\n        rippleRef.container.parentNode.removeChild(rippleRef.container);\n      // }, rippleRef.timestamp < duration ? duration * 2 : duration);\n      // }, rippleRef.timestamp < duration ? duration / (duration * .001 + 1) * 2 : duration);\n      }, rippleRef.timestamp < duration ? duration * 2 : duration);\n    }\n  }\n  removeEvents() {\n    if (this._triggerElement) {\n      this._eventHandlers.forEach((fn, type) => {\n        this._triggerElement.removeEventListener(type, fn, this._eventOptions);\n      });\n    }\n  }\n\n}\n\nfunction rippleRadius(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\nfunction maxSize(rect: ClientRect) {\n  return Math.max(rect.width, rect.height);\n}\n","import { Injectable } from '@angular/core';\nimport { LyTheme2, LY_COMMON_STYLES, ThemeVariables } from '@alyle/ui';\n\nexport const styles = (theme: ThemeVariables) => ({\n  rippleContainer: {\n    position: 'absolute',\n    width: '5px',\n    height: '5px',\n    background: 'currentColor',\n    opacity: '.19',\n    borderRadius: '100%',\n    transform: 'scale(0)',\n    transition: `opacity ${theme.ripple.transition.opacity},transform ${theme.ripple.transition.transform\n    }`,\n    pointerEvents: 'none'\n  },\n  container: {\n    ...LY_COMMON_STYLES.fill,\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    borderRadius: 'inherit'\n  }\n});\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyRippleService {\n  classes = this.theme.addStyleSheet(styles, 'lyRipple');\n  constructor(\n    private theme: LyTheme2\n  ) { }\n\n}\n","import {\n  ElementRef,\n  Input,\n  Directive,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { toBoolean, Platform, LyTheme2 } from '@alyle/ui';\nimport { Ripple, RippleConfig } from './ripple';\nimport { LyRippleService } from './ripple.service';\n\n@Directive({\n  selector: '[lyRipple], [ly-ripple]',\n  exportAs: 'lyRipple'\n})\nexport class LyRipple implements OnInit, OnChanges, OnDestroy {\n  rippleContainer: Ripple;\n  @Input() lyRippleCentered: boolean;\n  @Input() lyRippleDisabled: boolean;\n  @Input() lyRippleSensitive: boolean;\n  @Input() lyRippleRadius: 'containerSize' | number;\n  @Input() lyRipplePercentageToIncrease: number;\n  get lyRippleConfig(): RippleConfig {\n    return {\n      centered: toBoolean(this.lyRippleCentered),\n      disabled: toBoolean(this.lyRippleDisabled),\n      sensitive: toBoolean(this.lyRippleSensitive),\n      radius: this.lyRippleRadius,\n      percentageToIncrease: this.lyRipplePercentageToIncrease,\n    };\n  }\n  constructor(\n    private rippleService: LyRippleService,\n    public _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    private _theme: LyTheme2\n  ) {\n    if (Platform.isBrowser) {\n      this.rippleContainer = new Ripple(this._theme.config, this._ngZone, this.rippleService.classes, this._elementRef.nativeElement);\n    }\n  }\n\n  ngOnInit() {\n    this._updateRipple();\n  }\n\n  ngOnChanges() {\n    this._updateRipple();\n  }\n\n  private _updateRipple() {\n    if (Platform.isBrowser) {\n      this.rippleContainer.setConfig(this.lyRippleConfig);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.rippleContainer) {\n      this.rippleContainer.removeEvents();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyRipple } from './ripple.directive';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [LyRipple],\n  exports: [LyRipple]\n})\nexport class LyRippleModule { }\n","import { IRippleVariables } from '@alyle/ui';\n\nexport const RippleVariables: IRippleVariables = {\n  transition: {\n    opacity: 'cubic-bezier(0.4,0.0,1,1)',\n    // transform: 'cubic-bezier(.1, 1, 0.5, 1)'\n    transform: 'cubic-bezier(0, 1, 0.6, 1)'\n  },\n  duration: 950\n};\n"],"names":[],"mappings":"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"}
