import { Color } from '@alyle/ui/color';
import { shadowBuilder } from '../shadow';
import { getNativeElement } from '../minimal/common';
const DEFAULT_VALUE = '';
const STYLE_PRIORITY = -1;
export function mixinStyleUpdater(base) {
    return class extends base {
        setAutoContrast() {
            this._autoContrast = true;
        }
        updateStyle(element) {
            const __bg = this._superHyperInternalPropertyBg;
            const __color = this._superHyperInternalPropertyColor === 'auto'
                ? ''
                : this._superHyperInternalPropertyColor;
            const __raised = this._superHyperInternalPropertyRaised;
            const __elevation = this._superHyperInternalPropertyElevation;
            const __disabled = this._superHyperInternalPropertyDisabled;
            const __outlined = this._superHyperInternalPropertyOutlined;
            const __shadowColor = this._superHyperInternalPropertyShadowColor;
            const __isContrast = this._autoContrast || this._superHyperInternalPropertyColor === 'auto';
            const el = getNativeElement(element);
            const newKey = `c--${__bg || DEFAULT_VALUE}_${__color || DEFAULT_VALUE}_${__raised || DEFAULT_VALUE}_${__elevation || DEFAULT_VALUE}_${__disabled || DEFAULT_VALUE}_${__outlined || DEFAULT_VALUE}_${__shadowColor || DEFAULT_VALUE}_${__isContrast || DEFAULT_VALUE}`;
            const newClass = this._theme.renderStyle(newKey, (theme) => {
                let sColor;
                let sBackground;
                let sBorder;
                let sPointerEvents;
                let sBoxShadow;
                let sBoxShadowActive;
                if (__outlined) {
                    sBorder = '1px solid currentColor';
                }
                if (__disabled) {
                    sColor = theme.disabled.contrast;
                    sPointerEvents = 'none';
                    if (__bg) {
                        sBackground = theme.disabled.default;
                    }
                }
                else {
                    if (__bg) {
                        sBackground = colorOf(theme, __bg);
                        if (__isContrast && !__color) {
                            sColor = theme.colorOf(`${__bg}:contrast`);
                            // Generate auto contrast if is necessary
                            if (sColor.css().includes('invalid')) {
                                const lum = (__bg instanceof Color ? __bg : theme.colorOf(__bg)).luminance();
                                sColor = lum < 0.5 ? theme.text.light : theme.text.dark;
                            }
                        }
                    }
                    if (!sColor && __color) {
                        sColor = colorOf(theme, __color);
                    }
                    if (__raised || (__elevation != null)) {
                        if (!__bg) {
                            sBackground = theme.background.primary.default;
                        }
                        const backgroundColorCss = sBackground !== __bg && colorOf(theme, __bg || 'background:primary', 'shadow');
                        const shadowColor = (__shadowColor && colorOf(theme, __shadowColor)) || backgroundColorCss || sBackground || sColor || theme.shadow;
                        if (__elevation != null) {
                            sBoxShadow = shadowBuilder(__elevation, shadowColor);
                        }
                        else {
                            sBoxShadow = shadowBuilder(3, shadowColor);
                            sBoxShadowActive = shadowBuilder(8, shadowColor);
                        }
                    }
                }
                return (className) => `${className}{${sColor ? 'color:' + sColor : ''};${sBackground ? 'background:' + sBackground : ''};${sBorder ? 'border:' + sBorder : ''};${sPointerEvents ? 'pointer-events:' + sPointerEvents : ''};${sBoxShadow ? 'box-shadow:' + sBoxShadow : ''};}${className}:active{${sBoxShadowActive ? 'box-shadow:' + sBoxShadowActive : ''};}`;
            }, STYLE_PRIORITY);
            el.classList.remove(this._classNameAnonymous);
            el.classList.add(newClass);
            this._classNameAnonymous = newClass;
        }
        constructor(...args) { super(...args); }
    };
}
function colorOf(theme, color, optional) {
    return color instanceof Color ? color : theme.colorOf(color, optional);
}
//# sourceMappingURL=data:application/json;base64,