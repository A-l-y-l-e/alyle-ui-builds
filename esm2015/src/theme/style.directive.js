var LyStyle_1;
import * as tslib_1 from "tslib";
import { Directive, Input } from '@angular/core';
import { eachMedia } from '../style-utils';
import { StyleRenderer, Style, WithStyles } from '../minimal/renderer-style';
const STYLE_PRIORITY = -0.5;
const ɵ0 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{padding:${to8Px(val)};}}`), true), ɵ1 = value => ({ breakpoints, after }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{padding-${after}:${to8Px(val)};}}`), true), ɵ2 = value => ({ breakpoints, before }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{padding-${before}:${to8Px(val)};}}`), true), ɵ3 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{padding-top:${to8Px(val)};}}`), true), ɵ4 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{padding-bottom:${to8Px(val)};}}`), true), ɵ5 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{padding:0 ${to8Px(val)};}}`), true), ɵ6 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{padding:${to8Px(val)} 0;}}`), true), ɵ7 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{margin:${to8Px(val)};}}`), true), ɵ8 = value => ({ breakpoints, after }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{margin-${after}:${to8Px(val)};}}`), true), ɵ9 = value => ({ breakpoints, before }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{margin-${before}:${to8Px(val)};}}`), true), ɵ10 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{margin-top:${to8Px(val)};}}`), true), ɵ11 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{margin-bottom:${to8Px(val)};}}`), true), ɵ12 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{margin:0 ${to8Px(val)};}}`), true), ɵ13 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{margin:${to8Px(val)} 0;}}`), true), ɵ14 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{width:${transform(val)};}}`), true), ɵ15 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{max-width:${transform(val)};}}`), true), ɵ16 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{min-width:${transform(val)};}}`), true), ɵ17 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{height:${transform(val)};}}`), true), ɵ18 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{max-height:${transform(val)};}}`), true), ɵ19 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{min-height:${transform(val)};}}`), true), ɵ20 = value => ({ breakpoints }) => eachMedia(value, (val, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{display:${val};}}`), true);
/**
 * @dynamic
 * Spacing
 * [p], [pf], [pe], [pt], [pb], [px], [py],
 * [m], [mf], [me], [mt], [mb], [mx], [my],
 * Sizing
 * [size],
 * [width], [maxWidth], [minWidth],
 * [height], [maxHeight], [minHeight],
 * Others
 * [lyStyle]
 * [width]
 */
let LyStyle = LyStyle_1 = class LyStyle {
    constructor(sRenderer) {
        this.sRenderer = sRenderer;
    }
    set size(value) {
        this.width = value;
        this.height = value;
    }
    get lyStyle() {
        return this._lyStyle;
    }
    set lyStyle(val) {
        if (typeof val === 'function') {
            this.sRenderer.add(val);
        }
        else if (val != null) {
            this[0xa] = this.sRenderer.add(`${LyStyle_1.и}--style-${val}`, ({ breakpoints }) => eachMedia(val, (v, media) => ((className) => `@media ${(media && breakpoints[media]) || 'all'}{${className}{${v};}}`), true), STYLE_PRIORITY);
        }
        else {
            this.sRenderer.removeClass(this[0xa]);
        }
    }
};
/** @docs-private */
LyStyle.и = 'LyStyle';
LyStyle.ctorParameters = () => [
    { type: StyleRenderer }
];
tslib_1.__decorate([
    Input(),
    Style(ɵ0)
], LyStyle.prototype, "p", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ1)
], LyStyle.prototype, "pf", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ2)
], LyStyle.prototype, "pe", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ3)
], LyStyle.prototype, "pt", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ4)
], LyStyle.prototype, "pb", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ5)
], LyStyle.prototype, "px", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ6)
], LyStyle.prototype, "py", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ7)
], LyStyle.prototype, "m", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ8)
], LyStyle.prototype, "mf", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ9)
], LyStyle.prototype, "me", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ10)
], LyStyle.prototype, "mt", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ11)
], LyStyle.prototype, "mb", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ12)
], LyStyle.prototype, "mx", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ13)
], LyStyle.prototype, "my", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ14)
], LyStyle.prototype, "width", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ15)
], LyStyle.prototype, "maxWidth", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ16)
], LyStyle.prototype, "minWidth", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ17)
], LyStyle.prototype, "height", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ18)
], LyStyle.prototype, "maxHeight", void 0);
tslib_1.__decorate([
    Input(),
    Style(ɵ19)
], LyStyle.prototype, "minHeight", void 0);
tslib_1.__decorate([
    Input()
], LyStyle.prototype, "size", null);
tslib_1.__decorate([
    Input(),
    Style(ɵ20)
], LyStyle.prototype, "display", void 0);
tslib_1.__decorate([
    Input()
], LyStyle.prototype, "lyStyle", null);
LyStyle = LyStyle_1 = tslib_1.__decorate([
    Directive({
        selector: `[lyStyle],
              [p], [pf], [pe], [pt], [pb], [px], [py],
              [m], [mf], [me], [mt], [mb], [mx], [my],
              [size],
              [width], [maxWidth], [minWidth],
              [height], [maxHeight], [minHeight],
              [display]`,
        providers: [
            StyleRenderer
        ]
    })
], LyStyle);
export { LyStyle };
/**
 * Convert to px if the value is a number, otherwise leave it as is
 * @docs-private
 */
function to8Px(val) {
    return typeof val === 'number'
        ? `${val * 8}px`
        : val;
}
function transform(value) {
    return value <= 1
        ? `${value * 100}%`
        : typeof value === 'string'
            ? value
            : `${value}px`;
}
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11, ɵ12, ɵ13, ɵ14, ɵ15, ɵ16, ɵ17, ɵ18, ɵ19, ɵ20 };
//# sourceMappingURL=data:application/json;base64,