/**
 * @experimental
 * Element to move, time in ms to animate
 */
export function scrollTo(element, duration) {
    let e = document.documentElement;
    if (e.scrollTop === 0) {
        const t = e.scrollTop;
        ++e.scrollTop;
        e = t + 1 === e.scrollTop-- ? e : document.body;
    }
    scrollToFromTo(e, e.scrollTop, element, duration);
}
// Element to move, element or px from, element or px to, time in ms to animate
function scrollToFromTo(element, from, to, duration) {
    if (duration <= 0) {
        return;
    }
    if (typeof from === 'object') {
        from = from.offsetTop;
    }
    if (typeof to === 'object') {
        to = to.offsetTop;
    }
    createScrollWithAnimation(element, from, to, 0, 1 / duration, 20, easeOutCuaic);
}
/**
 * @experimental
 */
export function scrollWithAnimation(element, to, duration, p, motion) {
    const _motion = motion || easeOutCuaic;
    const { scrollLeft } = element;
    return createScrollWithAnimation(element, scrollLeft, to, 0, 1 / duration, 20, _motion, p);
}
function createScrollWithAnimation(element, xFrom, xTo, t01, speed, step, motion, p) {
    const scrollT = p === 'y' ? 'scrollTop' : 'scrollLeft';
    if (t01 < 0 || t01 > 1 || speed <= 0) {
        element[scrollT] = xTo;
        return;
    }
    element[scrollT] = xFrom - (xFrom - xTo) * motion(t01);
    t01 += speed * step;
    setTimeout(() => {
        createScrollWithAnimation(element, xFrom, xTo, t01, speed, step, motion, p);
    }, step);
}
// function linearTween(t: number) {
//   return t;
// }
// function easeInQuad(t: number) {
//   return t * t;
// }
// function easeOutQuad(t: number) {
//   return -t * (t - 2);
// }
// function easeInOutQuad(t: number) {
//   t /= 0.5;
//   if (t < 1) {return t * t / 2; }
//   t--;
//   return (t * (t - 2) - 1) / 2;
// }
// function easeInCuaic(t: number) {
//   return t * t * t;
// }
function easeOutCuaic(t) {
    t--;
    return t * t * t + 1;
}
// function easeInOutCuaic(t: number) {
//   t /= 0.5;
//   if (t < 1) {return t * t * t / 2; }
//   t -= 2;
//   return (t * t * t + 2) / 2;
// }
// function easeInQuart(t: number) {
//   return t * t * t * t;
// }
// function easeOutQuart(t: number) {
//   t--;
//   return -(t * t * t * t - 1);
// }
// function easeInOutQuart(t: number) {
//   t /= 0.5;
//   if (t < 1) {return 0.5 * t * t * t * t; }
//   t -= 2;
//   return -(t * t * t * t - 2) / 2;
// }
// function easeInQuint(t: number) {
//   return t * t * t * t * t;
// }
// function easeOutQuint(t: number) {
//   t--;
//   return t * t * t * t * t + 1;
// }
// function easeInOutQuint(t: number) {
//   t /= 0.5;
//   if (t < 1) {return t * t * t * t * t / 2; }
//   t -= 2;
//   return (t * t * t * t * t + 2) / 2;
// }
// function easeInSine(t: number) {
//   return -Math.cos(t / (Math.PI / 2)) + 1;
// }
// function easeOutSine(t: number) {
//   return Math.sin(t / (Math.PI / 2));
// }
// function easeInOutSine(t: number) {
//   return -(Math.cos(Math.PI * t) - 1) / 2;
// }
// function easeInExpo(t: number) {
//   return Math.pow(2, 10 * (t - 1));
// }
// function easeOutExpo(t: number) {
//   return -Math.pow(2, -10 * t) + 1;
// }
// function easeInOutExpo(t: number) {
//   t /= 0.5;
//   if (t < 1) {return Math.pow(2, 10 * (t - 1)) / 2; }
//   t--;
//   return (-Math.pow(2, -10 * t) + 2) / 2;
// }
// function easeInCirc(t: number) {
//   return -Math.sqrt(1 - t * t) - 1;
// }
// function easeOutCirc(t: number) {
//   t--;
//   return Math.sqrt(1 - t * t);
// }
// function easeInOutCirc(t: number) {
//   t /= 0.5;
//   if (t < 1) {return -(Math.sqrt(1 - t * t) - 1) / 2; }
//   t -= 2;
//   return (Math.sqrt(1 - t * t) + 1) / 2;
// }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLXRvLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFseWxlL3VpLyIsInNvdXJjZXMiOlsic3JjL21pbmltYWwvc2Nyb2xsLXRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sVUFBVSxRQUFRLENBQUMsT0FBb0IsRUFBRSxRQUFnQjtJQUM3RCxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDO0lBQ2pDLElBQUksQ0FBQyxDQUFDLFNBQVMsS0FBSyxDQUFDLEVBQUU7UUFDckIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUN0QixFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDZCxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztLQUNqRDtJQUNELGNBQWMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDcEQsQ0FBQztBQUVELCtFQUErRTtBQUMvRSxTQUFTLGNBQWMsQ0FBQyxPQUFvQixFQUFFLElBQVMsRUFBRSxFQUF3QixFQUFFLFFBQWdCO0lBQ2pHLElBQUksUUFBUSxJQUFJLENBQUMsRUFBRTtRQUFFLE9BQU87S0FBRTtJQUM5QixJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUFFLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO0tBQUU7SUFDeEQsSUFBSSxPQUFPLEVBQUUsS0FBSyxRQUFRLEVBQUU7UUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQztLQUFFO0lBRWxELHlCQUF5QixDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxFQUFFLEVBQUUsRUFBRSxZQUFZLENBQUMs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Q0FBc0M7QUFDdEMsY0FBYztBQUNkLHdEQUF3RDtBQUN4RCxTQUFTO0FBQ1QsNENBQTRDO0FBQzVDLElBQUk7QUFFSixtQ0FBbUM7QUFDbkMsc0NBQXNDO0FBQ3RDLElBQUk7QUFFSixvQ0FBb0M7QUFDcEMsU0FBUztBQUNULGlDQUFpQztBQUNqQyxJQUFJO0FBRUosc0NBQXNDO0FBQ3RDLGNBQWM7QUFDZCwwREFBMEQ7QUFDMUQsWUFBWTtBQUNaLDJDQUEyQztBQUMzQyxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKiBFbGVtZW50IHRvIG1vdmUsIHRpbWUgaW4gbXMgdG8gYW5pbWF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2Nyb2xsVG8oZWxlbWVudDogSFRNTEVsZW1lbnQsIGR1cmF0aW9uOiBudW1iZXIpIHtcbiAgbGV0IGUgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIGlmIChlLnNjcm9sbFRvcCA9PT0gMCkge1xuICAgIGNvbnN0IHQgPSBlLnNjcm9sbFRvcDtcbiAgICArK2Uuc2Nyb2xsVG9wO1xuICAgIGUgPSB0ICsgMSA9PT0gZS5zY3JvbGxUb3AtLSA/IGUgOiBkb2N1bWVudC5ib2R5O1xuICB9XG4gIHNjcm9sbFRvRnJvbVRvKGUsIGUuc2Nyb2xsVG9wLCBlbGVtZW50LCBkdXJhdGlvbik7XG59XG5cbi8vIEVsZW1lbnQgdG8gbW92ZSwgZWxlbWVudCBvciBweCBmcm9tLCBlbGVtZW50IG9yIHB4IHRvLCB0aW1lIGluIG1zIHRvIGFuaW1hdGVcbmZ1bmN0aW9uIHNjcm9sbFRvRnJvbVRvKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBmcm9tOiBhbnksIHRvOiBudW1iZXIgfCBIVE1MRWxlbWVudCwgZHVyYXRpb246IG51bWJlcikge1xuICBpZiAoZHVyYXRpb24gPD0gMCkgeyByZXR1cm47IH1cbiAgaWYgKHR5cGVvZiBmcm9tID09PSAnb2JqZWN0JykgeyBmcm9tID0gZnJvbS5vZmZzZXRUb3A7IH1cbiAgaWYgKHR5cGVvZiB0byA9PT0gJ29iamVjdCcpIHsgdG8gPSB0by5vZmZzZXRUb3A7IH1cblxuICBjcmVhdGVTY3JvbGxXaXRoQW5pbWF0aW9uKGVsZW1lbnQsIGZyb20sIHRvLCAwLCAxIC8gZHVyYXRpb24sIDIwLCBlYXNlT3V0Q3VhaWMpO1xufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNjcm9sbFdpdGhBbmltYXRpb24oXG4gIGVsZW1lbnQ6IEhUTUxFbGVtZW50LFxuICB0bzogbnVtYmVyLFxuICBkdXJhdGlvbjogbnVtYmVyLFxuICBwPzogJ3gnIHwgJ3knLFxuICBtb3Rpb24/OiAodDogbnVtYmVyKSA9PiBudW1iZXJcbikge1xuICBjb25zdCBfbW90aW9uID0gbW90aW9uIHx8IGVhc2VPdXRDdWFpYztcbiAgY29uc3QgeyBzY3JvbGxMZWZ0IH0gPSBlbGVtZW50O1xuICByZXR1cm4gY3JlYXRlU2Nyb2xsV2l0aEFuaW1hdGlvbihlbGVtZW50LCBzY3JvbGxMZWZ0LCB0bywgMCwgMSAvIGR1cmF0aW9uLCAyMCwgX21vdGlvbiwgcCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNjcm9sbFdpdGhBbmltYXRpb24oXG4gIGVsZW1lbnQ6IEhUTUxFbGVtZW50LFxuICB4RnJvbTogbnVtYmVyLFxuICB4VG86IG51bWJlcixcbiAgdDAxOiBudW1iZXIsXG4gIHNwZWVkOiBudW1iZXIsXG4gIHN0ZXA6IG51bWJlcixcbiAgbW90aW9uOiAodDogbnVtYmVyKSA9PiBudW1iZXIsXG4gIHA/OiAneCcgfCAneSdcbikge1xuICBjb25zdCBzY3JvbGxUID0gcCA9PT0gJ3knID8gJ3Njcm9sbFRvcCcgOiAnc2Nyb2xsTGVmdCc7XG4gIGlmICh0MDEgPCAwIHx8IHQwMSA+IDEgfHwgc3BlZWQgPD0gMCkge1xuICAgIGVsZW1lbnRbIHNjcm9sbFQgXSA9IHhUbztcbiAgICByZXR1cm47XG4gIH1cbiAgZWxlbWVudFsgc2Nyb2xsVCBdID0geEZyb20gLSAoeEZyb20gLSB4VG8pICogbW90aW9uKHQwMSk7XG4gIHQwMSArPSBzcGVlZCAqIHN0ZXA7XG5cbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgY3JlYXRlU2Nyb2xsV2l0aEFuaW1hdGlvbihlbGVtZW50LCB4RnJvbSwgeFRvLCB0MDEsIHNwZWVkLCBzdGVwLCBtb3Rpb24sIHApO1xuICB9LCBzdGVwKTtcbn1cblxuXG4vLyBmdW5jdGlvbiBsaW5lYXJUd2Vlbih0OiBudW1iZXIpIHtcbi8vICAgcmV0dXJuIHQ7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGVhc2VJblF1YWQodDogbnVtYmVyKSB7XG4vLyAgIHJldHVybiB0ICogdDtcbi8vIH1cblxuLy8gZnVuY3Rpb24gZWFzZU91dFF1YWQodDogbnVtYmVyKSB7XG4vLyAgIHJldHVybiAtdCAqICh0IC0gMik7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGVhc2VJbk91dFF1YWQodDogbnVtYmVyKSB7XG4vLyAgIHQgLz0gMC41O1xuLy8gICBpZiAodCA8IDEpIHtyZXR1cm4gdCAqIHQgLyAyOyB9XG4vLyAgIHQtLTtcbi8vICAgcmV0dXJuICh0ICogKHQgLSAyKSAtIDEpIC8gMjtcbi8vIH1cblxuLy8gZnVuY3Rpb24gZWFzZUluQ3VhaWModDogbnVtYmVyKSB7XG4vLyAgIHJldHVybiB0ICogdCAqIHQ7XG4vLyB9XG5cbmZ1bmN0aW9uIGVhc2VPdXRDdWFpYyh0OiBudW1iZXIpIHtcbiAgdC0tO1xuICByZXR1cm4gdCAqIHQgKiB0ICsgMTtcbn1cblxuLy8gZnVuY3Rpb24gZWFzZUluT3V0Q3VhaWModDogbnVtYmVyKSB7XG4vLyAgIHQgLz0gMC41O1xuLy8gICBpZiAodCA8IDEpIHtyZXR1cm4gdCAqIHQgKiB0IC8gMjsgfVxuLy8gICB0IC09IDI7XG4vLyAgIHJldHVybiAodCAqIHQgKiB0ICsgMikgLyAyO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBlYXNlSW5RdWFydCh0OiBudW1iZXIpIHtcbi8vICAgcmV0dXJuIHQgKiB0ICogdCAqIHQ7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGVhc2VPdXRRdWFydCh0OiBudW1iZXIpIHtcbi8vICAgdC0tO1xuLy8gICByZXR1cm4gLSh0ICogdCAqIHQgKiB0IC0gMSk7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGVhc2VJbk91dFF1YXJ0KHQ6IG51bWJlcikge1xuLy8gICB0IC89IDAuNTtcbi8vICAgaWYgKHQgPCAxKSB7cmV0dXJuIDAuNSAqIHQgKiB0ICogdCAqIHQ7IH1cbi8vICAgdCAtPSAyO1xuLy8gICByZXR1cm4gLSh0ICogdCAqIHQgKiB0IC0gMikgLyAyO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBlYXNlSW5RdWludCh0OiBudW1iZXIpIHtcbi8vICAgcmV0dXJuIHQgKiB0ICogdCAqIHQgKiB0O1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBlYXNlT3V0UXVpbnQodDogbnVtYmVyKSB7XG4vLyAgIHQtLTtcbi8vICAgcmV0dXJuIHQgKiB0ICogdCAqIHQgKiB0ICsgMTtcbi8vIH1cblxuLy8gZnVuY3Rpb24gZWFzZUluT3V0UXVpbnQodDogbnVtYmVyKSB7XG4vLyAgIHQgLz0gMC41O1xuLy8gICBpZiAodCA8IDEpIHtyZXR1cm4gdCAqIHQgKiB0ICogdCAqIHQgLyAyOyB9XG4vLyAgIHQgLT0gMjtcbi8vICAgcmV0dXJuICh0ICogdCAqIHQgKiB0ICogdCArIDIpIC8gMjtcbi8vIH1cblxuLy8gZnVuY3Rpb24gZWFzZUluU2luZSh0OiBudW1iZXIpIHtcbi8vICAgcmV0dXJuIC1NYXRoLmNvcyh0IC8gKE1hdGguUEkgLyAyKSkgKyAxO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBlYXNlT3V0U2luZSh0OiBudW1iZXIpIHtcbi8vICAgcmV0dXJuIE1hdGguc2luKHQgLyAoTWF0aC5QSSAvIDIpKTtcbi8vIH1cblxuLy8gZnVuY3Rpb24gZWFzZUluT3V0U2luZSh0OiBudW1iZXIpIHtcbi8vICAgcmV0dXJuIC0oTWF0aC5jb3MoTWF0aC5QSSAqIHQpIC0gMSkgLyAyO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBlYXNlSW5FeHBvKHQ6IG51bWJlcikge1xuLy8gICByZXR1cm4gTWF0aC5wb3coMiwgMTAgKiAodCAtIDEpKTtcbi8vIH1cblxuLy8gZnVuY3Rpb24gZWFzZU91dEV4cG8odDogbnVtYmVyKSB7XG4vLyAgIHJldHVybiAtTWF0aC5wb3coMiwgLTEwICogdCkgKyAxO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBlYXNlSW5PdXRFeHBvKHQ6IG51bWJlcikge1xuLy8gICB0IC89IDAuNTtcbi8vICAgaWYgKHQgPCAxKSB7cmV0dXJuIE1hdGgucG93KDIsIDEwICogKHQgLSAxKSkgLyAyOyB9XG4vLyAgIHQtLTtcbi8vICAgcmV0dXJuICgtTWF0aC5wb3coMiwgLTEwICogdCkgKyAyKSAvIDI7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGVhc2VJbkNpcmModDogbnVtYmVyKSB7XG4vLyAgIHJldHVybiAtTWF0aC5zcXJ0KDEgLSB0ICogdCkgLSAxO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBlYXNlT3V0Q2lyYyh0OiBudW1iZXIpIHtcbi8vICAgdC0tO1xuLy8gICByZXR1cm4gTWF0aC5zcXJ0KDEgLSB0ICogdCk7XG4vLyB9XG5cbi8vIGZ1bmN0aW9uIGVhc2VJbk91dENpcmModDogbnVtYmVyKSB7XG4vLyAgIHQgLz0gMC41O1xuLy8gICBpZiAodCA8IDEpIHtyZXR1cm4gLShNYXRoLnNxcnQoMSAtIHQgKiB0KSAtIDEpIC8gMjsgfVxuLy8gICB0IC09IDI7XG4vLyAgIHJldHVybiAoTWF0aC5zcXJ0KDEgLSB0ICogdCkgKyAxKSAvIDI7XG4vLyB9XG4iXX0=