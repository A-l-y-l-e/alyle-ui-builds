import { shadowBuilder, StyleCollection, mergeThemes } from '@alyle/ui';
import { MinimaBase } from './base';
import { color, Color } from '@alyle/ui/color';
const contrast = new Color(0xffffff);
const shadow = new Color(0, 0, 0, 1);
export class MinimaDark extends MinimaBase {
    constructor() {
        super(...arguments);
        this.name = 'minima-dark';
        this.primary = {
            default: color(0x1DE9B6),
            contrast: new Color(0, 0, 0, 0.87)
        };
        this.accent = {
            default: new Color(0x9C27B0),
            contrast
        };
        this.warn = {
            default: new Color(0xEA404C),
            contrast
        };
        this.disabled = {
            default: new Color(255, 255, 255, 0.3),
            contrast: new Color(255, 255, 255, 0.5)
        };
        this.action = {
            default: new Color(255, 255, 255, 0.70),
            contrast: new Color(0, 0, 0, 0.87)
        };
        this.background = {
            default: new Color(0x303030),
            primary: {
                default: new Color(0x242424),
                shadow
            },
            secondary: new Color(47, 47, 47),
            tertiary: new Color(65, 65, 65),
        };
        this.hover = new Color(255, 255, 255, 0.04);
        this.paper = {
            default: new Color(0x242424),
            shadow
        };
        this.text = {
            default: new Color(0xffffff),
            primary: new Color(0xffffff),
            secondary: new Color(255, 255, 255, 0.70),
            disabled: new Color(255, 255, 255, 0.50),
            hint: new Color(255, 255, 255, 0.50),
            dark: new Color(0x2b2b2b),
            light: new Color(0xffffff)
        };
        this.drawer = {
            backdrop: new Color(49, 49, 49, .6)
        };
        this.bar = new Color(0x212121);
        this.divider = new Color(255, 255, 255, 0.12);
        this.colorShadow = shadow;
        this.shadow = shadow;
        this.field = mergeThemes(this.field, {
            root: _ => (className) => `${className} ${_.container}:after,${className} ${_.fieldset},${className} ${_.labelContainer}{border-color:${new Color(255, 255, 255, 0.12)};}${className} ${_.label},${className} ${_.placeholder}{color:${new Color(255, 255, 255, 0.4)};}`,
            appearance: {
                filled: _ => (className) => `${className} ${_.container}{background-color:${new Color(255, 255, 255, 0.04)};}`
            }
        });
        this.snackBar = {
            root: new StyleCollection((className) => `${className}{background:${new Color(0xfafafa)};color:${new Color(0, 0, 0, .87)};box-shadow:${shadowBuilder(4, new Color(0xfafafa))};}`)
        };
        this.tooltip = {
            root: new StyleCollection(() => (className) => `${className}{background:${new Color(250, 250, 250, 0.85)};color:${new Color(0, 0, 0, .87)};}`)
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFyay5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbHlsZS91aS90aGVtZXMvbWluaW1hLyIsInNvdXJjZXMiOlsiZGFyay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsYUFBYSxFQUNiLGVBQWUsRUFDZixXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNwQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBSy9DLE1BQU0sUUFBUSxHQUFHLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3JDLE1BQU0sTUFBTSxHQUFHLElBQUksS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBRXJDLE1BQU0sT0FBTyxVQUFXLFNBQVEsVUFBVTtJQUExQzs7UUFDRSxTQUFJLEdBQUcsYUFBYSxDQUFDO1FBQ3JCLFlBQU8sR0FBRztZQUNSLE9BQU8sRUFBRSxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQ3hCLFFBQVEsRUFBRSxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUM7U0FDbkMsQ0FBQztRQUNGLFdBQU0sR0FBRztZQUNQLE9BQU8sRUFBRSxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDNUIsUUFBUTtTQUNULENBQUM7UUFDRixTQUFJLEdBQUc7WUFDTCxPQUFPLEVBQUUsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQzVCLFFBQVE7U0FDVCxDQUFDO1FBQ0YsYUFBUSxHQUFHO1lBQ1QsT0FBTyxFQUFFLElBQUksS0FBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztZQUN0QyxRQUFRLEVBQUUsSUFBSSxLQUFLLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUs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R0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSTthQUN2SDtTQUNGLENBQUMsQ0FBQztRQUNILGFBQVEsR0FBb0I7WUFDMUIsSUFBSSxFQUFFLElBQUksZUFBZSxDQUFDLENBQUMsU0FBaUIsRUFBRSxFQUFFLENBQUMsR0FBRyxTQUFTLGVBQWUsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFVBQVUsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLGVBQWUsYUFBYSxDQUFDLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDMUwsQ0FBQztRQUNGLFlBQU8sR0FBbUI7WUFDeEIsSUFBSSxFQUFFLElBQUksZUFBZSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsU0FBaUIsRUFBRSxFQUFFLENBQUMsR0FBRyxTQUFTLGVBQWUsSUFBSSxLQUFLLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLFVBQVUsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQztTQUN2SixDQUFDO0lBQ0osQ0FBQztDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgc2hhZG93QnVpbGRlcixcbiAgU3R5bGVDb2xsZWN0aW9uLFxuICBtZXJnZVRoZW1lcyB9IGZyb20gJ0BhbHlsZS91aSc7XG5pbXBvcnQgeyBNaW5pbWFCYXNlIH0gZnJvbSAnLi9iYXNlJztcbmltcG9ydCB7IGNvbG9yLCBDb2xvciB9IGZyb20gJ0BhbHlsZS91aS9jb2xvcic7XG5pbXBvcnQgeyBMeUZpZWxkVGhlbWUgfSBmcm9tICdAYWx5bGUvdWkvZmllbGQnO1xuaW1wb3J0IHsgTHlUb29sdGlwVGhlbWUgfSBmcm9tICdAYWx5bGUvdWkvdG9vbHRpcCc7XG5pbXBvcnQgeyBMeVNuYWNrQmFyVGhlbWUgfSBmcm9tICdAYWx5bGUvdWkvc25hY2stYmFyJztcblxuY29uc3QgY29udHJhc3QgPSBuZXcgQ29sb3IoMHhmZmZmZmYpO1xuY29uc3Qgc2hhZG93ID0gbmV3IENvbG9yKDAsIDAsIDAsIDEpO1xuXG5leHBvcnQgY2xhc3MgTWluaW1hRGFyayBleHRlbmRzIE1pbmltYUJhc2Uge1xuICBuYW1lID0gJ21pbmltYS1kYXJrJztcbiAgcHJpbWFyeSA9IHtcbiAgICBkZWZhdWx0OiBjb2xvcigweDFERTlCNiksXG4gICAgY29udHJhc3Q6IG5ldyBDb2xvcigwLCAwLCAwLCAwLjg3KVxuICB9O1xuICBhY2NlbnQgPSB7XG4gICAgZGVmYXVsdDogbmV3IENvbG9yKDB4OUMyN0IwKSxcbiAgICBjb250cmFzdFxuICB9O1xuICB3YXJuID0ge1xuICAgIGRlZmF1bHQ6IG5ldyBDb2xvcigweEVBNDA0QyksXG4gICAgY29udHJhc3RcbiAgfTtcbiAgZGlzYWJsZWQgPSB7XG4gICAgZGVmYXVsdDogbmV3IENvbG9yKDI1NSwgMjU1LCAyNTUsIDAuMyksXG4gICAgY29udHJhc3Q6IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjUpXG4gIH07XG4gIGFjdGlvbiA9IHtcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC43MCksXG4gICAgY29udHJhc3Q6IG5ldyBDb2xvcigwLCAwLCAwLCAwLjg3KVxuICB9O1xuICBiYWNrZ3JvdW5kID0ge1xuICAgIGRlZmF1bHQ6IG5ldyBDb2xvcigweDMwMzAzMCksIC8vIHNlY29uZGFyeVxuICAgIHByaW1hcnk6IHtcbiAgICAgIGRlZmF1bHQ6IG5ldyBDb2xvcigweDI0MjQyNCksXG4gICAgICBzaGFkb3dcbiAgICB9LFxuICAgIHNlY29uZGFyeTogbmV3IENvbG9yKDQ3LCA0NywgNDcpLFxuICAgIHRlcnRpYXJ5OiBuZXcgQ29sb3IoNjUsIDY1LCA2NSksXG4gIH07XG4gIGhvdmVyID0gbmV3IENvbG9yKDI1NSwgMjU1LCAyNTUsIDAuMDQpO1xuICBwYXBlciA9IHtcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoMHgyNDI0MjQpLFxuICAgIHNoYWRvd1xuICB9O1xuICB0ZXh0ID0ge1xuICAgIGRlZmF1bHQ6IG5ldyBDb2xvcigweGZmZmZmZiksXG4gICAgcHJpbWFyeTogbmV3IENvbG9yKDB4ZmZmZmZmKSxcbiAgICBzZWNvbmRhcnk6IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjcwKSxcbiAgICBkaXNhYmxlZDogbmV3IENvbG9yKDI1NSwgMjU1LCAyNTUsIDAuNTApLFxuICAgIGhpbnQ6IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjUwKSxcbiAgICBkYXJrOiBuZXcgQ29sb3IoMHgyYjJiMmIpLFxuICAgIGxpZ2h0OiBuZXcgQ29sb3IoMHhmZmZmZmYpXG4gIH07XG4gIGRyYXdlciA9IHtcbiAgICBiYWNrZHJvcDogbmV3IENvbG9yKDQ5LCA0OSwgNDksIC42KVxuICB9O1xuICBiYXIgPSBuZXcgQ29sb3IoMHgyMTIxMjEpO1xuICBkaXZpZGVyID0gbmV3IENvbG9yKDI1NSwgMjU1LCAyNTUsIDAuMTIpO1xuICBjb2xvclNoYWRvdyA9IHNoYWRvdztcbiAgc2hhZG93ID0gc2hhZG93O1xuICBmaWVsZDogTHlGaWVsZFRoZW1lID0gbWVyZ2VUaGVtZXM8THlGaWVsZFRoZW1lLCBMeUZpZWxkVGhlbWU+KHRoaXMuZmllbGQsIHtcbiAgICByb290OiBfID0+IChjbGFzc05hbWU6IHN0cmluZykgPT4gYCR7Y2xhc3NOYW1lfSAke18uY29udGFpbmVyfTphZnRlciwke2NsYXNzTmFtZX0gJHtfLmZpZWxkc2V0fSwke2NsYXNzTmFtZX0gJHtfLmxhYmVsQ29udGFpbmVyfXtib3JkZXItY29sb3I6JHtuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC4xMil9O30ke2NsYXNzTmFtZX0gJHtfLmxhYmVsfSwke2NsYXNzTmFtZX0gJHtfLnBsYWNlaG9sZGVyfXtjb2xvcjoke25ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjQpfTt9YCxcbiAgICBhcHBlYXJhbmNlOiB7XG4gICAgICBmaWxsZWQ6IF8gPT4gKGNsYXNzTmFtZTogc3RyaW5nKSA9PiBgJHtjbGFzc05hbWV9ICR7Xy5jb250YWluZXJ9e2JhY2tncm91bmQtY29sb3I6JHtuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC4wNCl9O31gXG4gICAgfVxuICB9KTtcbiAgc25hY2tCYXI6IEx5U25hY2tCYXJUaGVtZSA9IHtcbiAgICByb290OiBuZXcgU3R5bGVDb2xsZWN0aW9uKChjbGFzc05hbWU6IHN0cmluZykgPT4gYCR7Y2xhc3NOYW1lfXtiYWNrZ3JvdW5kOiR7bmV3IENvbG9yKDB4ZmFmYWZhKX07Y29sb3I6JHtuZXcgQ29sb3IoMCwgMCwgMCwgLjg3KX07Ym94LXNoYWRvdzoke3NoYWRvd0J1aWxkZXIoNCwgbmV3IENvbG9yKDB4ZmFmYWZhKSl9O31gKVxuICB9O1xuICB0b29sdGlwOiBMeVRvb2x0aXBUaGVtZSA9IHtcbiAgICByb290OiBuZXcgU3R5bGVDb2xsZWN0aW9uKCgpID0+IChjbGFzc05hbWU6IHN0cmluZykgPT4gYCR7Y2xhc3NOYW1lfXtiYWNrZ3JvdW5kOiR7bmV3IENvbG9yKDI1MCwgMjUwLCAyNTAsIDAuODUpfTtjb2xvcjoke25ldyBDb2xvcigwLCAwLCAwLCAuODcpfTt9YClcbiAgfTtcbn1cbiJdfQ==