import { shadowBuilder, StyleCollection, mergeThemes } from '@alyle/ui';
import { MinimaBase } from './base';
import { Color } from '@alyle/ui/color';
const contrast = new Color(0xffffff);
const shadow = new Color(0, 0, 0, 1);
export class MinimaDark extends MinimaBase {
    constructor() {
        super(...arguments);
        this.name = 'minima-dark';
        this.primary = {
            default: Color(0x1DE9B6),
            contrast: new Color(0, 0, 0, 0.87)
        };
        this.accent = {
            default: new Color(0x9C27B0),
            contrast
        };
        this.warn = {
            default: new Color(0xEA404C),
            contrast
        };
        this.disabled = {
            default: new Color(255, 255, 255, 0.3),
            contrast: new Color(255, 255, 255, 0.5)
        };
        this.action = {
            default: new Color(255, 255, 255, 0.70),
            contrast: new Color(0, 0, 0, 0.87)
        };
        this.background = {
            default: new Color(0x303030),
            primary: {
                default: new Color(0x242424),
                shadow
            },
            secondary: new Color(47, 47, 47),
            tertiary: new Color(65, 65, 65),
        };
        this.hover = new Color(255, 255, 255, 0.04);
        this.paper = {
            default: new Color(0x242424),
            shadow
        };
        this.text = {
            default: new Color(0xffffff),
            primary: new Color(0xffffff),
            secondary: new Color(255, 255, 255, 0.70),
            disabled: new Color(255, 255, 255, 0.50),
            hint: new Color(255, 255, 255, 0.50),
            dark: new Color(0x2b2b2b),
            light: new Color(0xffffff)
        };
        this.drawer = {
            backdrop: new Color(49, 49, 49, .6)
        };
        this.bar = new Color(0x212121);
        this.divider = new Color(255, 255, 255, 0.12);
        this.colorShadow = shadow;
        this.shadow = shadow;
        this.field = mergeThemes(this.field, {
            root: _ => (className) => `${className} ${_.container}:after,${className} ${_.fieldset},${className} ${_.labelContainer}{border-color:${new Color(255, 255, 255, 0.12)};}${className} ${_.label},${className} ${_.placeholder}{color:${new Color(255, 255, 255, 0.4)};}`,
            appearance: {
                filled: _ => (className) => `${className} ${_.container}{background-color:${new Color(255, 255, 255, 0.04)};}`
            }
        });
        this.snackBar = {
            root: new StyleCollection((className) => `${className}{background:${new Color(0xfafafa)};color:${new Color(0, 0, 0, .87)};box-shadow:${shadowBuilder(4, new Color(0xfafafa))};}`)
        };
        this.tooltip = {
            root: new StyleCollection(() => (className) => `${className}{background:${new Color(250, 250, 250, 0.85)};color:${new Color(0, 0, 0, .87)};}`)
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFyay5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbHlsZS91aS90aGVtZXMvbWluaW1hLyIsInNvdXJjZXMiOlsiZGFyay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsYUFBYSxFQUNiLGVBQWUsRUFDZixXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNwQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFLeEMsTUFBTSxRQUFRLEdBQUcsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDckMsTUFBTSxNQUFNLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFFckMsTUFBTSxPQUFPLFVBQVcsU0FBUSxVQUFVO0lBQTFDOztRQUNFLFNBQUksR0FBRyxhQUFhLENBQUM7UUFDckIsWUFBTyxHQUFHO1lBQ1IsT0FBTyxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDeEIsUUFBUSxFQUFFLElBQUksS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQztTQUNuQyxDQUFDO1FBQ0YsV0FBTSxHQUFHO1lBQ1AsT0FBTyxFQUFFLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUM1QixRQUFRO1NBQ1QsQ0FBQztRQUNGLFNBQUksR0FBRztZQUNMLE9BQU8sRUFBRSxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDNUIsUUFBUTtTQUNULENBQUM7UUFDRixhQUFRLEdBQUc7WUFDVCxPQUFPLEVBQUUsSUFBSSxLQUFLLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO1lBQ3RDLFFBQVEsRUFBRSxJQUFJLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7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R0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJO2FBQ3ZIO1NBQ0YsQ0FBQyxDQUFDO1FBQ0gsYUFBUSxHQUFvQjtZQUMxQixJQUFJLEVBQUUsSUFBSSxlQUFlLENBQUMsQ0FBQyxTQUFpQixFQUFFLEVBQUUsQ0FBQyxHQUFHLFNBQVMsZUFBZSxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsZUFBZSxhQUFhLENBQUMsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQztTQUMxTCxDQUFDO1FBQ0YsWUFBTyxHQUFtQjtZQUN4QixJQUFJLEVBQUUsSUFBSSxlQUFlLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxTQUFpQixFQUFFLEVBQUUsQ0FBQyxHQUFHLFNBQVMsZUFBZSxJQUFJLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsVUFBVSxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDO1NBQ3ZKLENBQUM7SUFDSixDQUFDO0NBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBzaGFkb3dCdWlsZGVyLFxuICBTdHlsZUNvbGxlY3Rpb24sXG4gIG1lcmdlVGhlbWVzIH0gZnJvbSAnQGFseWxlL3VpJztcbmltcG9ydCB7IE1pbmltYUJhc2UgfSBmcm9tICcuL2Jhc2UnO1xuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICdAYWx5bGUvdWkvY29sb3InO1xuaW1wb3J0IHsgTHlGaWVsZFRoZW1lIH0gZnJvbSAnQGFseWxlL3VpL2ZpZWxkJztcbmltcG9ydCB7IEx5VG9vbHRpcFRoZW1lIH0gZnJvbSAnQGFseWxlL3VpL3Rvb2x0aXAnO1xuaW1wb3J0IHsgTHlTbmFja0JhclRoZW1lIH0gZnJvbSAnQGFseWxlL3VpL3NuYWNrLWJhcic7XG5cbmNvbnN0IGNvbnRyYXN0ID0gbmV3IENvbG9yKDB4ZmZmZmZmKTtcbmNvbnN0IHNoYWRvdyA9IG5ldyBDb2xvcigwLCAwLCAwLCAxKTtcblxuZXhwb3J0IGNsYXNzIE1pbmltYURhcmsgZXh0ZW5kcyBNaW5pbWFCYXNlIHtcbiAgbmFtZSA9ICdtaW5pbWEtZGFyayc7XG4gIHByaW1hcnkgPSB7XG4gICAgZGVmYXVsdDogQ29sb3IoMHgxREU5QjYpLFxuICAgIGNvbnRyYXN0OiBuZXcgQ29sb3IoMCwgMCwgMCwgMC44NylcbiAgfTtcbiAgYWNjZW50ID0ge1xuICAgIGRlZmF1bHQ6IG5ldyBDb2xvcigweDlDMjdCMCksXG4gICAgY29udHJhc3RcbiAgfTtcbiAgd2FybiA9IHtcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoMHhFQTQwNEMpLFxuICAgIGNvbnRyYXN0XG4gIH07XG4gIGRpc2FibGVkID0ge1xuICAgIGRlZmF1bHQ6IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjMpLFxuICAgIGNvbnRyYXN0OiBuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC41KVxuICB9O1xuICBhY3Rpb24gPSB7XG4gICAgZGVmYXVsdDogbmV3IENvbG9yKDI1NSwgMjU1LCAyNTUsIDAuNzApLFxuICAgIGNvbnRyYXN0OiBuZXcgQ29sb3IoMCwgMCwgMCwgMC44NylcbiAgfTtcbiAgYmFja2dyb3VuZCA9IHtcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoMHgzMDMwMzApLCAvLyBzZWNvbmRhcnlcbiAgICBwcmltYXJ5OiB7XG4gICAgICBkZWZhdWx0OiBuZXcgQ29sb3IoMHgyNDI0MjQpLFxuICAgICAgc2hhZG93XG4gICAgfSxcbiAgICBzZWNvbmRhcnk6IG5ldyBDb2xvcig0NywgNDcsIDQ3KSxcbiAgICB0ZXJ0aWFyeTogbmV3IENvbG9yKDY1LCA2NSwgNjUpLFxuICB9O1xuICBob3ZlciA9IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjA0KTtcbiAgcGFwZXIgPSB7XG4gICAgZGVmYXVsdDogbmV3IENvbG9yKDB4MjQyNDI0KSxcbiAgICBzaGFkb3dcbiAgfTtcbiAgdGV4dCA9IHtcbiAgICBkZWZhdWx0OiBuZXcgQ29sb3IoMHhmZmZmZmYpLFxuICAgIHByaW1hcnk6IG5ldyBDb2xvcigweGZmZmZmZiksXG4gICAgc2Vjb25kYXJ5OiBuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC43MCksXG4gICAgZGlzYWJsZWQ6IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjUwKSxcbiAgICBoaW50OiBuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC41MCksXG4gICAgZGFyazogbmV3IENvbG9yKDB4MmIyYjJiKSxcbiAgICBsaWdodDogbmV3IENvbG9yKDB4ZmZmZmZmKVxuICB9O1xuICBkcmF3ZXIgPSB7XG4gICAgYmFja2Ryb3A6IG5ldyBDb2xvcig0OSwgNDksIDQ5LCAuNilcbiAgfTtcbiAgYmFyID0gbmV3IENvbG9yKDB4MjEyMTIxKTtcbiAgZGl2aWRlciA9IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwLjEyKTtcbiAgY29sb3JTaGFkb3cgPSBzaGFkb3c7XG4gIHNoYWRvdyA9IHNoYWRvdztcbiAgZmllbGQ6IEx5RmllbGRUaGVtZSA9IG1lcmdlVGhlbWVzPEx5RmllbGRUaGVtZSwgTHlGaWVsZFRoZW1lPih0aGlzLmZpZWxkLCB7XG4gICAgcm9vdDogXyA9PiAoY2xhc3NOYW1lOiBzdHJpbmcpID0+IGAke2NsYXNzTmFtZX0gJHtfLmNvbnRhaW5lcn06YWZ0ZXIsJHtjbGFzc05hbWV9ICR7Xy5maWVsZHNldH0sJHtjbGFzc05hbWV9ICR7Xy5sYWJlbENvbnRhaW5lcn17Ym9yZGVyLWNvbG9yOiR7bmV3IENvbG9yKDI1NSwgMjU1LCAyNTUsIDAuMTIpfTt9JHtjbGFzc05hbWV9ICR7Xy5sYWJlbH0sJHtjbGFzc05hbWV9ICR7Xy5wbGFjZWhvbGRlcn17Y29sb3I6JHtuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC40KX07fWAsXG4gICAgYXBwZWFyYW5jZToge1xuICAgICAgZmlsbGVkOiBfID0+IChjbGFzc05hbWU6IHN0cmluZykgPT4gYCR7Y2xhc3NOYW1lfSAke18uY29udGFpbmVyfXtiYWNrZ3JvdW5kLWNvbG9yOiR7bmV3IENvbG9yKDI1NSwgMjU1LCAyNTUsIDAuMDQpfTt9YFxuICAgIH1cbiAgfSk7XG4gIHNuYWNrQmFyOiBMeVNuYWNrQmFyVGhlbWUgPSB7XG4gICAgcm9vdDogbmV3IFN0eWxlQ29sbGVjdGlvbigoY2xhc3NOYW1lOiBzdHJpbmcpID0+IGAke2NsYXNzTmFtZX17YmFja2dyb3VuZDoke25ldyBDb2xvcigweGZhZmFmYSl9O2NvbG9yOiR7bmV3IENvbG9yKDAsIDAsIDAsIC44Nyl9O2JveC1zaGFkb3c6JHtzaGFkb3dCdWlsZGVyKDQsIG5ldyBDb2xvcigweGZhZmFmYSkpfTt9YClcbiAgfTtcbiAgdG9vbHRpcDogTHlUb29sdGlwVGhlbWUgPSB7XG4gICAgcm9vdDogbmV3IFN0eWxlQ29sbGVjdGlvbigoKSA9PiAoY2xhc3NOYW1lOiBzdHJpbmcpID0+IGAke2NsYXNzTmFtZX17YmFja2dyb3VuZDoke25ldyBDb2xvcigyNTAsIDI1MCwgMjUwLCAwLjg1KX07Y29sb3I6JHtuZXcgQ29sb3IoMCwgMCwgMCwgLjg3KX07fWApXG4gIH07XG59XG4iXX0=