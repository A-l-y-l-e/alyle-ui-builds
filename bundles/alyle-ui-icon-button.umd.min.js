!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@alyle/ui"),require("@angular/core"),require("@alyle/ui/ripple"),require("@angular/common")):"function"==typeof define&&define.amd?define("@alyle/ui/icon-button",["exports","@alyle/ui","@angular/core","@alyle/ui/ripple","@angular/common"],t):t((e.alyle=e.alyle||{},e.alyle.ui=e.alyle.ui||{},e.alyle.ui["icon-button"]={}),e.alyle.ui,e.ng.core,e.alyle.ui.ripple,e.ng.common)}(this,function(e,t,n,o,i){"use strict";var r=function(){function e(e){this.coreTheme=e,this.classes={host:this.coreTheme.setUpStyle("icnBtn",{"":function(){return"-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);justify-content: center;align-items: center;background:transparent;border:0;padding:0;overflow:hidden;cursor:pointer;outline:none;box-sizing:border-box;color:currentColor;display:inline-flex;position:relative;text-decoration: none;border-radius:50%;"}}),content:this.coreTheme.setUpStyle("icnBtnCntnt",{"":function(){return"display:flex;justify-content:inherit;align-items:inherit;width:inherit;height:inherit;overflow:inherit;"}})}}return e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.CoreTheme}]},e.ngInjectableDef=n.defineInjectable({factory:function(){return new e(n.inject(t.CoreTheme))},token:e,providedIn:"root"}),e}(),c=function(){function e(e,t,n,o,i){this.elementRef=e,this.renderer=t,this.bgAndColor=n,this.iconButtonService=o,this.theme=i,n&&n.setAutoContrast()}return Object.defineProperty(e.prototype,"classes",{get:function(){var e=this;return{config:this.theme.setUpStyle("iconButtonConfig",{"":function(){return"width:"+e.theme.config.iconButton.size+";height:"+e.theme.config.iconButton.size+";"}})}},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.renderer.addClass(this.elementRef.nativeElement,this.iconButtonService.classes.host),this.renderer.addClass(this.elementRef.nativeElement,this.classes.config)},e.decorators=[{type:n.Component,args:[{selector:"button[ly-icon-button], a[ly-icon-button], span[ly-icon-button]",template:'\n  <div class="{{ iconButtonService.classes.content }}"\n  lyRipple\n  lyRippleCentered\n  >\n    <ng-content></ng-content>\n  </div>\n  ',preserveWhitespaces:!1,changeDetection:n.ChangeDetectionStrategy.OnPush,exportAs:"lyIconButton"}]}],e.ctorParameters=function(){return[{type:n.ElementRef},{type:n.Renderer2},{type:t.LyCommon,decorators:[{type:n.Optional}]},{type:r},{type:t.LyTheme2}]},e.propDecorators={ripple:[{type:n.ViewChild,args:[o.LyRipple]}]},e}(),l=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[i.CommonModule,o.LyRippleModule],exports:[c],declarations:[c]}]}],e}();e.LyIconButtonModule=l,e.LyIconButton=c,e.Éµa=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=alyle-ui-icon-button.umd.min.js.map