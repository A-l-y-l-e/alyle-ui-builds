{"version":3,"sources":["ng://@alyle/ui/icon-button/icon-button.service.ts","ng://@alyle/ui/icon-button/icon-button.ts","ng://@alyle/ui/icon-button/icon-button.module.ts"],"names":["styles","root","-webkit-user-select","-moz-user-select","-ms-user-select","userSelect","-webkit-tap-highlight-color","justifyContent","alignItems","background","border","padding","cursor","outline","boxSizing","color","display","position","textDecoration","borderRadius","content","width","height","overflow","LyIconButtonService","theme","this","addStyleSheet","Injectable","args","providedIn","LyTheme2","size","iconButton","LyIconButton","_el","renderer","bgAndColor","iconButtonService","_ngZone","_rippleService","setAutoContrast","prototype","ngOnInit","addClass","nativeElement","classes","ngAfterViewInit","Platform","isBrowser","rippleContainer","_rippleContainer","triggerElement","_ripple","Ripple","config","setConfig","centered","ngOnDestroy","removeEvents","Component","selector","template","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","exportAs","ElementRef","Renderer2","LyCommon","decorators","type","Optional","NgZone","LyRippleService","ViewChild","LyIconButtonModule","NgModule","imports","CommonModule","LyRippleModule","exports","declarations"],"mappings":"mfAGA,IAEMA,EAAM,CACVC,KAAM,CACJC,sBAAuB,OACvBC,mBAAoB,OACpBC,kBAAmB,OACnBC,WAAY,OACZC,8BAA+B,mBAC/BC,eAAgB,SAChBC,WAAY,SACZC,WAAY,cACZC,OAAQ,EACRC,QAAS,EACTC,OAAQ,UACRC,QAAS,OACTC,UAAW,aACXC,MAAO,eACPC,QAAS,cACTC,SAAU,WACVC,eAAgB,OAChBC,aAAc,OAEhBC,QAAS,CACPJ,QAAS,OACTT,eAAgB,UAChBC,WAAY,UACZa,MAAO,UACPC,OAAQ,UACRC,SAAU,yBASZ,SAAAC,EACUC,GAAAC,KAAAD,MAAAA,eAFAC,KAAKD,MAAME,cAAc3B,EAAQ,sBArCtB,8BAiCtB4B,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDArCLC,EAAAA,0ICmBH/B,EAAS,SAAAyB,GAAS,MAAA,CACtBO,KAAM,CACJX,MAAOI,EAAMQ,WAAWD,KACxBV,OAAQG,EAAMQ,WAAWD,qBAoB3B,SAAAE,EACSC,EACCC,EACIC,EACLC,EACCb,EACAc,EACDC,GANAd,KAAAS,IAAAA,EACCT,KAAAU,SAAAA,EAEDV,KAAAY,kBAAAA,EACCZ,KAAAD,MAAAA,EACAC,KAAAa,QAAAA,EACDb,KAAAc,eAAAA,eAVCd,KAAKD,MAAME,cAAc3B,EAAQ,gBAtBtB,GAkCfqC,GACFA,EAAWI,yBAIfP,EAAAQ,UAAAC,SAAA,WACEjB,KAAKU,SAASQ,SAASlB,KAAKS,IAAIU,cAAenB,KAAKY,kBAAkBQ,QAAQ7C,MAC9EyB,KAAKU,SAASQ,SAASlB,KAAKS,IAAIU,cAAenB,KAAKoB,QAAQd,OAG9DE,EAAAQ,UAAAK,gBAAA,WACE,GAAIC,EAAAA,SAASC,UAAW,CACtB,IAAMC,EAAkBxB,KAAKyB,iBAAiBN,cACxCO,EAAiB1B,KAAKS,IAAIU,cAChCnB,KAAK2B,QAAU,IAAIC,EAAAA,OAAO5B,KAAKD,MAAM8B,OAAQ7B,KAAKa,QAASb,KAAKc,eAAeM,QAASI,EAAiBE,GACzG1B,KAAK2B,QAAQG,UAAU,CACrBC,UAAU,MAKhBvB,EAAAQ,UAAAgB,YAAA,WACMV,EAAAA,SAASC,WACXvB,KAAK2B,QAAQM,oCAhDlBC,EAAAA,UAAS/B,KAAA,CAAC,CAETgC,SAAU,kEACVC,SAAU,kLAKVC,qBAAqB,EACrBC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,SAAU,4DAlCVC,EAAAA,kBAIAC,EAAAA,iBAQOC,EAAAA,SAAQC,WAAA,CAAA,CAAAC,KA+BZC,EAAAA,kBA9BIjD,SADUO,EAAAA,gBALjB2C,EAAAA,cAIOC,EAAAA,6DA4BNC,EAAAA,UAAS/C,KAAA,CAAC,2BCzCbgD,EAAA,oDAMCC,EAAAA,SAAQjD,KAAA,CAAC,CACRkD,QAAS,CAACC,EAAAA,aAAcC,EAAAA,gBACxBC,QAAS,CAAChD,GACViD,aAAc,CAACjD,SATjB","sourcesContent":["import { LyTheme2 } from '@alyle/ui';\nimport { Injectable } from '@angular/core';\n\nconst STYLE_PRIORITY = -2;\n\nconst styles = ({\n  root: {\n    '-webkit-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    '-webkit-tap-highlight-color': 'rgba(0, 0, 0, 0)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'transparent',\n    border: 0,\n    padding: 0,\n    cursor: 'pointer',\n    outline: 'none',\n    boxSizing: 'border-box',\n    color: 'currentColor',\n    display: 'inline-flex',\n    position: 'relative',\n    textDecoration: 'none',\n    borderRadius: '50%',\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'inherit',\n    alignItems: 'inherit',\n    width: 'inherit',\n    height: 'inherit',\n    overflow: 'inherit',\n  }\n});\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyIconButtonService {\n  classes = this.theme.addStyleSheet(styles, 'lyIconButtonStatic', STYLE_PRIORITY);\n  constructor(\n    private theme: LyTheme2\n  ) { }\n}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n  Optional,\n  Renderer2,\n  ChangeDetectionStrategy,\n  AfterViewInit,\n  NgZone,\n  OnDestroy\n} from '@angular/core';\n\nimport { LyRippleService, Ripple } from '@alyle/ui/ripple';\nimport { LyCommon, LyTheme2, Platform } from '@alyle/ui';\nimport { LyIconButtonService } from './icon-button.service';\n\nconst STYLE_PRIORITY = -2;\n\nconst styles = theme => ({\n  size: {\n    width: theme.iconButton.size,\n    height: theme.iconButton.size\n  }\n});\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button[ly-icon-button], a[ly-icon-button], span[ly-icon-button]',\n  template: `\n  <div [className]=\"iconButtonService.classes.content\"\n  ><ng-content></ng-content></div>\n  <div #rippleContainer [className]=\"_rippleService.classes.container\"></div>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'lyIconButton'\n})\nexport class LyIconButton implements OnInit, AfterViewInit, OnDestroy {\n  classes = this.theme.addStyleSheet(styles, 'lyIconButton', STYLE_PRIORITY);\n  private _ripple: Ripple;\n  @ViewChild('rippleContainer') _rippleContainer: ElementRef;\n  constructor(\n    public _el: ElementRef,\n    private renderer: Renderer2,\n    @Optional() bgAndColor: LyCommon,\n    public iconButtonService: LyIconButtonService,\n    private theme: LyTheme2,\n    private _ngZone: NgZone,\n    public _rippleService: LyRippleService,\n  ) {\n    if (bgAndColor) {\n      bgAndColor.setAutoContrast();\n    }\n  }\n\n  ngOnInit() {\n    this.renderer.addClass(this._el.nativeElement, this.iconButtonService.classes.root);\n    this.renderer.addClass(this._el.nativeElement, this.classes.size);\n  }\n\n  ngAfterViewInit() {\n    if (Platform.isBrowser) {\n      const rippleContainer = this._rippleContainer.nativeElement;\n      const triggerElement = this._el.nativeElement;\n      this._ripple = new Ripple(this.theme.config, this._ngZone, this._rippleService.classes, rippleContainer, triggerElement);\n      this._ripple.setConfig({\n        centered: true\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (Platform.isBrowser) {\n      this._ripple.removeEvents();\n    }\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyRippleModule } from '@alyle/ui/ripple';\nimport { LyIconButton } from './icon-button';\n\n\n@NgModule({\n  imports: [CommonModule, LyRippleModule],\n  exports: [LyIconButton],\n  declarations: [LyIconButton],\n})\nexport class LyIconButtonModule { }\n"]}