{"version":3,"sources":["ng://@alyle/ui/responsive/tokens.ts","ng://@alyle/ui/responsive/media/media.directive.ts","ng://@alyle/ui/responsive/responsive.module.ts","ng://@alyle/ui/responsive/media-queries.ts"],"names":["LY_MEDIA_QUERIES","InjectionToken","MediaDirective","_renderer","_elementRef","coreTheme","mediaQueries","this","hide","setUpStyle","prototype","_show","val","newClass","updateClassName","nativeElement","_showClass","_hide","_hideClass","ngOnInit","lyHide","addClass","classes","Directive","args","selector","Renderer2","ElementRef","CoreTheme","Inject","Input","ResponsiveModule","NgModule","declarations","exports","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","xs","sm","md","lg","xl","lt-sm","lt-md","lt-lg","lt-xl","gt-xs","gt-sm","gt-md","gt-lg"],"mappings":"gXAAA,IAEaA,EAAmB,IAAIC,EAAAA,eAA+B,oBCFnEC,EAAA,WA4DE,SAAAA,EACUC,EACAC,EACAC,EAC0BC,GAH1BC,KAAAJ,UAAAA,EACAI,KAAAH,YAAAA,EACAG,KAAAF,UAAAA,EAC0BE,KAAAD,aAAAA,eA5C1B,CACRE,KAAMD,KAAKF,UAAUI,WAAW,eAAgB,gBAAiB,qCAI/DP,EAAAQ,UAAA,SAAM,KAaV,WACE,OAAOH,KAAKI,oBAdHC,GACTL,KAAKI,MAAQC,EACb,IAAMC,EAAWN,KAAKF,UAAUI,WAAW,gBAAgBG,EAAK,kBAKhE,IAAGL,KAAKD,aAAaM,IAAQA,IAE7BL,KAAKF,UAAUS,gBAAgBP,KAAKH,YAAYW,cAAeR,KAAKJ,UAAWU,EAAUN,KAAKS,YAC9FT,KAAKS,WAAaH,yDAQhBX,EAAAQ,UAAA,SAAM,KAaV,WACE,OAAOH,KAAKU,oBAdHL,GACTL,KAAKU,MAAQL,EACb,IAAMC,EAAWN,KAAKF,UAAUI,WAAW,gBAAgBG,EAAK,4BAKhE,IAAGL,KAAKD,aAAaM,IAAQA,IAE7BL,KAAKF,UAAUS,gBAAgBP,KAAKH,YAAYW,cAAeR,KAAKJ,UAAWU,EAAUN,KAAKW,YAC9FX,KAAKW,WAAaL,mCAcpBX,EAAAQ,UAAAS,SAAA,WACOZ,KAAKa,QACRb,KAAKJ,UAAUkB,SAASd,KAAKH,YAAYW,cAAeR,KAAKe,QAAQd,2BAzD1Ee,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kEARVC,EAAAA,iBACAC,EAAAA,kBAGOC,EAAAA,6CAuDJC,EAAAA,OAAML,KAAA,CAACxB,wCAxCT8B,EAAAA,sBAkBAA,EAAAA,WA1CH,GCAAC,EAAA,oDAgBCC,EAAAA,SAAQR,KAAA,CAAC,CACRS,aAAc,CAAC/B,GACfgC,QAAS,CAAChC,SAlBZ,8ECA2B,CACzBiC,OAAQ,qBACRC,MAAO,4CACPC,OAAQ,6CACRC,MAAO,8CACPC,OAAQ,sBAERC,QAAS,kGAETC,OAAQ,iJAERC,IAAK,mGAGLC,gBAAiB,iDACjBC,eAAgB,wEAChBC,YAAa,iDAEbC,iBAAkB,kDAClBC,gBAAiB,0EACjBC,aAAc,mEAGY,CAC1BC,GAAM,qBACNC,GAAM,4CACNC,GAAM,6CACNC,GAAM,8CACNC,GAAM,8CACNC,QAAS,qBACTC,QAAS,qBACTC,QAAS,sBACTC,QAAS,sBACTC,QAAS,qBACTC,QAAS,qBACTC,QAAS,sBACTC,QAAS","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const LY_MEDIA_QUERIES = new InjectionToken<LyMediaQueries>('lyÂ·mediaÂ·queries');\n\nexport interface LyMediaQueries { [key: string]: string; }\n","import {\n  Directive,\n  Input,\n  OnInit,\n  Inject,\n  Renderer2,\n  ElementRef\n} from '@angular/core';\n\nimport { CoreTheme } from '@alyle/ui';\nimport { LY_MEDIA_QUERIES } from '../tokens';\n\n@Directive({\n  selector: '[lyShow], [lyHide]'\n})\nexport class MediaDirective implements OnInit {\n  private _show: string;\n  private _showClass: string;\n  private _hide: string;\n  private _hideClass: string;\n  classes = {\n    hide: this.coreTheme.setUpStyle('k-media-hide', 'display:none;', 'all')\n  };\n\n  @Input()\n  set lyShow(val: string) {\n    this._show = val;\n    const newClass = this.coreTheme.setUpStyle(`k-media-show-${val}`,\n    (\n      `display: block;`\n    )\n    ,\n    `${this.mediaQueries[val] || val}`// , InvertMediaQuery.Yes\n    );\n    this.coreTheme.updateClassName(this._elementRef.nativeElement, this._renderer, newClass, this._showClass);\n    this._showClass = newClass;\n  }\n\n  get lyShow(): string {\n    return this._show;\n  }\n\n  @Input()\n  set lyHide(val: string) {\n    this._hide = val;\n    const newClass = this.coreTheme.setUpStyle(`k-media-hide-${val}`,\n    (\n      `display: none !important;`\n    )\n    ,\n    `${this.mediaQueries[val] || val}`\n    );\n    this.coreTheme.updateClassName(this._elementRef.nativeElement, this._renderer, newClass, this._hideClass);\n    this._hideClass = newClass;\n  }\n\n  get lyHide(): string {\n    return this._hide;\n  }\n\n  constructor(\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private coreTheme: CoreTheme,\n    @Inject(LY_MEDIA_QUERIES) private mediaQueries: any, // { [key: string]: string; }\n  ) { }\n\n  ngOnInit() {\n    if (!this.lyHide) {\n      this._renderer.addClass(this._elementRef.nativeElement, this.classes.hide);\n    }\n  }\n\n}\n","import { NgModule, NgZone, ModuleWithProviders, SkipSelf, Optional, Provider } from '@angular/core';\n// import { Responsive } from './media.service';\n// import { PLATFORM_ID } from '@angular/core';\nimport { MediaDirective } from './media/media.directive';\n\n// export function responsiveProviderFactory(\n//   parent: Responsive, ngZone: NgZone, platformId: Object): Responsive {\n// return parent || new Responsive(ngZone, platformId);\n// }\n\n// export const responsiveProvider: Provider = {\n//   provide: Responsive,\n//   deps: [[new Optional(), new SkipSelf(), Responsive], NgZone, PLATFORM_ID],\n//   useFactory: responsiveProviderFactory\n// };\n\n@NgModule({\n  declarations: [MediaDirective],\n  exports: [MediaDirective],\n  // providers: [responsiveProvider]\n})\nexport class ResponsiveModule { }\n","export const Breakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n\n  Handset: '(max-width: 599px) and (orientation: portrait), ' +\n           '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\nexport const MediaQueries = {\n  'xs': '(max-width: 599px)',\n  'sm': '(min-width: 600px) and (max-width: 959px)',\n  'md': '(min-width: 960px) and (max-width: 1279px)',\n  'lg': '(min-width: 1280px) and (max-width: 1919px)',\n  'xl': '(min-width: 1920px) and (max-width: 5000px)',\n  'lt-sm': '(max-width: 599px)',\n  'lt-md': '(max-width: 959px)',\n  'lt-lg': '(max-width: 1279px)',\n  'lt-xl': '(max-width: 1919px)',\n  'gt-xs': '(min-width: 600px)',\n  'gt-sm': '(min-width: 960px)',\n  'gt-md': '(min-width: 1280px)',\n  'gt-lg': '(min-width: 1920px)'\n};\n"]}