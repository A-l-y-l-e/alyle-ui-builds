{"version":3,"sources":["ng://@alyle/ui/responsive/tokens.ts","ng://@alyle/ui/responsive/media/media.directive.ts","ng://@alyle/ui/responsive/responsive.module.ts","ng://@alyle/ui/responsive/media-queries.ts"],"names":["LY_MEDIA_QUERIES","InjectionToken","styles","hide","display","MediaDirective","_renderer","_elementRef","theme","mediaQueries","this","addStyleSheet","Object","defineProperty","prototype","_show","val","_showClass","addStyle","_a","nativeElement","_hide","_hideClass","ngOnInit","lyHide","addClass","classes","ngOnChanges","lyShow","Error","Directive","args","selector","Renderer2","ElementRef","LyTheme2","Inject","Input","ResponsiveModule","NgModule","declarations","exports","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","xs","sm","md","lg","xl","lt-sm","lt-md","lt-lg","lt-xl","gt-xs","gt-sm","gt-md","gt-lg"],"mappings":"gXAEA,IAAaA,EAAmB,IAAIC,EAAAA,eAA+B,oBCa7DC,EAAS,CACbC,KAAM,CACJC,QAAS,sBA8DX,SAAAC,EACUC,EACAC,EACAC,EAC0BC,GAH1BC,KAAAJ,UAAAA,EACAI,KAAAH,YAAAA,EACAG,KAAAF,MAAAA,EAC0BE,KAAAD,aAAAA,eAjD1BC,KAAKF,MAAMG,cAAcT,EAAQ,kBAK3CU,OAAAC,eACIR,EAAAS,UAAA,SAAM,KADV,WAEE,OAAOJ,KAAKK,WAEd,SAAWC,SACTN,KAAKK,MAAQC,EACbN,KAAKO,WAAaP,KAAKF,MAAMU,SAAS,gBAAgBF,IAAKG,EAAA,IAExD,WAAUT,KAAKD,aAAaO,IAAQA,IAAQ,CAC3CZ,QAAS,YAGbM,KAAKH,YAAYa,cACjBV,KAAKO,WAvCc,sCA+CrBL,OAAAC,eACIR,EAAAS,UAAA,SAAM,KAcV,WACE,OAAOJ,KAAKW,WAhBd,SACWL,SACTN,KAAKW,MAAQL,EACbN,KAAKY,WAAaZ,KAAKF,MAAMU,SAAS,gBAAgBF,IAAKG,EAAA,IAExD,WAAUT,KAAKD,aAAaO,IAAQA,IAAQ,CAC3CZ,QAAS,WAGbM,KAAKH,YAAYa,cACjBV,KAAKY,WAzDc,sCAyErBjB,EAAAS,UAAAS,SAAA,WACOb,KAAKc,QACRd,KAAKJ,UAAUmB,SAASf,KAAKH,YAAYa,cAAeV,KAAKgB,QAAQvB,OAIzEE,EAAAS,UAAAa,YAAA,WACE,GAAIjB,KAAKc,QAAUd,KAAKkB,OACtB,MAAM,IAAIC,MAAM,kEAzErBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kEAhBVC,EAAAA,iBACAC,EAAAA,kBAGOC,EAAAA,4CAyEJC,EAAAA,OAAML,KAAA,CAAC/B,wCA5CTqC,EAAAA,sBAqBAA,EAAAA,cC5DHC,EAAA,oDAgBCC,EAAAA,SAAQR,KAAA,CAAC,CACRS,aAAc,CAACnC,GACfoC,QAAS,CAACpC,SAlBZ,8ECA2B,CACzBqC,OAAQ,qBACRC,MAAO,4CACPC,OAAQ,6CACRC,MAAO,8CACPC,OAAQ,sBAERC,QAAS,kGAETC,OAAQ,iJAERC,IAAK,mGAGLC,gBAAiB,iDACjBC,eAAgB,wEAChBC,YAAa,iDAEbC,iBAAkB,kDAClBC,gBAAiB,0EACjBC,aAAc,mEAGY,CAC1BC,GAAM,qBACNC,GAAM,4CACNC,GAAM,6CACNC,GAAM,8CACNC,GAAM,8CACNC,QAAS,qBACTC,QAAS,qBACTC,QAAS,sBACTC,QAAS,sBACTC,QAAS,qBACTC,QAAS,qBACTC,QAAS,sBACTC,QAAS","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const LY_MEDIA_QUERIES = new InjectionToken<LyMediaQueries>('lyÂ·mediaÂ·queries');\n\nexport interface LyMediaQueries { [key: string]: string; }\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnChanges,\n  Inject,\n  Renderer2,\n  ElementRef\n} from '@angular/core';\n\nimport { LyTheme2 } from '@alyle/ui';\nimport { LY_MEDIA_QUERIES } from '../tokens';\n\nconst MEDIA_PRIORITY = 999;\n\nconst styles = {\n  hide: {\n    display: 'none'\n  }\n};\n\n@Directive({\n  selector: '[lyShow], [lyHide]'\n})\nexport class MediaDirective implements OnInit, OnChanges {\n  private _show: string;\n  private _showClass: string;\n  private _hide: string;\n  private _hideClass: string;\n\n  /**\n   * Styles\n   * @ignore\n   */\n  classes = this.theme.addStyleSheet(styles, 'lyMedia');\n\n  /**\n   * Shows the item when the value is resolved as true\n   */\n  @Input()\n  get lyShow(): string {\n    return this._show;\n  }\n  set lyShow(val: string) {\n    this._show = val;\n    this._showClass = this.theme.addStyle(`lyMedia-show:${val}`,\n    {\n      [`@media ${this.mediaQueries[val] || val}`]: {\n        display: `block`\n      }\n    },\n    this._elementRef.nativeElement,\n    this._showClass,\n    MEDIA_PRIORITY\n    );\n  }\n\n  /**\n   * Hides the item when the value is resolved as true\n   */\n  @Input()\n  set lyHide(val: string) {\n    this._hide = val;\n    this._hideClass = this.theme.addStyle(`lyMedia-hide:${val}`,\n    {\n      [`@media ${this.mediaQueries[val] || val}`]: {\n        display: 'none'\n      }\n    },\n    this._elementRef.nativeElement,\n    this._hideClass,\n    MEDIA_PRIORITY\n    );\n  }\n\n  get lyHide(): string {\n    return this._hide;\n  }\n\n  constructor(\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private theme: LyTheme2,\n    @Inject(LY_MEDIA_QUERIES) private mediaQueries: any, // { [key: string]: string; }\n  ) { }\n\n  ngOnInit() {\n    if (!this.lyHide) {\n      this._renderer.addClass(this._elementRef.nativeElement, this.classes.hide);\n    }\n  }\n\n  ngOnChanges() {\n    if (this.lyHide && this.lyShow) {\n      throw new Error(`use only \\`lyHide\\` or \\`lyShow\\` per element`);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\n// import { Responsive } from './media.service';\n// import { PLATFORM_ID } from '@angular/core';\nimport { MediaDirective } from './media/media.directive';\n\n// export function responsiveProviderFactory(\n//   parent: Responsive, ngZone: NgZone, platformId: Object): Responsive {\n// return parent || new Responsive(ngZone, platformId);\n// }\n\n// export const responsiveProvider: Provider = {\n//   provide: Responsive,\n//   deps: [[new Optional(), new SkipSelf(), Responsive], NgZone, PLATFORM_ID],\n//   useFactory: responsiveProviderFactory\n// };\n\n@NgModule({\n  declarations: [MediaDirective],\n  exports: [MediaDirective],\n  // providers: [responsiveProvider]\n})\nexport class ResponsiveModule { }\n","export const Breakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n\n  Handset: '(max-width: 599px) and (orientation: portrait), ' +\n           '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\nexport const MediaQueries = {\n  'xs': '(max-width: 599px)',\n  'sm': '(min-width: 600px) and (max-width: 959px)',\n  'md': '(min-width: 960px) and (max-width: 1279px)',\n  'lg': '(min-width: 1280px) and (max-width: 1919px)',\n  'xl': '(min-width: 1920px) and (max-width: 5000px)',\n  'lt-sm': '(max-width: 599px)',\n  'lt-md': '(max-width: 959px)',\n  'lt-lg': '(max-width: 1279px)',\n  'lt-xl': '(max-width: 1919px)',\n  'gt-xs': '(min-width: 600px)',\n  'gt-sm': '(min-width: 960px)',\n  'gt-md': '(min-width: 1280px)',\n  'gt-lg': '(min-width: 1920px)'\n};\n"]}