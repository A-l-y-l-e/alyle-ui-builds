{"version":3,"sources":["ng://@alyle/ui/drawer/drawer.ts","ng://@alyle/ui/drawer/drawer.module.ts"],"names":["styles","theme","drawerContainer","display","position","overflow","-webkit-overflow-scrolling","drawer","zIndex","visibility","drawerContent","drawerOpened","transform","LyDrawerContainer","_theme","_renderer","_el","this","addStyleSheet","addClass","nativeElement","classes","Directive","args","selector","LyTheme2","Renderer2","ElementRef","ContentChild","forwardRef","LyDrawerContent","prototype","_getHostElement","LyDrawer","_drawerContainer","Object","defineProperty","_opened","val","opened","toBoolean","_position","addStyle","_a","getDirection","_positionClass","ngOnChanges","__mode","mode","__opened","__width","width","__height","height","__position","__spacingTop","spacingTop","__spacingBottom","spacingBottom","Error","_drawerClass","updateClass","newKeyDrawerContent","_drawerContentClass","drawerContentStyles","positionVal","eachMedia","media","isMedia","newStyleWidth","toPx","breakPoint","getBreakpoint","createEmptyPropOrUseExisting","removeClass","_drawerRootClass","stylesDrawerRoot","positionSign","console","log","newTranslateX","styleOfBreakPoint","newStyleHeight","newTranslateY","newStyleSpacingTop","top","newStyleSpacingBottom","bottom","left","right","STYLE_PRIORITY","toggle","getComputedStyle","_initialMode","exportAs","Input","object","key","_new","LyDrawerModule","NgModule","imports","CommonModule","LyCommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { Directive, Input, ElementRef, Renderer2, OnChanges, forwardRef, ContentChild } from '@angular/core';\nimport { LyTheme2, ThemeVariables, toBoolean, eachMedia } from '@alyle/ui';\n\nconst DEFAULT_MODE = 'side';\nconst DEFAULT_VALUE = '';\nconst STYLE_PRIORITY = -2;\nconst DEFAULT_POSITION = 'start';\n\nconst styles = (theme: ThemeVariables) => ({\n  drawerContainer: {\n    display: 'block',\n    position: 'relative',\n    overflow: 'hidden',\n    '-webkit-overflow-scrolling': 'touch'\n  },\n  drawer: {\n    display: 'block',\n    position: 'fixed',\n    zIndex: theme.zIndex.drawer,\n    overflow: 'auto',\n    visibility: 'hidden'\n  },\n  drawerContent: {\n    display: 'block'\n  },\n  drawerOpened: {\n    transform: 'translate3d(0px, 0px, 0)',\n    visibility: 'visible'\n  }\n});\n\ntype position = 'start' | 'end' | 'top' | 'bottom';\ntype mode = 'side' | 'over';\n\n@Directive({\n  selector: 'ly-drawer-container'\n})\nexport class LyDrawerContainer {\n  classes = this._theme.addStyleSheet(styles, 'ly-drawer-container', STYLE_PRIORITY + 1.9);\n  @ContentChild(forwardRef(() => LyDrawerContent)) drawerContent: LyDrawerContent;\n  constructor(\n    private _theme: LyTheme2,\n    private _renderer: Renderer2,\n    private _el: ElementRef\n  ) {\n    this._renderer.addClass(this._el.nativeElement, this.classes.drawerContainer);\n  }\n}\n\n@Directive({\n  selector: 'ly-drawer-content'\n})\nexport class LyDrawerContent {\n  constructor(\n    private _theme: LyTheme2,\n    private _renderer: Renderer2,\n    private _el: ElementRef,\n    drawerContainer: LyDrawerContainer\n  ) {\n    this._renderer.addClass(this._el.nativeElement, drawerContainer.classes.drawerContent);\n  }\n  _getHostElement() {\n    return this._el.nativeElement;\n  }\n}\n\n@Directive({\n  selector: 'ly-drawer',\n  exportAs: 'lyDrawer'\n})\nexport class LyDrawer implements OnChanges {\n  private _initialMode: mode;\n  private _opened: boolean;\n  private _openedClass: string;\n\n  private _mode: mode;\n  private _modeClass: string;\n\n  private _width: number | string;\n  private _widthClass: string;\n\n  private _height: number | string;\n  private _heightClass: string;\n\n  private _position: position = DEFAULT_POSITION;\n  private _positionClass: string;\n\n  private _drawerRootClass: string;\n  private _drawerClass: string;\n  private _drawerContentClass: string;\n\n  /** @deprecated */\n  @Input() config: any;\n\n  @Input()\n  set opened(val: boolean) {\n    if (val !== this.opened) {\n      this._opened = toBoolean(val);\n    }\n  }\n  get opened() {\n    return this._opened;\n  }\n  @Input() mode: mode = DEFAULT_MODE;\n  @Input() spacingTop: string | number;\n  @Input() spacingBottom: string | number;\n  @Input() spacingStart: string | number;\n  @Input() spacingRight: string | number;\n  @Input() width: number | string;\n  @Input() height: number | string;\n  @Input()\n  set position(val: position) {\n    if (val !== this.position) {\n      this._position = val;\n      this._theme.addStyle(`drawer.position:${val}`, (theme: ThemeVariables) => {\n        let positionVal: string;\n        if (val === 'start' || val === 'end') {\n          positionVal = theme.getDirection(val);\n        } else {\n          positionVal = val;\n        }\n        return {\n          [positionVal]: 0\n        };\n      }, this._el.nativeElement, this._positionClass, STYLE_PRIORITY);\n    }\n  }\n  get position() {\n    return this._position;\n  }\n\n  constructor(\n    private _theme: LyTheme2,\n    private _renderer: Renderer2,\n    private _el: ElementRef,\n    private _drawerContainer: LyDrawerContainer\n  ) {\n    this._renderer.addClass(this._el.nativeElement, _drawerContainer.classes.drawer);\n  }\n\n  ngOnChanges() {\n    const __mode = this.mode;\n    const __opened = this.opened;\n    let __width = this.width;\n    const __height = this.height;\n    const __position = this.position;\n    const __spacingTop = this.spacingTop;\n    const __spacingBottom = this.spacingBottom;\n    if (__width && __height) {\n      throw new Error(`\\`width\\` and \\`height\\` are defined, you can only define one`);\n    } else if (!__width) {\n      if (!__height) {\n        __width = '230px';\n      }\n    }\n\n    if (__opened) {\n      /** create styles for mode side */\n      this._drawerClass = this._theme.updateClass(this._el.nativeElement, this._renderer, this._drawerContainer.classes.drawerOpened, this._drawerClass);\n      if (__mode === 'side') {\n        const newKeyDrawerContent = `ly-drawer-content----:${\n          __opened || DEFAULT_VALUE}Â·${\n            __width || DEFAULT_VALUE}Â·${\n              __position || DEFAULT_VALUE}`;\n        this._drawerContentClass = this._theme.addStyle(newKeyDrawerContent, (theme: ThemeVariables) => {\n          const drawerContentStyles: {\n            marginLeft?: string\n            marginRight?: string\n            marginTop?: string\n            marginBottom?: string\n          } = {};\n          let positionVal = 'margin-';\n          if (__position === 'start' || __position === 'end') {\n            positionVal += theme.getDirection(__position);\n          } else {\n            positionVal += __position;\n          }\n          eachMedia(__opened as any, () => {});\n          if (__width) {\n            eachMedia(__width, (val, media, isMedia) => {\n              const newStyleWidth = toPx(val);\n              if (isMedia) {\n                const breakPoint = theme.getBreakpoint(media);\n                const styleOfBreakPoint = createEmptyPropOrUseExisting(drawerContentStyles, breakPoint);\n                styleOfBreakPoint[positionVal] = newStyleWidth;\n              } else {\n                drawerContentStyles[positionVal] = newStyleWidth;\n              }\n            });\n          }\n          return drawerContentStyles;\n        },\n        this._drawerContainer.drawerContent._getHostElement(),\n        this._drawerContentClass);\n      } else {\n        /** remove styles for <ly-drawer-content> */\n        this._renderer.removeClass(this._drawerContainer.drawerContent._getHostElement(), this._drawerContentClass);\n        this._drawerContentClass = null;\n      }\n    } else {\n      this._renderer.removeClass(this._drawerContainer.drawerContent._getHostElement(), this._drawerContentClass);\n      this._drawerContentClass = null;\n      this._renderer.removeClass(this._el.nativeElement, this._drawerClass);\n      this._drawerClass = null;\n    }\n\n    /** default styles */\n    // tslint:disable-next-line:max-line-length\n    this._drawerRootClass = this._theme.addStyle(`ly-drawer-root:${__width}Â·${__height}Â·${__spacingTop}Â·${__spacingBottom}Â·${__spacingBottom}Â·${__position}Â·${__mode}`, (theme: ThemeVariables) => {\n      const stylesDrawerRoot: {\n        width?: string\n        height?: string\n        top?: string\n        bottom?: string\n        left?: number\n        right?: number\n        transform?: string\n      } = { };\n      const positionSign = __position === 'start' || __position === 'top' ? '-' : '+';\n      if (__width) {\n        eachMedia(__width, (val, media, isMedia) => {\n          console.log({val});\n          if (__mode === 'over' && val === '0') {\n            return;\n          }\n          const newStyleWidth = toPx(val);\n          const newTranslateX = `translateX(${positionSign + toPx(val)})`;\n          if (isMedia) {\n            const breakPoint = theme.getBreakpoint(media);\n            const styleOfBreakPoint = createEmptyPropOrUseExisting(stylesDrawerRoot, breakPoint);\n            styleOfBreakPoint.width = newStyleWidth;\n            styleOfBreakPoint.transform = newTranslateX;\n          } else {\n            stylesDrawerRoot.width = newStyleWidth;\n            stylesDrawerRoot.transform = newTranslateX;\n          }\n        });\n      } else if (__height) {\n        eachMedia(__height, (val, media, isMedia) => {\n          const newStyleHeight = toPx(val);\n          const newTranslateY = `translateY(${positionSign + toPx(val)})`;\n          if (isMedia) {\n            const breakPoint = theme.getBreakpoint(media);\n            const styleOfBreakPoint = createEmptyPropOrUseExisting(stylesDrawerRoot, breakPoint);\n            styleOfBreakPoint.height = newStyleHeight;\n            styleOfBreakPoint.transform = newTranslateY;\n          } else {\n            stylesDrawerRoot.height = newStyleHeight;\n            stylesDrawerRoot.transform = newTranslateY;\n          }\n        });\n      }\n      if (__position === 'start' || __position === 'end') {\n        eachMedia(__spacingTop, (val, media, isMedia) => {\n          const newStyleSpacingTop = toPx(val || 0);\n          if (isMedia) {\n            const breakPoint = theme.getBreakpoint(media);\n            const styleOfBreakPoint = createEmptyPropOrUseExisting(stylesDrawerRoot, breakPoint);\n            styleOfBreakPoint.top = newStyleSpacingTop;\n          } else {\n            stylesDrawerRoot.top = newStyleSpacingTop;\n          }\n        });\n        eachMedia(__spacingBottom, (val, media, isMedia) => {\n          const newStyleSpacingBottom = toPx(val || 0);\n          if (isMedia) {\n            const breakPoint = theme.getBreakpoint(media);\n            const styleOfBreakPoint = createEmptyPropOrUseExisting(stylesDrawerRoot, breakPoint);\n            styleOfBreakPoint.bottom = newStyleSpacingBottom;\n          } else {\n            stylesDrawerRoot.bottom = newStyleSpacingBottom;\n          }\n        });\n      } else {\n        stylesDrawerRoot.left = 0;\n        stylesDrawerRoot.right = 0;\n      }\n      return stylesDrawerRoot;\n    }, this._el.nativeElement, this._drawerRootClass, __mode === 'side' ? STYLE_PRIORITY : STYLE_PRIORITY + 1);\n  }\n\n  toggle() {\n    const width = getComputedStyle(this._el.nativeElement).width;\n    console.log({width});\n    if (this.mode === 'side' && width === '0px') {\n      this._initialMode = this.mode;\n      this.mode = 'over';\n      this.opened = true;\n    } else {\n      if (this._initialMode) {\n        this.mode = this._initialMode;\n      }\n      this.opened = !this.opened;\n    }\n    this.ngOnChanges();\n  }\n}\n\n/**\n * @dddd\n */\nfunction toPx(val: string | number) {\n  if (typeof val === 'number') {\n    return `${val}px`;\n  } else {\n    return val;\n  }\n}\n\nfunction createEmptyPropOrUseExisting(object: object, key: string, _new?: any) {\n  return key in object\n  ? object[key]\n  : object[key] = _new || {};\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyDrawer, LyDrawerContainer, LyDrawerContent } from './drawer';\nimport { LyCommonModule } from '@alyle/ui';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LyCommonModule\n  ],\n  exports: [LyDrawer, LyDrawerContainer, LyDrawerContent],\n  declarations: [LyDrawer, LyDrawerContainer, LyDrawerContent],\n})\nexport class LyDrawerModule {}\n"]}