{"version":3,"file":"alyle-ui-typography.umd.js.map","sources":["ng://@alyle/ui/typography/typography.service.ts","ng://@alyle/ui/typography/typography.directive.ts","ng://@alyle/ui/typography/typography.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CoreTheme } from '@alyle/ui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyTypographyClasses {\n  root: string;\n  constructor(\n    styleCore: CoreTheme\n  ) {\n    this.root = styleCore.setUpStyleSecondary(\n      'k-typ',\n      () => (\n        // `margin: 1em 0 0.65em 0;` +\n        `margin: 0;` +\n        `display: block;`\n      )\n    );\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, isDevMode, OnInit } from '@angular/core';\nimport { LyTheme2, toBoolean } from '@alyle/ui';\n// import { IMinimaTheme } from '../themes';\nimport { LyTypographyClasses } from './typography.service';\n\nenum Gutter {\n  default,\n  top,\n  bottom,\n}\n\n@Directive({\n  selector: `[lyTyp]`\n})\nexport class LyTypography implements OnInit {\n  private _lyTyp: string;\n  private _lyTypClass: string;\n\n  private _gutter: boolean;\n  private _gutterClass: string;\n\n  private _gutterTop: boolean;\n  private _gutterTopClass: string;\n\n  private _gutterBottom: boolean;\n  private _gutterBottomClass: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      const newClass = this._createTypClass(val);\n      this.style.updateClassName(this.elementRef.nativeElement, this.renderer, newClass, this._lyTypClass);\n      this._lyTypClass = newClass;\n    }\n  }\n  get lyTyp() {\n    return this._lyTyp;\n  }\n\n  @Input()\n  set gutter(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutter) {\n      this._gutter = newVal;\n      const newClass = this._createGutterClass(Gutter.default, newVal);\n      this._gutterClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterClass);\n    }\n  }\n  get gutter() {\n    return this._gutter;\n  }\n\n  @Input()\n  set gutterTop(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterTop) {\n      this._gutterTop = newVal;\n      const newClass = this._createGutterClass(Gutter.top, newVal);\n      this._gutterTopClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterTopClass);\n    }\n  }\n  get gutterTop() {\n    return this._gutterTop;\n  }\n\n  @Input()\n  set gutterBottom(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterBottom) {\n      this._gutterBottom = newVal;\n      const newClass = this._createGutterClass(Gutter.bottom, newVal);\n      this._gutterBottomClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterBottomClass);\n    }\n  }\n  get gutterBottom() {\n    return this._gutterBottom;\n  }\n\n  constructor(\n    private style: LyTheme2,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    classes: LyTypographyClasses\n  ) {\n    this.renderer.addClass(this.elementRef.nativeElement, classes.root);\n  }\n\n  ngOnInit() {\n    if ((this.gutterTop && this.gutterBottom)) {\n      throw new Error(`use '<element lyTyp gutter>' instead of '<element lyTyp gutterTop gutterBottom>'`);\n    }\n  }\n\n  private _createTypClass(key: string) {\n    const newKey = `k-typ:${key}`;\n\n    return this.style.setUpStyleSecondary<any/** IMinimaTheme */>(newKey,\n      theme => {\n        const { typography } = theme;\n        const { fontSize, fontWeight, letterSpacing, textTransform, lineHeight } = typography[key || 'body1'];\n        let style = (\n          `font-size:${theme.pxToRem(fontSize)};` +\n          `font-weight:${fontWeight};` +\n          `letter-spacing:${theme.pxToRem(letterSpacing)};`\n        );\n        if (lineHeight) {\n          style += `line-height:${theme.pxToRem(lineHeight)};`;\n        }\n        if (textTransform) {\n          style += `text-transform:${textTransform};`;\n        }\n        return style;\n      }\n    );\n  }\n\n  private _createGutterClass(name: Gutter, val: boolean) {\n    return this.style.setUpStyleSecondary<any>(\n      `k-typ-gutter:${name}:${val}`,\n      theme => {\n        const gutter = name === Gutter.default;\n        return (\n          `margin-top:${ val && (gutter || name === Gutter.top) ? theme.typography.gutterTop : 0 }em;` +\n          `margin-bottom:${ val && (gutter || name === Gutter.bottom) ? theme.typography.gutterBottom : 0 }em;`\n        );\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyTypography],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n"],"names":["Injectable","CoreTheme","toBoolean","Directive","LyTheme2","ElementRef","Renderer2","Input","NgModule","CommonModule"],"mappings":"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"}
