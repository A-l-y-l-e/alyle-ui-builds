{"version":3,"sources":["ng://@alyle/ui/tabs/tab-content.directive.ts","ng://@alyle/ui/tabs/tabs.clasess.service.ts","ng://@alyle/ui/tabs/tabs.directive.ts","ng://@alyle/ui/tabs/tabs.module.ts"],"names":["LyTabContent","template","this","Directive","args","selector","TemplateRef","tabsStyles","root","display","overflow","tab","position","tabsLabels","flexGrow","label","minWidth","padding","cursor","height","justifyContent","alignItems","tabContents","transition","willChange","tabContent","width","flexShrink","tabsIndicator","bottom","left","background","tabsIndicatorForServer","LyTabsClassesService","theme","classes","addStyleSheet","Injectable","providedIn","LyTheme2","LyTabs","tabsService","renderer","el","cd","_selectedIndex","_tabsSubscription","Subscription","EMPTY","selectedIndexOnChange","selectedIndexChange","EventEmitter","Object","defineProperty","prototype","_withColor","val","withColor","_withColorClass","addStyle","colorOf","nativeElement","_selectedTab","updateClass","tabIndicator","selectedIndex","_selectedBeforeIndex","_findIndex","_selectedBeforeTab","emit","_updateIndicator","_selectedRequireCheck","markForCheck","setStyle","ngOnInit","addClass","tabsIndicatorEl","ngAfterViewInit","_isViewInitLoaded","ngAfterContentInit","_this","tabsList","changes","subscribe","ngOnDestroy","unsubscribe","_getHostElement","index","indexOfLastTab","length","currentIndex","currentTab","beforeTab","Platform","isBrowser","_renderer","removeAttribute","toArray","_el","rects","getBoundingClientRect","offsetLeft","loadTemplate","loaded","templateRefLazy","templateRef","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","exportAs","Renderer2","ElementRef","ChangeDetectorRef","ViewChild","Input","Output","ContentChildren","forwardRef","LyTab","tabs","onClick","ContentChild","read","HostListener","LyTabLabel","rippleService","_ngZone","_theme","_rippleContainer","Ripple","config","removeEvents","LyRippleService","NgZone","LyTabsModule","NgModule","imports","LyThemeModule","CommonModule","LyCommonModule","LyRippleModule","NgTranscludeModule","exports","declarations"],"mappings":"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","sourcesContent":["import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({selector: '[ly-tab-content]'})\nexport class LyTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","import { Injectable } from '@angular/core';\nimport { LyTheme2 } from '@alyle/ui';\n\nconst tabsStyles = {\n  root: {\n    display: 'block',\n    overflow: 'hidden'\n  },\n  tab: {\n    position: 'relative',\n    display: 'inline-flex'\n  },\n  tabsLabels: {\n    display: 'flex',\n    position: 'relative',\n    flexGrow: 1,\n    overflow: 'hidden'\n  },\n  label: {\n    minWidth: '72px',\n    padding: '0 24px',\n    cursor: 'pointer',\n    height: '48px',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    overflow: 'hidden'\n  },\n  tabContents: {\n    display: 'flex',\n    transition: '450ms cubic-bezier(.1, 1, 0.5, 1)',\n    willChange: 'transform'\n  },\n  tabContent: {\n    width: '100%',\n    flexShrink: 0,\n    position: 'relative'\n  },\n  tabsIndicator: {\n    position: 'absolute',\n    transition: '450ms cubic-bezier(.1, 1, 0.5, 1)',\n    bottom: 0,\n    height: '2px',\n    left: 0,\n    background: 'currentColor'\n  },\n  tabsIndicatorForServer: {\n    width: '100%'\n  }\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyTabsClassesService {\n  classes = this.theme.addStyleSheet(tabsStyles);\n  constructor(\n    private theme: LyTheme2\n  ) { }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n  Output,\n  TemplateRef,\n  ContentChild,\n  ViewChild,\n  HostListener,\n  forwardRef,\n  EventEmitter,\n  ChangeDetectorRef,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  ViewEncapsulation,\n  AfterViewInit,\n  AfterContentInit,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { LyTabContent } from './tab-content.directive';\nimport { LyTabsClassesService } from './tabs.clasess.service';\nimport { LyTheme2, Platform } from '@alyle/ui';\nimport { Subscription } from 'rxjs';\nimport { Ripple, LyRippleService } from '@alyle/ui/ripple';\n\n@Component({\n  selector: 'ly-tabs',\n  templateUrl: './tabs.directive.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'lyTabs'\n})\nexport class LyTabs implements OnInit, AfterViewInit, AfterContentInit, OnDestroy {\n  _selectedIndex = 0;\n  _selectedBeforeIndex: number;\n  _selectedRequireCheck: boolean;\n  _selectedTab: LyTab;\n  _selectedBeforeTab: LyTab;\n  private _tabsSubscription = Subscription.EMPTY;\n  private _isViewInitLoaded: boolean;\n  private _withColor: string;\n  private _withColorClass: string;\n  readonly classes;\n  @ViewChild('tabContents') tabContents: ElementRef;\n  @ViewChild('tabsIndicator') tabsIndicator: ElementRef;\n  @Input() selectedIndexOnChange: 'auto' | number = 'auto';\n  @Input() native: boolean;\n  @Input()\n  set withColor(val: string) {\n    if (val !== this.withColor) {\n      this._withColor = val;\n      this._withColorClass = this.theme.addStyle(\n        `k-tab-with-color:${val}`,\n        theme => (\n          `color:${theme.colorOf(val)};`\n        ),\n        this.tabsIndicator.nativeElement, this._withColorClass);\n      if (this._selectedTab) {\n        this.theme.updateClass(this._selectedTab.tabIndicator.nativeElement, this.renderer, this._withColorClass);\n      }\n    }\n  }\n  get withColor() {\n    return this._withColor;\n  }\n  @Input()\n  set selectedIndex(val: number) {\n    if (val !== this.selectedIndex) {\n      this._selectedBeforeIndex = this._selectedIndex as number;\n      this._selectedIndex = this._findIndex(val, 'auto');\n      this._selectedBeforeTab = this._selectedTab;\n      this.selectedIndexChange.emit(this._selectedIndex);\n      this._updateIndicator(this._selectedTab, this._selectedBeforeTab);\n\n      if (this._selectedRequireCheck) {\n        this.markForCheck();\n      }\n      this.renderer.setStyle(this.tabContents.nativeElement, 'transform', `translate3d(${this._selectedIndex * -100}%,0,0)`);\n    }\n  }\n  get selectedIndex() {\n    return this._selectedIndex as number;\n  }\n  @Output() selectedIndexChange: EventEmitter<any> = new EventEmitter();\n  @Input() withBg: string;\n  @ContentChildren(forwardRef(() => LyTab)) tabsList: QueryList<LyTab>;\n\n  constructor(\n    tabsService: LyTabsClassesService,\n    private theme: LyTheme2,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private cd: ChangeDetectorRef,\n  ) {\n    this.classes = tabsService.classes;\n  }\n\n  ngOnInit() {\n    this.renderer.addClass(this.el.nativeElement, this.classes.root);\n    const tabsIndicatorEl = this.tabsIndicator.nativeElement;\n    this.renderer.addClass(tabsIndicatorEl, this.classes.tabsIndicator);\n    /** Set default Color */\n    if (!this.withColor) {\n      this.withColor = 'primary';\n    }\n  }\n\n  ngAfterViewInit() {\n    this._isViewInitLoaded = true;\n  }\n  ngAfterContentInit() {\n    this._tabsSubscription = this.tabsList.changes.subscribe(() => {\n      if (this._selectedIndex !== this.selectedIndexOnChange) {\n        this.selectedIndex = this._findIndex(this.selectedIndex, this.selectedIndexOnChange);\n      }\n      this.cd.markForCheck();\n    });\n  }\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n  }\n\n  private _getHostElement() {\n    return this.el.nativeElement;\n  }\n\n  private _findIndex(selectedIndex: number, index: string | number) {\n    if (!this.tabsList) {\n      return selectedIndex;\n    }\n    const indexOfLastTab = this.tabsList.length - 1;\n    const currentIndex = typeof index === 'number' ? index : selectedIndex;\n    return currentIndex < 0 ? 0 : currentIndex > indexOfLastTab ? indexOfLastTab : currentIndex;\n  }\n\n  private _updateIndicator(currentTab: LyTab, beforeTab?: LyTab): void {\n    const currentIndex = this.selectedIndex;\n    if (currentTab) {\n      // currentTab = this.tabsList.find(_ => _.index === currentIndex);\n      if (!this._isViewInitLoaded || !Platform.isBrowser) {\n        /** for before initialize or for server */\n        this.renderer.addClass(currentTab.tabIndicator.nativeElement, this.classes.tabsIndicatorForServer);\n        this.renderer.addClass(currentTab.tabIndicator.nativeElement, this._withColorClass);\n      } else {\n        // for after initialize && for browser\n        // Clean before tab\n        if (beforeTab) {\n          beforeTab._renderer.removeAttribute(beforeTab.tabIndicator.nativeElement, 'class');\n        }\n        if (currentTab.index !== currentIndex) {\n          // this fixed undefined selected tab\n          currentTab = this.tabsList.toArray()[currentIndex];\n        }\n        const el = currentTab._el.nativeElement as HTMLElement;\n        const rects = el.getBoundingClientRect();\n        this.renderer.setStyle(this.tabsIndicator.nativeElement, 'width', `${rects.width}px`);\n        this.renderer.setStyle(this.tabsIndicator.nativeElement, 'left', `${el.offsetLeft}px`);\n      }\n    }\n  }\n\n  markForCheck() {\n    this.cd.markForCheck();\n  }\n\n  loadTemplate(tab: LyTab, index: number): TemplateRef<LyTabContent> | null {\n    if (tab.loaded) {\n      return null;\n    }\n    tab.index = index;\n    if (this.selectedIndex === tab.index) {\n      // set 0 if is null\n      this._selectedTab = tab;\n      this._updateIndicator(tab);\n    } else if (!this._isViewInitLoaded && this.selectedIndex === tab.index) {\n      this._selectedTab = tab;\n      /** Apply style for tabIndicator server */\n      this._updateIndicator(tab);\n    }\n    if (tab.templateRefLazy) {\n      if (this.selectedIndex === index) {\n        tab.loaded = true;\n        return tab.templateRefLazy;\n      } else {\n        return null;\n      }\n    } else {\n      tab.loaded = true;\n      return tab.templateRef;\n    }\n  }\n}\n\n@Component({\n  selector: 'ly-tab',\n  templateUrl: './tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class LyTab implements OnInit, AfterViewInit {\n  index: number;\n  loaded: boolean;\n  protected readonly classes;\n  @ContentChild(LyTabContent, { read: TemplateRef }) templateRefLazy: TemplateRef<LyTabContent>;\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @ViewChild('tabIndicator') tabIndicator: ElementRef;\n  @HostListener('click') onClick() {\n    this.tabs._selectedRequireCheck = !this.loaded;\n    this.tabs.selectedIndex = this.index;\n  }\n\n  constructor(\n    private tabsService: LyTabsClassesService,\n    private tabs: LyTabs,\n    public _renderer: Renderer2,\n    public _el: ElementRef\n  ) {\n    this.classes = this.tabsService.classes;\n  }\n\n  ngOnInit() {\n    this._renderer.addClass(this._el.nativeElement, this.classes.tab);\n  }\n\n  ngAfterViewInit() {\n    this._renderer.addClass(this.tabIndicator.nativeElement, this.classes.tabsIndicator);\n  }\n}\n\n@Directive({\n  selector: 'ly-tab-label, [ly-tab-label]'\n})\nexport class LyTabLabel implements OnInit, OnDestroy {\n  private _rippleContainer: Ripple;\n  constructor(\n    private renderer: Renderer2,\n    private _el: ElementRef,\n    private tabsService: LyTabsClassesService,\n    private rippleService: LyRippleService,\n    private _ngZone: NgZone,\n    private _theme: LyTheme2\n  ) { }\n\n  ngOnInit() {\n    this.renderer.addClass(this._el.nativeElement, this.tabsService.classes.label);\n    if (Platform.isBrowser) {\n      this._rippleContainer = new Ripple(this._theme.config, this._ngZone, this.rippleService.classes, this._el.nativeElement);\n    }\n  }\n\n  ngOnDestroy() {\n    if (Platform.isBrowser) {\n      this._rippleContainer.removeEvents();\n    }\n  }\n}\n\n/**\n * demo basic\n * <ly-tabs withColor=\"accent\">\n *   <ly-tab>\n *     <ly-tab-label>HOME<ly-tab-label>\n *     <button ly-tab-label>HOME<button>\n *     <button ly-tab-label-native ly-button>HOME<button>\n *     <a [routerLink]=\"['home']\" ly-tab-label native ly-button>HOME<a>\n *     Content\n *   </ly-tab>\n *   ...\n * </ly-tabs>\n *\n * demo lazy loading\n * <ly-tabs withBg=\"primary\">\n *   <ly-tab>\n *     <ly-tab-label>HOME<ly-tab-label>\n *     <ng-template ly-tab-content></ng-template>\n *   </ly-tab>\n *   ...\n * </ly-tabs>\n * => withColor: color del label activa, default primary\n * => withBg: color de fondo para la tab, default background:primary\n * => native: no aplica los estilos predeterminados, default undefined\n * => disabled: Disable/enable a tab, default undefined\n * => isActive: Si la pestaÃ±a estÃ¡ actualmente activa., default undefined\n * => selectedIndexOnChange, default: auto, opts: number, with auto, the selectedIndex = current o current-1 or latest\n */\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgTranscludeModule, LyCommonModule, LyThemeModule } from '@alyle/ui';\nimport { LyRippleModule } from '@alyle/ui/ripple';\nimport { LyTabs, LyTabLabel, LyTab } from './tabs.directive';\nimport { LyTabContent } from './tab-content.directive';\n\n@NgModule({\n  imports: [LyThemeModule, CommonModule, LyCommonModule, LyRippleModule, NgTranscludeModule],\n  exports: [LyTabs, LyTab, LyTabLabel, LyTabContent],\n  declarations: [LyTabs, LyTab, LyTabLabel, LyTabContent]\n})\nexport class LyTabsModule { }\n"]}