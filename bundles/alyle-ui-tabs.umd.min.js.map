{"version":3,"sources":["ng://@alyle/ui/tabs/tabs.ts","ng://@alyle/ui/tabs/tab-label.directive.ts","ng://@alyle/ui/tabs/tabs.module.ts"],"names":["LyTabGroupComponent","elementRef","renderer","viewContainerRef","this","EventEmitter","prototype","_selectedIndex","value","tabs","toArray","setIndex","ngAfterContentInit","updateTabsHeader","tabRows","length","ngOnInit","ngOnChanges","changes","firstChange","currentValue","_tabsContent","nativeElement","setTab","updateTab","ngAfterContentChecked","_isInitialized","ngAfterViewChecked","updateTabIndicator","tab","_this","Promise","resolve","then","tabWidth","offsetWidth","tabLeft","offsetLeft","sMargin","index","_margin","ngAfterViewInit","forEach","item","_index","tabRef","lyButton","subscribe","Component","args","selector","styles","template","ElementRef","Renderer","ViewContainerRef","ContentChildren","forwardRef","LyTab","ContentChild","LyButton","ViewChild","TemplateRef","Input","Output","Directive","lyTabGroup","_indexGroup","Object","defineProperty","color","llOorr","arg","_i","arguments","solt","emitChange","selectedIndexChange","emit","widthExacta","elem","floor","num","ev","tabLabel","eve","dW","dL","prevIndex","timeout","clearTimeout","sibsW","sibsID","previousSibling","setTimeout","nodeName","push","reverse","i","nextSibling","updateTabLine","stateTab","indexGroup","decorators","type","Optional","LyTabLabelDirective","LyTabsModule","NgModule","imports","CommonModule","LyRippleModule","LyHeaderPaginationModule","NgTranscludeModule","exports","LyTabContent","declarations"],"mappings":"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","sourcesContent":["import {\n  Component,\n  Directive,\n  Renderer,\n  ElementRef,\n  ViewEncapsulation,\n  NgModule,\n  ModuleWithProviders,\n  Input,\n  ContentChildren,\n  ContentChild,\n  QueryList,\n  ViewContainerRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  forwardRef,\n  OnChanges,\n  HostBinding,\n  Output,\n  EventEmitter,\n  Optional,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  Inject\n} from '@angular/core';\nimport { ThemeVariables } from '@alyle/ui';\nimport { CommonModule } from '@angular/common';\nimport { getParents } from '@alyle/ui';\nimport { Subscription } from 'rxjs';\nimport { LyButton } from '@alyle/ui/button';\n\nlet idTab = 0;\n\n@Component({\n  selector: 'ly-tab-group, ly-tabs',\n  styles: [`:host{position:relative;display:block}.ly-tab-header{height:48px;width:100%;position:relative}.ly-tab-header::after{content:' ';position:absolute;bottom:0;left:0;right:0;height:1px;background-color:rgba(0,0,0,.06)}.ly-tab-header-content{display:inline-flex}.ly-tab-indicator{position:absolute;height:2px;width:0;background:currentColor;bottom:0;transition:all 450ms cubic-bezier(.23,1,.32,1) 0s!important}`],\n  template: `<div class=\"ly-tab-header\">\r\n  <ly-header-pagination>\r\n    <!-- <div class=\"ly-tab-header-content\" [style.background]=\"styleBackground\" #tabsContent> -->\r\n    <div class=\"ly-tab-header-content\" #tabsContent>\r\n      <ng-content></ng-content>\r\n    </div>\r\n    <!-- <div\r\n    class=\"ly-tab-indicator\"\r\n    [style.color]=\"styleColor\"\r\n    [style.width]=\"tabWidth+'px'\"\r\n    [style.left]=\"tabLeft+'px'\"></div> -->\r\n    <div\r\n    class=\"ly-tab-indicator\"\r\n    [style.width]=\"tabWidth+'px'\"\r\n    [style.left]=\"tabLeft+'px'\"></div>\r\n  </ly-header-pagination>\r\n</div>\r\n<div *ngFor=\"let item of tabs; let i = index\">\r\n  <div [hidden]=\"!(i == _selectedIndex)\">\r\n    <ng-template [ngTransclude]=\"item.templateRef\"></ng-template>\r\n  </div>\r\n</div>\r\n<!-- <div [ngTransclude]=\"t.tabContent\" *ngFor=\"let t of tabs\">\r\n  ehhh\r\n</div> -->\r\n`,\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LyTabGroupComponent implements OnInit, OnChanges {\n\n  private _bg = 'rgba(0, 0, 0, 0)'; // private\n  private _color = 'primary'; // private\n  private _subscription: Subscription;\n  timeout: any;\n  xtemplateRef: any;\n  tabRows = 0;\n  _selectedIndex = 0;\n  _margin: number;\n  tabWidth = 0;\n  tabLeft = 0;\n  @ContentChildren(forwardRef(() => LyTab)) tabs: QueryList<LyTab>;\n  @ContentChild(LyButton) lyButton: LyButton;\n  _isInitialized = false;\n  @ViewChild('tabsContent') _tabsContent: ElementRef;\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  @Input()\n  set selectedIndex(value: number) {\n\n    if (this.tabs) {\n      if (this.tabs.toArray()[value]) {\n        this.tabs.toArray()[value].setIndex(value);\n      }\n    } else {\n      // this.updateTabsHeader();\n      this._selectedIndex = value;\n    }\n    // if (value) {\n    // }\n    // if (this._isInitialized == true) {\n    //   if (this.tabRows != this.tabs.length) {\n    //     this.tabRows = this.tabs.length;\n    //   }\n    // }\n  }\n  get selectedIndex(): number { return this._selectedIndex; }\n\n  @Output() selectedIndexChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    public elementRef: ElementRef,\n    private renderer: Renderer,\n    private viewContainerRef: ViewContainerRef,\n  ) {\n  }\n  ngAfterContentInit() {\n\n    this.updateTabsHeader();\n    this.tabRows = this.tabs.length;\n  }\n  ngOnInit() { }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['selectedIndex']) {\n      if (!changes['selectedIndex'].firstChange) {\n        const index = changes['selectedIndex'].currentValue;\n        const tabRef = this._tabsContent.nativeElement;\n      }\n    }\n  }\n  setTab() {\n\n  }\n  updateTab() {\n    // this.updateTabsHeader();\n  }\n\n\n  updateTabsHeader() {\n    if (!this.tabs) {\n      return;\n    }\n  }\n  ngAfterContentChecked() {\n    if (this.tabRows != this.tabs.length && this._isInitialized == true) {\n      this.tabRows = this.tabs.length;\n      // this.updateTabsHeader();\n    }\n  }\n  ngAfterViewChecked() {\n    this._isInitialized = true;\n\n  }\n  updateTabIndicator(tab: HTMLElement) {\n    if (!tab) {\n      return;\n    }\n    Promise.resolve(null).then(() => {\n      this.tabWidth = tab.offsetWidth;\n      this.tabLeft = tab.offsetLeft;\n    });\n  }\n  private sMargin(tab: HTMLElement, index: number) {\n    if (index === 0) {\n      this._margin = tab.offsetLeft * 2;\n    }\n  }\n  ngAfterViewInit() {\n    /**\n     * TODO: fix--> recibir el enevto del boton, crear evento del boton y actualizar line\n     */\n\n    this.tabs.forEach((item: LyTab, index: number) => {\n      this.sMargin(item.elementRef.nativeElement, index);\n      item._index = index;\n      const tabRef = item.elementRef.nativeElement;\n      if (this._selectedIndex == index && !!tabRef) {\n        if (!!item.lyButton) {\n          // Promise.resolve(null).then(() => {\n          //   item.lyButton.buttonPadding.subscribe((val) => {\n          //     this.updateTabIndicator(tabRef);\n          //   });\n          // });\n        } else {\n          this.updateTabIndicator(tabRef);\n        }\n      }\n    });\n    this.tabs.changes.subscribe((tabs: LyTab[]) => {\n      idTab = 0;\n      tabs.forEach((item: LyTab, index: number) => {\n        const tabRef = item.elementRef.nativeElement;\n        this.sMargin(tabRef, index);\n        item._index = index;\n        if (this._selectedIndex == index && !!tabRef) {\n          this.updateTabIndicator(tabRef);\n        }\n      });\n    });\n\n  }\n\n}\n@Directive({\n  selector: '[ly-tab-content]',\n})\nexport class LyTabContent {\n  // @ViewChild(TemplateRef) content: TemplateRef<any>;\n  // constructor() {}\n}\n@Component({\n  selector: 'ly-tab',\n  styles: [`.ly-tab-label-item{position:relative;display:inline-block;min-width:0;height:100%;overflow:hidden;text-align:center;line-height:48px;cursor:pointer;box-sizing:border-box}:host{margin:0 8px}:host /deep/ [ly-tab-label]{display:block}.ly-tab-label-item /deep/{-webkit-tap-highlight-color:transparent}.ly-tab-label-item /deep/ [ly-button],.ly-tab-label-item /deep/ ly-button{height:100%;vertical-align:top;border-radius:0}.ly-tab-label-item /deep/ .ly-button-padding-left{padding-left:8px}.ly-tab-label-item /deep/ .ly-button-padding-right{padding-right:8px}.ly-tab-label-item /deep/ ly-tab-label:not([ly-button]){padding:0 8px;display:inline-flex;white-space:nowrap}`],\n  template: `<!-- <button ly-button (mousedown)=\"solt()\" (click)=\"setIndex(_index)\" class=\"ly-tab-label-item\">\r\n  <ng-content select=\"ly-tab-label\"></ng-content>\r\n</button> -->\r\n<div (mousedown)=\"solt()\" (click)=\"setIndex(_index)\" [ngStyle]=\"tabStyles\" class=\"ly-tab-label-item\" lyRipple>\r\n  <ng-content select=\"ly-tab-label\"></ng-content>\r\n  <ng-content select=\"[ly-tab-label]\"></ng-content>\r\n</div>\r\n<ng-template>\r\n<div>\r\n  <ng-content></ng-content>\r\n</div>\r\n</ng-template>\r\n`,\n})\nexport class LyTab {\n  _index = 0;\n  _indexGroup = 0;\n  stateTab: boolean;\n  private timeout: any;\n  public tabRef: TemplateRef<any>;\n  @ContentChild(LyButton) lyButton: LyButton;\n  get tabStyles() {\n    return {color: 'currentColor'};\n  }\n  llOorr(...arg: any[]): string {\n    return arg[0] < arg[1] ? 'r' : 'l';\n  }\n  solt() {\n  }\n  emitChange(index: number) {\n    this.lyTabGroup.selectedIndexChange.emit(index);\n  }\n  widthExacta(elem: HTMLElement): number {\n    return elem.offsetWidth;\n    // if (typeof elem.getBoundingClientRect !== typeof undefined) {\n    //   return elem.getBoundingClientRect().width;\n    // } else {\n    //   return elem.offsetWidth;\n    // }\n  }\n  floor(num: number): number {\n    // return Math.round(num);\n    return (num);\n  }\n  setIndex(index: number) {\n    const ev = this.elementRef.nativeElement as HTMLElement;\n    let restWi = 0;\n    const tabLabel = this.elementRef.nativeElement as HTMLElement;\n    restWi = this.widthExacta(ev) - this.widthExacta(tabLabel);\n    // ev = tabLabel as HTMLElement;\n    const w: number = this.floor(this.lyTabGroup._tabsContent.nativeElement.offsetWidth);\n\n    const llOorr = this.llOorr(this.lyTabGroup._selectedIndex, index);\n    let prevIndex: number = this.lyTabGroup._selectedIndex;\n    let eve: any;\n    this.lyTabGroup._selectedIndex = index;\n    // this.lyTabGroup.updateTabsHeader();\n    let dW: number;\n    let dL: number;\n    // let outEf: any = setTimeout(() => {});\n    // clearTimeout(outEf);\n    if (this.lyTabGroup.timeout) {\n      // this.lyTabGroup.timeout.callback();\n      clearTimeout(this.lyTabGroup.timeout);\n      this.lyTabGroup.timeout = null;\n    }\n    // if (tabLabel.className != 'ly-tab-label-item') {\n    //   eve = getParents(tabLabel, '.ly-tab-label-item');\n    //   dW = getParents(tabLabel, '.ly-tab-label-item').offsetWidth;\n    //   dL = getParents(tabLabel, '.ly-tab-label-item').offsetLeft;\n    // } else {\n    eve = ev;\n    dW = this.floor(tabLabel.offsetWidth);\n    dL = this.floor(tabLabel.offsetLeft);\n    // }\n    if (llOorr === 'r') {\n      // this.lyTabGroup.tabWidth = dW;\n      // this.lyTabGroup.tabLeft  = dL;\n      // this.lyTabGroup.tabWidth = w - dL;\n      // this.lyTabGroup.tabLeft  = dL;\n      let sibsW: any = 0;\n      const sibsID: any = [];\n      const thisW = eve.previousSibling.offsetWidth;\n      // clearTimeout(outEf);\n      this.lyTabGroup.timeout = setTimeout(() => {\n        this.lyTabGroup.tabWidth = dW;\n        this.lyTabGroup.tabLeft  = dL;\n        this.lyTabGroup.timeout = null;\n        this.lyTabGroup.selectedIndexChange.emit(index);\n      }, 475);\n      while (eve = eve.previousSibling) {\n        if (eve.nodeName === 'LY-TAB') {\n          sibsID.push(eve);\n        }\n\n      }\n      sibsID.reverse();\n      for (let i = 0; i < sibsID.length; i++) {\n        if (prevIndex <= i) {\n          sibsW = sibsID[i].offsetWidth + sibsW + (this.lyTabGroup._margin || 0);\n        }\n\n      }\n      this.lyTabGroup.tabWidth = sibsW + dW;\n\n    } else if (llOorr === 'l') {\n      let sibsW: any = 0;\n      const sibsID: any = [];\n      // let thisW = eve.previousSibling.offsetWidth;\n      prevIndex = (this.lyTabGroup.tabRows - 1) - prevIndex;\n      this.lyTabGroup.timeout = setTimeout(() => {\n        this.lyTabGroup.tabLeft  = dL;\n        this.lyTabGroup.tabWidth = dW;\n        this.lyTabGroup.timeout = null;\n        this.lyTabGroup.selectedIndexChange.emit(index);\n      }, 475);\n      while (eve = eve.nextSibling) {\n        if (eve.nodeName === 'LY-TAB') {\n          sibsID.push(eve);\n        }\n      }\n      sibsID.reverse();\n      for (let i = 0; i < sibsID.length; i++) {\n        if (i >= prevIndex) {\n          sibsW = sibsID[i].offsetWidth + sibsW + (this.lyTabGroup._margin || 0);\n        }\n\n      }\n      this.lyTabGroup.tabWidth = sibsW + dW;\n      this.lyTabGroup.tabLeft  = dL;\n\n      // this.lyTabGroup.tabWidth = dW;\n      // this.lyTabGroup.tabLeft  = dL;\n    }\n  }\n  public updateTabLine() {\n    // this.lyTabGroup._selectedIndex = index;\n    // this.lyTabGroup.tabWidth = ev.offsetWidth;\n    // this.lyTabGroup.tabLeft = ev.offsetLeft;\n  }\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  lyTabGroup: LyTabGroupComponent;\n  get indexGroup() {\n    this._indexGroup = this.lyTabGroup._selectedIndex;\n    return this._indexGroup;\n  }\n  constructor(\n    @Optional() lyTabGroup: LyTabGroupComponent,\n    public elementRef: ElementRef,\n  ) {\n    this.lyTabGroup = lyTabGroup;\n    this._indexGroup = this.lyTabGroup._selectedIndex;\n  }\n  ngAfterViewInit() {\n    this.stateTab = !(this._index == this.indexGroup);\n    if (this.stateTab) {\n      // this.lyTabGroup.tabWidth = this.elementRef.nativeElement.offsetWidth;\n      // this.lyTabGroup.tabLeft = this.elementRef.nativeElement.offsetLeft;\n    }\n  }\n}\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ly-tab-label, [ly-tab-label]'\r\n})\r\nexport class LyTabLabelDirective { }\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyTab, LyTabGroupComponent, LyTabContent } from './tabs';\nimport { LyHeaderPaginationModule } from '@alyle/ui/header-pagination';\nimport { LyRippleModule } from '@alyle/ui/ripple';\nimport { NgTranscludeModule } from '@alyle/ui';\nimport { LyTabLabelDirective } from './tab-label.directive';\n\n@NgModule({\n  imports: [CommonModule, LyRippleModule, LyHeaderPaginationModule, NgTranscludeModule],\n  exports: [LyTab, LyTabGroupComponent, LyTabLabelDirective, LyTabContent],\n  declarations: [LyTab, LyTabGroupComponent, LyTabLabelDirective, LyTabContent]\n})\nexport class LyTabsModule { }\n"]}