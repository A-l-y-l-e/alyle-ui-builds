{"version":3,"sources":["ng://@alyle/ui/tabs/tab-content.directive.ts","ng://@alyle/ui/tabs/tabs.clasess.service.ts","ng://@alyle/ui/tabs/tabs.directive.ts","ng://@alyle/ui/tabs/tabs.module.ts"],"names":["LyTabContent","template","this","Directive","args","selector","TemplateRef","LyTabsClassesService","theme","setUpStyle","Injectable","providedIn","LyTheme2","LyTabs","classes","renderer","el","cd","UndefinedValue","EventEmitter","prototype","_withColor","val","withColor","newClass","_createWithColorClass","_withColorClass","updateClass","tabsIndicator","nativeElement","_selectedTab","tabIndicator","selectedIndex","_selectedBeforeIndex","_selectedIndex","_selectedBeforeTab","selectedIndexChange","emit","_updateIndicator","_selectedRequireCheck","markForCheck","setStyle","tabContents","ngOnInit","addClass","tabs","tabsIndicatorEl","ngAfterViewInit","_isViewInitLoaded","currentTab","beforeTab","currentIndex","Platform","isBrowser","_renderer","removeAttribute","index","tabsList","toArray","_el","rects","getBoundingClientRect","width","offsetLeft","tabsIndicatorForServer","loadTemplate","tab","loaded","templateRefLazy","templateRef","_this","colorOf","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","exportAs","Renderer2","ElementRef","ChangeDetectorRef","ViewChild","Input","Output","ContentChildren","forwardRef","LyTab","onClick","ContentChild","read","HostListener","LyTabLabel","tabLabel","LyTabsModule","NgModule","imports","CommonModule","LyRippleModule","NgTranscludeModule","exports","declarations"],"mappings":"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","sourcesContent":["import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({selector: '[ly-tab-content]'})\nexport class LyTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","import { Injectable } from '@angular/core';\nimport { LyTheme2 } from '@alyle/ui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyTabsClassesService {\n  tabs = this.theme.setUpStyle(\n    'k-tabs',\n    () => (\n      `display:block;` +\n      `overflow:hidden;`\n    )\n  );\n  tabsLabels = this.theme.setUpStyle(\n    'k-tab-labels',\n    () => (\n      `display: flex;` +\n      `position: relative;` +\n      `flex-grow: 1;` +\n      `overflow: hidden;`\n    )\n  );\n  tab = this.theme.setUpStyle(\n    'k-tab',\n    () => (\n      `position: relative;` +\n      `display: inline-flex;`\n    )\n  );\n  tabLabel = this.theme.setUpStyle(\n    'k-tab-label',\n    () => (\n      `min-width: 72px;` +\n      `padding: 0 24px;` +\n      `cursor: pointer;` +\n      `height: 48px;` +\n      `display: inline-flex;` +\n      `justify-content: center;` +\n      `align-items: center;`\n    )\n  );\n  tabContents = this.theme.setUpStyle(\n    'k-tab-contents',\n    () => (\n      `display: flex;` +\n      `transition: 450ms cubic-bezier(.1, 1, 0.5, 1);` +\n      `will-change: transform;`\n    )\n  );\n  tabContent = this.theme.setUpStyle(\n    'k-tab-content',\n    () => (\n      `width: 100%;` +\n      `flex-shrink: 0;` +\n      `position: relative;`\n    )\n  );\n  tabsIndicator = this.theme.setUpStyle(\n    'k-tabs-indicator',\n    () => (\n      `position: absolute;` +\n      `transition: 450ms cubic-bezier(.1, 1, 0.5, 1);` +\n      `bottom: 0;` +\n      `height: 2px;` +\n      `left: 0;` +\n      `background: currentColor;`\n    )\n  );\n  tabsIndicatorForServer = this.theme.setUpStyle(\n    'k-tabs-indicator-server',\n    () => (\n      `width: 100%;`\n    )\n  );\n  constructor(\n    private theme: LyTheme2\n  ) { }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n  Output,\n  TemplateRef,\n  ContentChild,\n  ViewChild,\n  HostListener,\n  forwardRef,\n  EventEmitter,\n  ChangeDetectorRef,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  ViewEncapsulation,\n  AfterViewInit\n} from '@angular/core';\nimport { LyTabContent } from './tab-content.directive';\nimport { LyTabsClassesService } from './tabs.clasess.service';\nimport { UndefinedValue, Undefined, LyTheme2, Platform } from '@alyle/ui';\n\n@Component({\n  selector: 'ly-tabs',\n  template: `<div [className]=\"classes.tabsLabels\">\n  <span #tabsIndicator></span>\n  <ng-content></ng-content>\n</div>\n<div [className]=\"classes.tabContents\" #tabContents>\n  <ng-template ngFor let-item [ngForOf]=\"tabsList\" let-x=\"index\">\n    <div [className]=\"classes.tabContent\">\n      <ng-template [ngTransclude]=\"loadTemplate(item, x)\"></ng-template>\n    </div>\n  </ng-template>\n</div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'lyTabs'\n})\nexport class LyTabs implements OnInit, AfterViewInit {\n  _selectedIndex: number | Undefined = UndefinedValue;\n  _selectedBeforeIndex: number;\n  _selectedRequireCheck: boolean;\n  _selectedTab: LyTab;\n  _selectedBeforeTab: LyTab;\n  private _isViewInitLoaded: boolean;\n  private _withColor: string;\n  private _withColorClass: string;\n  @ViewChild('tabContents') tabContents: ElementRef;\n  @ViewChild('tabsIndicator') tabsIndicator: ElementRef;\n  @Input()\n  set withColor(val: string) {\n    if (val !== this.withColor) {\n      const newClass = this._createWithColorClass(val);\n      this._withColorClass = this.theme.updateClass(this.tabsIndicator.nativeElement, this.renderer, newClass, this._withColorClass);\n      if (this._selectedTab) {\n        this.theme.updateClass(this._selectedTab.tabIndicator.nativeElement, this.renderer, newClass, this._withColorClass);\n      }\n    }\n  }\n  get withColor() {\n    return this._withColor;\n  }\n  @Input()\n  set selectedIndex(val: number) {\n    if (val !== this.selectedIndex) {\n      this._selectedBeforeIndex = this._selectedIndex as number;\n      this._selectedIndex = val;\n      this._selectedBeforeTab = this._selectedTab;\n      this.selectedIndexChange.emit(val);\n      this._updateIndicator(this._selectedTab, this._selectedBeforeTab);\n\n      if (this._selectedRequireCheck) {\n        this.markForCheck();\n      }\n      this.renderer.setStyle(this.tabContents.nativeElement, 'transform', `translate3d(${val * -100}%,0,0)`);\n    }\n  }\n  get selectedIndex() {\n    return this._selectedIndex as number;\n  }\n  @Output() selectedIndexChange: EventEmitter<any> = new EventEmitter();\n  @Input() withBg: string;\n  @ContentChildren(forwardRef(() => LyTab)) tabsList: QueryList<LyTab>;\n\n  constructor(\n    public classes: LyTabsClassesService,\n    private theme: LyTheme2,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private cd: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.renderer.addClass(this.el.nativeElement, this.classes.tabs);\n    const tabsIndicatorEl = this.tabsIndicator.nativeElement;\n    this.renderer.addClass(tabsIndicatorEl, this.classes.tabsIndicator);\n    /** Set default Color */\n    if (!this.withColor) {\n      this.withColor = 'primary';\n    }\n  }\n\n  ngAfterViewInit() {\n    this._isViewInitLoaded = true;\n  }\n\n  private _updateIndicator(currentTab: LyTab, beforeTab?: LyTab): void {\n    const currentIndex = this.selectedIndex;\n    if (currentTab) {\n      // currentTab = this.tabsList.find(_ => _.index === currentIndex);\n      if (!this._isViewInitLoaded || !Platform.isBrowser) {\n        /** for before initialize or for server */\n        this.renderer.addClass(currentTab.tabIndicator.nativeElement, this.classes.tabsIndicatorForServer);\n        this.renderer.addClass(currentTab.tabIndicator.nativeElement, this._withColorClass);\n        /**\n         * TODO: tabs: update indicator when change `selectedIndex`\n         */\n      } else {\n        // for after initialize && for browser\n        // Clean before tab\n        if (beforeTab) {\n          beforeTab._renderer.removeAttribute(beforeTab.tabIndicator.nativeElement, 'class');\n        }\n        if (currentTab.index !== currentIndex) {\n          // this fixed undefined selected tab\n          currentTab = this.tabsList.toArray()[currentIndex];\n        }\n        const el = currentTab._el.nativeElement as HTMLElement;\n        const rects = el.getBoundingClientRect();\n        this.renderer.setStyle(this.tabsIndicator.nativeElement, 'width', `${rects.width}px`);\n        this.renderer.setStyle(this.tabsIndicator.nativeElement, 'left', `${el.offsetLeft}px`);\n      }\n    }\n  }\n\n  markForCheck() {\n    this.cd.markForCheck();\n  }\n\n  loadTemplate(tab: LyTab, index: number): TemplateRef<LyTabContent> | null {\n    if (tab.loaded) {\n      return null;\n    }\n    tab.index = index;\n    if (this.selectedIndex === UndefinedValue) {\n      // set 0 if is null\n      this._selectedTab = tab;\n      this.selectedIndex = 0;\n    } else if (!this._isViewInitLoaded && this.selectedIndex === tab.index) {\n      this._selectedTab = tab;\n      /** Apply style for tabIndicator server */\n      this._updateIndicator(tab);\n    }\n    if (tab.templateRefLazy) {\n      if (this.selectedIndex === index) {\n        tab.loaded = true;\n        return tab.templateRefLazy;\n      } else {\n        return null;\n      }\n    } else {\n      tab.loaded = true;\n      return tab.templateRef;\n    }\n  }\n\n  private _createWithColorClass(val: string) {\n    this._withColor = val;\n    return this.theme.setUpStyle(\n      `k-tab-with-color:${val}`,\n      () => (\n        `color:${this.theme.colorOf(val)};`\n      )\n    );\n  }\n}\n\n@Component({\n  selector: 'ly-tab',\n  template: `<ng-content select=\"ly-tab-label\"></ng-content>\n<ng-content select=\"[ly-tab-label]\"></ng-content>\n<span #tabIndicator></span>\n<ng-template>\n  <ng-content></ng-content>\n</ng-template>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class LyTab implements OnInit, AfterViewInit {\n  index: number;\n  loaded: boolean;\n  @ContentChild(LyTabContent, { read: TemplateRef }) templateRefLazy: TemplateRef<LyTabContent>;\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @ViewChild('tabIndicator') tabIndicator: ElementRef;\n  @HostListener('click') onClick() {\n    this.tabs._selectedRequireCheck = !this.loaded;\n    this.tabs.selectedIndex = this.index;\n  }\n\n  constructor(\n    private tabs: LyTabs,\n    public _renderer: Renderer2,\n    public _el: ElementRef,\n  ) { }\n\n  ngOnInit() {\n    this._renderer.addClass(this._el.nativeElement, this.tabs.classes.tab);\n  }\n\n  ngAfterViewInit() {\n    this._renderer.addClass(this.tabIndicator.nativeElement, this.tabs.classes.tabsIndicator);\n  }\n}\n\n@Directive({\n  selector: 'ly-tab-label, [ly-tab-label]'\n})\nexport class LyTabLabel implements OnInit {\n  @Input() native: boolean;\n\n  constructor(\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private classes: LyTabsClassesService\n  ) { }\n\n  ngOnInit() {\n    this.renderer.addClass(this.el.nativeElement, this.classes.tabLabel);\n  }\n}\n/**\n * demo basic\n * <ly-tabs withColor=\"accent\">\n *   <ly-tab>\n *     <ly-tab-label>HOME<ly-tab-label>\n *     <button ly-tab-label>HOME<button>\n *     <button ly-tab-label native ly-button>HOME<button>\n *     <a [routerLink]=\"['home']\" ly-tab-label native ly-button>HOME<a>\n *     Content\n *   </ly-tab>\n *   ...\n * </ly-tabs>\n *\n * demo lazy loading\n * <ly-tabs withBg=\"primary\">\n *   <ly-tab>\n *     <ly-tab-label>HOME<ly-tab-label>\n *     <ng-template ly-tab-content></ng-template>\n *   </ly-tab>\n *   ...\n * </ly-tabs>\n * => withColor: color del label activa, default primary\n * => withBg: color de fondo para la tab, default background:primary\n * => native: no aplica los estilos predeterminados, default undefined\n * => disabled: Disable/enable a tab, default undefined\n * => isActive: Si la pestaÃ±a estÃ¡ actualmente activa., default undefined\n */\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgTranscludeModule } from '@alyle/ui';\nimport { LyRippleModule } from '@alyle/ui/ripple';\n// import { LyHeaderPaginationModule } from '@alyle/ui/header-pagination';\nimport { LyTabs, LyTabLabel, LyTab } from './tabs.directive';\nimport { LyTabContent } from './tab-content.directive';\n\n@NgModule({\n  imports: [CommonModule, LyRippleModule, NgTranscludeModule],\n  exports: [LyTabs, LyTab, LyTabLabel, LyTabContent],\n  declarations: [LyTabs, LyTab, LyTabLabel, LyTabContent]\n})\nexport class LyTabsModule { }\n"]}