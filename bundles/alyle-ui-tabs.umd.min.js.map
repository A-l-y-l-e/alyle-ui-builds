{"version":3,"sources":["ng://@alyle/ui/tabs/tab-content.directive.ts","ng://@alyle/ui/tabs/tabs.clasess.service.ts","ng://@alyle/ui/tabs/tabs.directive.ts","ng://@alyle/ui/tabs/tabs.module.ts"],"names":["LyTabContent","template","this","Directive","args","selector","TemplateRef","tabsStyles","root","display","overflow","tab","position","tabsLabels","flex-grow","tabLabel","min-width","padding","cursor","height","justify-content","align-items","tabContents","transition","will-change","tabContent","width","flex-shrink","tabsIndicator","bottom","left","background","tabsIndicatorForServer","LyTabsClassesService","theme","console","log","config","name","classes","addStyleSheet","Injectable","providedIn","LyTheme2","LyTabs","tabsService","renderer","el","cd","Subscription","EMPTY","EventEmitter","prototype","_withColor","val","withColor","newClass","_createWithColorClass","_withColorClass","updateClass","nativeElement","_selectedTab","tabIndicator","selectedIndex","_selectedBeforeIndex","_selectedIndex","_findIndex","_selectedBeforeTab","selectedIndexChange","emit","_updateIndicator","_selectedRequireCheck","markForCheck","setStyle","ngOnInit","addClass","tabsIndicatorEl","ngAfterViewInit","_isViewInitLoaded","ngAfterContentInit","_this","_tabsSubscription","tabsList","changes","subscribe","selectedIndexOnChange","ngOnDestroy","unsubscribe","index","indexOfLastTab","length","currentIndex","currentTab","beforeTab","Platform","isBrowser","_renderer","removeAttribute","toArray","_el","rects","getBoundingClientRect","offsetLeft","loadTemplate","loaded","templateRefLazy","templateRef","setUpStyle","colorOf","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","exportAs","Renderer2","ElementRef","ChangeDetectorRef","ViewChild","Input","Output","ContentChildren","forwardRef","LyTab","tabs","onClick","ContentChild","read","HostListener","LyTabLabel","LyTabsModule","NgModule","imports","LyThemeModule","CommonModule","LyCommonModule","LyRippleModule","NgTranscludeModule","exports","declarations"],"mappings":"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","sourcesContent":["import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({selector: '[ly-tab-content]'})\nexport class LyTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","import { Injectable } from '@angular/core';\nimport { LyTheme2 } from '@alyle/ui';\n\nconst tabsStyles = {\n  root: {\n    display: 'block',\n    overflow: 'hidden'\n  },\n  tab: {\n    position: 'relative',\n    display: 'inline-flex'\n  },\n  tabsLabels: {\n    display: 'flex',\n    position: 'relative',\n    'flex-grow': 1,\n    overflow: 'hidden'\n  },\n  tabLabel: {\n    'min-width': '72px',\n    padding: '0 24px',\n    cursor: 'pointer',\n    height: '48px',\n    display: 'inline-flex',\n    'justify-content': 'center',\n    'align-items': 'center'\n  },\n  tabContents: {\n    display: 'flex',\n    transition: '450ms cubic-bezier(.1, 1, 0.5, 1)',\n    'will-change': 'transform'\n  },\n  tabContent: {\n    width: '100%',\n    'flex-shrink': 0,\n    position: 'relative'\n  },\n  tabsIndicator: {\n    position: 'absolute',\n    transition: '450ms cubic-bezier(.1, 1, 0.5, 1)',\n    bottom: 0,\n    height: '2px',\n    left: 0,\n    background: 'currentColor'\n  },\n  tabsIndicatorForServer: {\n    width: '100%'\n  }\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyTabsClassesService {\n  // tabs = this.theme.setUpStyle(\n  //   'k-tabs',\n  //   () => (\n  //     `display:block;` +\n  //     `overflow:hidden;`\n  //   )\n  // );\n  // tabsLabels = this.theme.setUpStyle(\n  //   'k-tab-labels',\n  //   () => (\n  //     `display: flex;` +\n  //     `position: relative;` +\n  //     `flex-grow: 1;` +\n  //     `overflow: hidden;`\n  //   )\n  // );\n  // tab = this.theme.setUpStyle(\n  //   'k-tab',\n  //   () => (\n  //     `position: relative;` +\n  //     `display: inline-flex;`\n  //   )\n  // );\n  // tabLabel = this.theme.setUpStyle(\n  //   'k-tab-label',\n  //   () => (\n  //     `min-width: 72px;` +\n  //     `padding: 0 24px;` +\n  //     `cursor: pointer;` +\n  //     `height: 48px;` +\n  //     `display: inline-flex;` +\n  //     `justify-content: center;` +\n  //     `align-items: center;`\n  //   )\n  // );\n  // tabContents = this.theme.setUpStyle(\n  //   'k-tab-contents',\n  //   () => (\n  //     `display: flex;` +\n  //     `transition: 450ms cubic-bezier(.1, 1, 0.5, 1);` +\n  //     `will-change: transform;`\n  //   )\n  // );\n  // tabContent = this.theme.setUpStyle(\n  //   'k-tab-content',\n  //   () => (\n  //     `width: 100%;` +\n  //     `flex-shrink: 0;` +\n  //     `position: relative;`\n  //   )\n  // );\n  // tabsIndicator = this.theme.setUpStyle(\n  //   'k-tabs-indicator',\n  //   () => (\n  //     `position: absolute;` +\n  //     `transition: 450ms cubic-bezier(.1, 1, 0.5, 1);` +\n  //     `bottom: 0;` +\n  //     `height: 2px;` +\n  //     `left: 0;` +\n  //     `background: currentColor;`\n  //   )\n  // );\n  // tabsIndicatorForServer = this.theme.setUpStyle(\n  //   'k-tabs-indicator-server',\n  //   () => (\n  //     `width: 100%;`\n  //   )\n  // );\n  classes;\n  constructor(\n    private theme: LyTheme2\n  ) {\n    console.log('name', theme.config.name);\n    this.classes = theme.addStyleSheet(tabsStyles, 'lyTabs');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  QueryList,\n  Output,\n  TemplateRef,\n  ContentChild,\n  ViewChild,\n  HostListener,\n  forwardRef,\n  EventEmitter,\n  ChangeDetectorRef,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  ViewEncapsulation,\n  AfterViewInit,\n  AfterContentInit,\n  OnDestroy\n} from '@angular/core';\nimport { LyTabContent } from './tab-content.directive';\nimport { LyTabsClassesService } from './tabs.clasess.service';\nimport { UndefinedValue, Undefined, LyTheme2, Platform } from '@alyle/ui';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ly-tabs',\n  template: `<div [withClass]=\"classes.tabsLabels\">\n  <span #tabsIndicator></span>\n  <ng-content></ng-content>\n</div>\n<div [withClass]=\"classes.tabContents\" #tabContents>\n  <ng-template ngFor let-item [ngForOf]=\"tabsList\" let-x=\"index\">\n    <div [withClass]=\"classes.tabContent\">\n      <ng-template [ngTransclude]=\"loadTemplate(item, x)\"></ng-template>\n    </div>\n  </ng-template>\n</div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'lyTabs'\n})\nexport class LyTabs implements OnInit, AfterViewInit, AfterContentInit, OnDestroy {\n  _selectedIndex = 0;\n  _selectedBeforeIndex: number;\n  _selectedRequireCheck: boolean;\n  _selectedTab: LyTab;\n  _selectedBeforeTab: LyTab;\n  private _tabsSubscription = Subscription.EMPTY;\n  private _isViewInitLoaded: boolean;\n  private _withColor: string;\n  private _withColorClass: string;\n  readonly classes;\n  @ViewChild('tabContents') tabContents: ElementRef;\n  @ViewChild('tabsIndicator') tabsIndicator: ElementRef;\n  @Input() selectedIndexOnChange: 'auto' | number = 'auto';\n  @Input()\n  set withColor(val: string) {\n    if (val !== this.withColor) {\n      const newClass = this._createWithColorClass(val);\n      this._withColorClass = this.theme.updateClass(this.tabsIndicator.nativeElement, this.renderer, newClass, this._withColorClass);\n      if (this._selectedTab) {\n        this.theme.updateClass(this._selectedTab.tabIndicator.nativeElement, this.renderer, newClass, this._withColorClass);\n      }\n    }\n  }\n  get withColor() {\n    return this._withColor;\n  }\n  @Input()\n  set selectedIndex(val: number) {\n    if (val !== this.selectedIndex) {\n      this._selectedBeforeIndex = this._selectedIndex as number;\n      this._selectedIndex = this._findIndex(val, 'auto');\n      this._selectedBeforeTab = this._selectedTab;\n      this.selectedIndexChange.emit(this._selectedIndex);\n      this._updateIndicator(this._selectedTab, this._selectedBeforeTab);\n\n      if (this._selectedRequireCheck) {\n        this.markForCheck();\n      }\n      this.renderer.setStyle(this.tabContents.nativeElement, 'transform', `translate3d(${this._selectedIndex * -100}%,0,0)`);\n    }\n  }\n  get selectedIndex() {\n    return this._selectedIndex as number;\n  }\n  @Output() selectedIndexChange: EventEmitter<any> = new EventEmitter();\n  @Input() withBg: string;\n  @ContentChildren(forwardRef(() => LyTab)) tabsList: QueryList<LyTab>;\n\n  constructor(\n    tabsService: LyTabsClassesService,\n    private theme: LyTheme2,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private cd: ChangeDetectorRef\n  ) {\n    this.classes = tabsService.classes;\n  }\n\n  ngOnInit() {\n    this.renderer.addClass(this.el.nativeElement, this.classes.root);\n    const tabsIndicatorEl = this.tabsIndicator.nativeElement;\n    this.renderer.addClass(tabsIndicatorEl, this.classes.tabsIndicator);\n    /** Set default Color */\n    if (!this.withColor) {\n      this.withColor = 'primary';\n    }\n  }\n\n  ngAfterViewInit() {\n    this._isViewInitLoaded = true;\n  }\n  ngAfterContentInit() {\n    this._tabsSubscription = this.tabsList.changes.subscribe(() => {\n      if (this._selectedIndex !== this.selectedIndexOnChange) {\n        this.selectedIndex = this._findIndex(this.selectedIndex, this.selectedIndexOnChange);\n      }\n      this.cd.markForCheck();\n    });\n  }\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n  }\n\n  private _findIndex(selectedIndex: number, index: string | number) {\n    if (!this.tabsList) {\n      return selectedIndex;\n    }\n    const indexOfLastTab = this.tabsList.length - 1;\n    const currentIndex = typeof index === 'number' ? index : selectedIndex;\n    return currentIndex < 0 ? 0 : currentIndex > indexOfLastTab ? indexOfLastTab : currentIndex;\n  }\n\n  private _updateIndicator(currentTab: LyTab, beforeTab?: LyTab): void {\n    const currentIndex = this.selectedIndex;\n    if (currentTab) {\n      // currentTab = this.tabsList.find(_ => _.index === currentIndex);\n      if (!this._isViewInitLoaded || !Platform.isBrowser) {\n        /** for before initialize or for server */\n        this.renderer.addClass(currentTab.tabIndicator.nativeElement, this.classes.tabsIndicatorForServer);\n        this.renderer.addClass(currentTab.tabIndicator.nativeElement, this._withColorClass);\n        /**\n         * TODO: tabs: update indicator when change `selectedIndex`\n         */\n      } else {\n        // for after initialize && for browser\n        // Clean before tab\n        if (beforeTab) {\n          beforeTab._renderer.removeAttribute(beforeTab.tabIndicator.nativeElement, 'class');\n        }\n        if (currentTab.index !== currentIndex) {\n          // this fixed undefined selected tab\n          currentTab = this.tabsList.toArray()[currentIndex];\n        }\n        const el = currentTab._el.nativeElement as HTMLElement;\n        const rects = el.getBoundingClientRect();\n        this.renderer.setStyle(this.tabsIndicator.nativeElement, 'width', `${rects.width}px`);\n        this.renderer.setStyle(this.tabsIndicator.nativeElement, 'left', `${el.offsetLeft}px`);\n      }\n    }\n  }\n\n  markForCheck() {\n    this.cd.markForCheck();\n  }\n\n  loadTemplate(tab: LyTab, index: number): TemplateRef<LyTabContent> | null {\n    if (tab.loaded) {\n      return null;\n    }\n    tab.index = index;\n    if (this.selectedIndex === tab.index) {\n      // set 0 if is null\n      this._selectedTab = tab;\n      this._updateIndicator(tab);\n    } else if (!this._isViewInitLoaded && this.selectedIndex === tab.index) {\n      this._selectedTab = tab;\n      /** Apply style for tabIndicator server */\n      this._updateIndicator(tab);\n    }\n    if (tab.templateRefLazy) {\n      if (this.selectedIndex === index) {\n        tab.loaded = true;\n        return tab.templateRefLazy;\n      } else {\n        return null;\n      }\n    } else {\n      tab.loaded = true;\n      return tab.templateRef;\n    }\n  }\n\n  private _createWithColorClass(val: string) {\n    this._withColor = val;\n    return this.theme.setUpStyle(\n      `k-tab-with-color:${val}`,\n      () => (\n        `color:${this.theme.colorOf(val)};`\n      )\n    );\n  }\n}\n\n@Component({\n  selector: 'ly-tab',\n  template: `<ng-content select=\"ly-tab-label\"></ng-content>\n<ng-content select=\"[ly-tab-label]\"></ng-content>\n<span #tabIndicator></span>\n<ng-template>\n  <ng-content></ng-content>\n</ng-template>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class LyTab implements OnInit, AfterViewInit {\n  index: number;\n  loaded: boolean;\n  protected readonly classes;\n  @ContentChild(LyTabContent, { read: TemplateRef }) templateRefLazy: TemplateRef<LyTabContent>;\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @ViewChild('tabIndicator') tabIndicator: ElementRef;\n  @HostListener('click') onClick() {\n    this.tabs._selectedRequireCheck = !this.loaded;\n    this.tabs.selectedIndex = this.index;\n  }\n\n  constructor(\n    private tabsService: LyTabsClassesService,\n    private tabs: LyTabs,\n    public _renderer: Renderer2,\n    public _el: ElementRef,\n  ) {\n    this.classes = this.tabsService.classes;\n  }\n\n  ngOnInit() {\n    this._renderer.addClass(this._el.nativeElement, this.classes.tab);\n  }\n\n  ngAfterViewInit() {\n    this._renderer.addClass(this.tabIndicator.nativeElement, this.classes.tabsIndicator);\n  }\n}\n\n@Directive({\n  selector: 'ly-tab-label, [ly-tab-label]'\n})\nexport class LyTabLabel implements OnInit {\n  @Input() native: boolean;\n\n  constructor(\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private tabsService: LyTabsClassesService\n  ) { }\n\n  ngOnInit() {\n    this.renderer.addClass(this.el.nativeElement, this.tabsService.classes.tabLabel);\n  }\n}\n/**\n * demo basic\n * <ly-tabs withColor=\"accent\">\n *   <ly-tab>\n *     <ly-tab-label>HOME<ly-tab-label>\n *     <button ly-tab-label>HOME<button>\n *     <button ly-tab-label native ly-button>HOME<button>\n *     <a [routerLink]=\"['home']\" ly-tab-label native ly-button>HOME<a>\n *     Content\n *   </ly-tab>\n *   ...\n * </ly-tabs>\n *\n * demo lazy loading\n * <ly-tabs withBg=\"primary\">\n *   <ly-tab>\n *     <ly-tab-label>HOME<ly-tab-label>\n *     <ng-template ly-tab-content></ng-template>\n *   </ly-tab>\n *   ...\n * </ly-tabs>\n * => withColor: color del label activa, default primary\n * => withBg: color de fondo para la tab, default background:primary\n * => native: no aplica los estilos predeterminados, default undefined\n * => disabled: Disable/enable a tab, default undefined\n * => isActive: Si la pestaÃ±a estÃ¡ actualmente activa., default undefined\n * => selectedIndexOnChange, default: auto, opts: number, with auto, the selectedIndex = current o current-1 or latest\n */\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgTranscludeModule, LyCommonModule, LyThemeModule } from '@alyle/ui';\nimport { LyRippleModule } from '@alyle/ui/ripple';\nimport { LyTabs, LyTabLabel, LyTab } from './tabs.directive';\nimport { LyTabContent } from './tab-content.directive';\n\n@NgModule({\n  imports: [LyThemeModule, CommonModule, LyCommonModule, LyRippleModule, NgTranscludeModule],\n  exports: [LyTabs, LyTab, LyTabLabel, LyTabContent],\n  declarations: [LyTabs, LyTab, LyTabLabel, LyTabContent]\n})\nexport class LyTabsModule { }\n"]}