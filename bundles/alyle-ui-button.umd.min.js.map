{"version":3,"sources":["ng://@alyle/ui/button/button.service.ts","ng://@alyle/ui/button/button.ts","ng://@alyle/ui/button/button.module.ts"],"names":["LyButtonService","coreTheme","theme","this","root","setUpStyleSecondary","","rootStyle","outlined","setUpStyle","buttonContent","currentConfig","_a","typography","button","fontFamily","styleButton","fontWeight","pxToRem","fontSize","text","default","letterSpacing","textTransform","Injectable","args","providedIn","CoreTheme","LyTheme2","LyButton","elementRef","renderer","rippleStyles","buttonService","_ngZone","bgAndColor","setAutoContrast","Platform","isBrowser","el","nativeElement","_rippleContainer","Ripple","stylesData","prototype","val","classname","toBoolean","classes","updateClassName","_outlinedClassName","_rippleSensitive","value","_disabled","key","raised","bg","_disabledClassName","disableStyle","bind","addClass","removeClass","ngOnInit","focused","focus","ngAfterViewInit","classList","add","style","config","disabled","ngOnDestroy","removeEvents","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","LyRippleService","NgZone","LyBgColorAndRaised","decorators","type","Optional","Input","ViewChild","LyButtonModule","NgModule","imports","CommonModule","LyRippleModule","LyCommonModule","exports","declarations"],"mappings":"seAAA,IAAAA,EAAA,WAuDE,SAAAA,EACUC,EACAC,GADAC,KAAAF,UAAAA,EACAE,KAAAD,MAAAA,eA9CA,CACRE,KAAMD,KAAKF,UAAUI,oBACnB,SAAU,CACRC,GAAIC,IAERC,SAAUL,KAAKF,UAAUQ,WACvB,UACA,CAACH,GAAI,WAAM,MAAA,oCAIbI,cAAeP,KAAKF,UAAUQ,WAC5B,gBACA,CAACH,GAAI,WAAM,MAAA,+IAWbK,cAAeR,KAAKD,MAAMG,oBACxB,eACA,SAAAH,GACE,IAAAU,EAAAV,EAAAW,WAAQC,EAAAF,EAAAE,OAAQC,EAAAH,EAAAG,WACZC,EACF,gBAAeF,EAAOC,YAAcA,GAAU,gBAC/BD,EAAOG,WAAU,cACnBf,EAAMgB,QAAQJ,EAAOK,UAAS,UAClCjB,EAAMkB,KAAKC,WAAO,IAQ7B,OANInB,EAAMoB,gBACRN,GAAe,kBAAkBd,EAAMgB,QAAQJ,EAAOQ,eAAc,KAElER,EAAOS,gBACTP,GAAe,kBAAkBF,EAAOS,cAAa,KAEhDP,gCA5CdQ,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAPFC,EAAAA,iBAAVC,EAAAA,+JADF,GA6DA,SAAArB,IACE,MAAO,ikBC9DT,IAAAsB,EAAA,WAsEE,SAAAA,EACUC,EACAC,EACA7B,EACD8B,EACCC,EACRC,EACoBC,GAKpB,GAXQhC,KAAA2B,WAAAA,EACA3B,KAAA4B,SAAAA,EACA5B,KAAAD,MAAAA,EACDC,KAAA6B,aAAAA,EACC7B,KAAA8B,cAAAA,EAEY9B,KAAAgC,WAAAA,kBA3CH,yBACQ,EA4CrBA,GACFA,EAAWC,kBAETC,EAAAA,SAASC,UAAW,CACtB,IAAMC,EAAKT,EAAWU,cACtBrC,KAAKsC,iBAAmB,IAAIC,EAAAA,OAAOR,EAASF,EAAaW,WAAYJ,iCA5CrEV,EAAAe,UAAA,WAAQ,cAACC,GACX,IAAMC,GAA+B,IAAnBC,EAAAA,UAAUF,GAAgB1C,KAAK8B,cAAce,QAAQxC,SAAW,GAClFL,KAAKD,MAAM+C,gBAAgB9C,KAAK2B,WAAWU,cAAerC,KAAK4B,SAAUe,EAAW3C,KAAK+C,oBACzF/C,KAAK+C,mBAAqBJ,yDAGxBjB,EAAAe,UAAA,kBAAe,gBACjB,OAAOzC,KAAKgD,sBAEd,SAAoBC,GAClBjD,KAAKgD,iBAAmBJ,EAAAA,UAAUK,0DAMhCvB,EAAAe,UAAA,WAAQ,KAUZ,WACE,OAAOzC,KAAKkD,wBAXDD,GACX,IAAME,EAAMnD,KAAKgC,aAAehC,KAAKgC,WAAWoB,QAAUpD,KAAKgC,WAAWqB,IAAM,IAAM,IACtFrD,KAAKsD,mBAAqBtD,KAAKD,MAAMO,WAAW,MAAM6C,EAAO,CAAChD,GAAIH,KAAKuD,aAAaC,KAAKxD,QACzFA,KAAKkD,UAAYN,EAAAA,UAAUK,GACvBjD,KAAKkD,UACPlD,KAAK4B,SAAS6B,SAASzD,KAAK2B,WAAWU,cAAerC,KAAKsD,oBAE3DtD,KAAK4B,SAAS8B,YAAY1D,KAAK2B,WAAWU,cAAerC,KAAKsD,qDAyBlE5B,EAAAe,UAAAkB,SAAA,WACE3D,KAAK4B,SAAS6B,SAASzD,KAAK2B,WAAWU,cAAerC,KAAK8B,cAAce,QAAQrC,eACjFR,KAAK4B,SAAS6B,SAASzD,KAAK2B,WAAWU,cAAerC,KAAK8B,cAAce,QAAQ5C,OAG5EyB,EAAAe,UAAAmB,mBACL5D,KAAK2B,WAAWU,cAAcwB,SAGhCnC,EAAAe,UAAAqB,gBAAA,WACE,IAAMjB,EAAU7C,KAAK8B,cAAce,QAChC7C,KAAKO,cAA0C,cAAEwD,UAAUC,IAC1DnB,EAAQtC,gBAINmB,EAAAe,UAAAc,wBACN,IAAIU,EACJ,wEAEUjE,KAAKD,MAAMmE,OAAM,KAAMC,SAAQ,oCAKzC,OAHInE,KAAKgC,aAAehC,KAAKgC,WAAWoB,QAAUpD,KAAKgC,WAAWqB,MAChEY,GAAS,qBAAqBjE,KAAKD,MAAMmE,OAAM,OAAQC,SAAQ,gBAE1DF,GAGTvC,EAAAe,UAAA2B,YAAA,WACMlC,EAAAA,SAASC,WACXnC,KAAKsC,iBAAiB+B,oCA/F3BC,EAAAA,UAAShD,KAAA,CAAC,CACTiD,SAAU,cACVC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,SAAU,oEAKVC,cAAeC,EAAAA,kBAAkBC,kDA3BjCC,EAAAA,kBAGAC,EAAAA,iBAUAvD,EAAAA,gBAGewD,EAAAA,uBACRpF,SAZPqF,EAAAA,cASAC,EAAAA,mBAAkBC,WAAA,CAAA,CAAAC,KA2DfC,EAAAA,gDAtCFC,EAAAA,+BAMAA,EAAAA,MAAKjE,KAAA,CAAC,oCAQNkE,EAAAA,UAASlE,KAAA,CAAC,6BAEViE,EAAAA,WAvDH,GCCAE,EAAA,oDAOCC,EAAAA,SAAQpE,KAAA,CAAC,CACRqE,QAAS,CAACC,EAAAA,aAAcC,EAAAA,eAAgBC,EAAAA,gBACxCC,QAAS,CAACrE,GACVsE,aAAc,CAACtE,SAVjB","sourcesContent":["import {\n  LyTheme2, CoreTheme\n} from '@alyle/ui';\nimport {\n  Injectable,\n} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyButtonService {\n  classes = {\n    root: this.coreTheme.setUpStyleSecondary(\n      'button', {\n        '': rootStyle\n      }),\n    outlined: this.coreTheme.setUpStyle(\n      'btntlnd',\n      {'': () => (\n        `border: 1px solid currentColor`\n      )}\n    ),\n    buttonContent: this.coreTheme.setUpStyle(\n      'buttonContent',\n      {'': () => (\n        `padding:0;` +\n        `display:flex;` +\n        `justify-content:inherit;` +\n        `align-items:inherit;` +\n        `align-content:inherit;` +\n        `width: 100%;` +\n        `height: 100%;` +\n        `box-sizing: border-box;`\n      )}\n    ),\n    currentConfig: this.theme.setUpStyleSecondary<any>(\n      'buttonConfig',\n      theme => {\n        const { button, fontFamily } = theme.typography;\n        let styleButton = (\n          `font-family:${button.fontFamily || fontFamily};` +\n          `font-weight:${button.fontWeight};` +\n          `font-size:${theme.pxToRem(button.fontSize)};` +\n          `color:${theme.text.default};`\n        );\n        if (theme.letterSpacing) {\n          styleButton += `letter-spacing:${theme.pxToRem(button.letterSpacing)};`;\n        }\n        if (button.textTransform) {\n          styleButton += `text-transform:${button.textTransform};`;\n        }\n        return styleButton;\n      }\n    )\n  };\n  constructor(\n    private coreTheme: CoreTheme,\n    private theme: LyTheme2\n  ) { }\n}\n\nfunction rootStyle() {\n  return '-webkit-tap-highlight-color:transparent;' +\n  'background-color:rgba(0, 0, 0, 0);' +\n  'border:0;' +\n  'padding:0 16px;' +\n  '-moz-appearance:none;' +\n  'min-height:36px;' +\n  'height:36px;' +\n  'margin:0;' +\n  'border-radius:3px;' +\n  'outline:none;' +\n  'font-weight:500;' +\n  'min-width:88px;' +\n  'box-sizing:border-box;' +\n  'position:relative;' +\n  `justify-content:center;` +\n  `align-items:center;` +\n  `align-content:center;` +\n  'display:inline-flex;' +\n  'cursor:pointer;' +\n  '-webkit-user-select:none;' +\n  '-moz-user-select:none;' +\n  '-ms-user-select:none;' +\n  'user-select:none;' +\n  'text-decoration-line:none;' +\n  '-webkit-text-decoration-line:none;' +\n  'transition:all 375ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;' +\n  `overflow: hidden;`;\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Optional,\n  Renderer2,\n  ViewChild,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  Platform,\n  toBoolean,\n  LyTheme2,\n  LyBgColorAndRaised\n} from '@alyle/ui';\nimport { Ripple, LyRippleService } from '@alyle/ui/ripple';\nimport { LyButtonService } from './button.service';\n\n@Component({\n  selector: '[ly-button]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n  <span #content>\n    <ng-content></ng-content>\n  </span>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class LyButton implements OnInit, AfterViewInit, OnDestroy {\n  public _disabled = false;\n  private _rippleSensitive = false;\n  private _disabledClassName: string;\n  private _outlinedClassName: string;\n  private _rippleContainer: Ripple;\n  @Input()\n  set outlined(val: boolean) {\n    const classname = toBoolean(val) === true ? this.buttonService.classes.outlined : '';\n    this.theme.updateClassName(this.elementRef.nativeElement, this.renderer, classname, this._outlinedClassName);\n    this._outlinedClassName = classname;\n  }\n  @Input('sensitive')\n  get rippleSensitive(): boolean {\n    return this._rippleSensitive;\n  }\n  set rippleSensitive(value: boolean) {\n    this._rippleSensitive = toBoolean(value);\n  }\n\n  @ViewChild('content') buttonContent: ElementRef;\n\n  @Input()\n  set disabled(value: boolean) {\n    const key = this.bgAndColor && (this.bgAndColor.raised || this.bgAndColor.bg) ? 'r' : 'f';\n    this._disabledClassName = this.theme.setUpStyle(`btn${key}`, {'': this.disableStyle.bind(this)});\n    this._disabled = toBoolean(value);\n    if (this._disabled) {\n      this.renderer.addClass(this.elementRef.nativeElement, this._disabledClassName);\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, this._disabledClassName);\n    }\n  }\n  get disabled() {\n    return this._disabled;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private theme: LyTheme2,\n    public rippleStyles: LyRippleService,\n    private buttonService: LyButtonService,\n    _ngZone: NgZone,\n    @Optional() private bgAndColor: LyBgColorAndRaised\n  ) {\n    if (bgAndColor) {\n      bgAndColor.setAutoContrast();\n    }\n    if (Platform.isBrowser) {\n      const el = elementRef.nativeElement;\n      this._rippleContainer = new Ripple(_ngZone, rippleStyles.stylesData, el);\n    }\n  }\n\n  ngOnInit() {\n    this.renderer.addClass(this.elementRef.nativeElement, this.buttonService.classes.currentConfig);\n    this.renderer.addClass(this.elementRef.nativeElement, this.buttonService.classes.root);\n  }\n\n  public focused() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngAfterViewInit() {\n    const classes = this.buttonService.classes;\n      (this.buttonContent.nativeElement as HTMLElement).classList.add(\n        classes.buttonContent\n      );\n  }\n\n  private disableStyle() {\n    let style =\n    `box-shadow: 0 0 0 rgba(0, 0, 0, 0) !important;` +\n    `cursor: default;` +\n    `color: ${this.theme.config.text.disabled} !important;` +\n    `pointer-events: none;`;\n    if (this.bgAndColor && (this.bgAndColor.raised || this.bgAndColor.bg)) {\n      style += `background-color: ${this.theme.config.button.disabled} !important;`;\n    }\n    return style;\n  }\n\n  ngOnDestroy() {\n    if (Platform.isBrowser) {\n      this._rippleContainer.removeEvents();\n    }\n  }\n\n}\n","// App\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyCommonModule } from '@alyle/ui';\nimport { LyButton } from './button';\nimport { LyRippleModule } from '@alyle/ui/ripple';\nimport { LyIconButton } from '@alyle/ui/icon-button';\n\n@NgModule({\n  imports: [CommonModule, LyRippleModule, LyCommonModule],\n  exports: [LyButton],\n  declarations: [LyButton]\n})\nexport class LyButtonModule {}\n"]}