!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@alyle/ui")):"function"==typeof define&&define.amd?define("@alyle/ui/divider",["exports","@angular/core","@alyle/ui"],t):t((e.ly=e.ly||{},e.ly.divider={}),e.ng.core,e.ly.core)}(this,function(e,t,i){"use strict";var r=function(e){return{display:"block",backgroundColor:e.divider,height:"1px"}},n=function(){function e(e,t){this._el=e,this._theme=t}return Object.defineProperty(e.prototype,"inset",{get:function(){return this._inset},set:function(e){this._inset=e,this._theme.addStyle("lyDivider.inset",function(){return{marginBefore:"74px"}},this._el.nativeElement,this._insetClass)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this._theme.addSimpleStyle("lyDivider",r);this._el.nativeElement.classList.add(e)},e.decorators=[{type:t.Directive,args:[{selector:"ly-divider"}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:i.LyTheme2}]},e.propDecorators={inset:[{type:t.Input}]},e}(),o=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{exports:[n],declarations:[n]}]}],e}();e.LyDivider=n,e.LyDividerModule=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=alyle-ui-divider.umd.min.js.map