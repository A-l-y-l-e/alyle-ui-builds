!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@alyle/ui")):"function"==typeof define&&define.amd?define("@alyle/ui/toolbar",["exports","@angular/core","@angular/common","@alyle/ui"],t):t((e.ly=e.ly||{},e.ly.toolbar={}),e.ng.core,e.ng.common,e.ly.core)}(this,function(e,o,t,i){"use strict";var a=function(e,t){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)};var s=function(e){var t;return{root:(t={padding:"0 16px",display:"flex",boxSizing:"border-box",width:"100%",flexDirection:"row",alignItems:"center",whiteSpace:"nowrap",height:"64px",zIndex:e.zIndex.toolbar},t[e.getBreakpoint("XSmall")]={height:"56px"},t["&"]=e.toolbar?e.toolbar.root:null,t),dense:{height:"56px"}}},n=function c(e){this._theme=e},r=i.mixinStyleUpdater(i.mixinBg(i.mixinColor(i.mixinRaised(i.mixinDisabled(i.mixinOutlined(i.mixinElevation(i.mixinShadowColor(n)))))))),l=function(r){function e(e,t,o){var n=r.call(this,o)||this;return n._renderer=e,n._el=t,n.theme=o,n.classes=n.theme.addStyleSheet(s,-2),n.setAutoContrast(),e.addClass(n._el.nativeElement,n.classes.root),n}return function n(e,t){function o(){this.constructor=e}a(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}(e,r),Object.defineProperty(e.prototype,"position",{get:function(){return this._position},set:function(e){this._position=e,this._positionClass=this.theme.addStyle("lyToolbar.position:"+e,"position:"+e,this._el.nativeElement,this._positionClass,-2)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dense",{get:function(){return this._dense},set:function(e){var t=i.toBoolean(e);o.isDevMode()&&t!==this.dense&&(console.warn(this._el.nativeElement,'LyToolbar.appearance: `dense` is deprecated, instead use `appearance="dense"`'),t?this._renderer.addClass(this._el.nativeElement,this.classes.dense):this._renderer.removeClass(this._el.nativeElement,this.classes.dense))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"appearance",{get:function(){return this._appearance},set:function(t){t!==this.appearance&&(this._appearance=t,this._appearanceClass=this._theme.addStyle("LyToolbar.appearance:"+t,function(e){if(!e.toolbar)throw i.getLyThemeVariableUndefinedError("toolbar");if(!e.toolbar.appearance||!e.toolbar.appearance[t])throw new Error("Value toolbar.appearance['"+t+"'] not found in ThemeVariables");return e.toolbar.appearance[t]},this._el.nativeElement,this._appearanceClass,-2))},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(){this.updateStyle(this._el)},e.prototype.ngOnInit=function(){this.position||(this.position="fixed"),this.bg||(this.bg="background:tertiary",this.updateStyle(this._el))},e.decorators=[{type:o.Directive,args:[{selector:"ly-toolbar",inputs:["bg","color","raised","outlined","elevation","shadowColor"]}]}],e.ctorParameters=function(){return[{type:o.Renderer2},{type:o.ElementRef},{type:i.LyTheme2}]},e.propDecorators={position:[{type:o.Input}],dense:[{type:o.Input}],appearance:[{type:o.Input}]},e}(r),p=function(){function e(){}return e.decorators=[{type:o.NgModule,args:[{imports:[t.CommonModule,i.LyCommonModule],exports:[l,i.LyCommonModule],declarations:[l]}]}],e}();e.LyToolbarBase=n,e.LyToolbarMixinBase=r,e.LyToolbar=l,e.LyToolbarModule=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=alyle-ui-toolbar.umd.min.js.map