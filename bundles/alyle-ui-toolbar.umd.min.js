!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@alyle/ui"),require("@angular/common")):"function"==typeof define&&define.amd?define("@alyle/ui/toolbar",["exports","@angular/core","@alyle/ui","@angular/common"],t):t((e.alyle=e.alyle||{},e.alyle.ui=e.alyle.ui||{},e.alyle.ui.toolbar={}),e.ng.core,e.alyle.ui,e.ng.common)}(this,function(e,t,o,r){"use strict";var n={root:{display:"flex",boxSizing:"border-box",flexDirection:"row",alignItems:"center",height:"64px",width:"100%"},row:{padding:"0 16px",display:"flex",boxSizing:"border-box",width:"100%",flexDirection:"row",alignItems:"center",whiteSpace:"nowrap"}},a=function(){function e(){console.warn("ly-toolbar-item @deprecated")}return e.decorators=[{type:t.Directive,args:[{selector:"ly-toolbar-item"}]}],e.ctorParameters=function(){return[]},e}(),l=function(){function e(e,t,o,r){this.theme=o,this.classes=this.theme.addStyleSheet(n,"ly-toolbar",-2),e.addClass(t.nativeElement,this.classes.row),r&&r.setAutoContrast()}return e.decorators=[{type:t.Directive,args:[{selector:"ly-toolbar"}]}],e.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:o.LyTheme2},{type:o.LyCommon,decorators:[{type:t.Optional}]}]},e}(),i=function(){function e(e,t,o){t.addClass(e.nativeElement,o.classes.row)}return e.decorators=[{type:t.Directive,args:[{selector:"ly-toolbar-row"}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:l,decorators:[{type:t.Optional}]}]},e}(),s=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[r.CommonModule],exports:[l,a,i],declarations:[l,a,i]}]}],e}();e.ToolbarItem=a,e.LyToolbar=l,e.LyToolbarRow=i,e.LyToolbarModule=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=alyle-ui-toolbar.umd.min.js.map