{"version":3,"file":"alyle-ui-grid.umd.js.map","sources":["ng://@alyle/ui/grid/grid.ts","ng://@alyle/ui/grid/grid.module.ts"],"sourcesContent":["import { Directive, ElementRef, Input, Optional, Inject, OnInit } from '@angular/core';\nimport { LyTheme2, eachMedia } from '@alyle/ui';\nimport { LY_MEDIA_QUERIES } from '@alyle/ui/responsive';\n\nconst COL_VALUES = { };\n\nconst styles = ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    boxSizing: 'border-box'\n  }\n});\n\n/**\n * example:\n * <ly-grid container [spacing]=\"'16 8@XSmall'\">\n *   <ly-grid item [col]=\"'6 12@XSmall'\">\n *     <div>6 12@XSmall</div>\n *   </ly-grid>\n *   <ly-grid item [col]=\"'6 12@XSmall'\">\n *     <div>6 12@XSmall</div>\n *   </ly-grid>\n * </ly-grid>\n */\n@Directive({\n  selector: 'ly-grid[container]'\n})\nexport class LyGrid {\n  /**\n   * Styles\n   * @ignore\n   */\n  classes = this.theme.addStyleSheet(styles, 'lyGrid');\n  private _spacing: string | number;\n  private _spacingClass: string;\n  private _negativeMarginClass: string;\n\n  /**\n   * Defines the space between the component with the `item` attribute.\n   */\n  @Input()\n  get spacing(): string | number {\n    return this._spacing;\n  }\n  set spacing(val: string | number) {\n    if (val !== this.spacing) {\n      this._spacing = val;\n      this._spacingClass = this.theme.addStyle(`lyGrid-spacing:${val}`, () => {\n        if (typeof val === 'number') {\n          return `padding:${val / 2}px;`;\n        } else {\n          const spacingStyles: {\n            padding?: string\n          } = {};\n          eachMedia(val, (value, media, len) => {\n            const padding = `${(+value) / 2}px`;\n            if (len) {\n              spacingStyles[`@media ${this.mediaQueries[media]}`] = {\n                padding\n              };\n            } else {\n              spacingStyles.padding = padding;\n            }\n          });\n          return spacingStyles as any;\n        }\n      });\n      this._negativeMarginClass = this.theme.addStyle(`lyGrid-negative-margin:${val}`, () => {\n        if (typeof val === 'number') {\n          return `margin:${val / -2}px;width: calc(100% + ${val}px);`;\n        } else {\n          let negativeMarginStyles: {\n            margin?: string\n            width?: string\n          };\n          eachMedia(val, (value, media, len) => {\n            const negativeMarginstyles = {\n              margin: `${(-value) / 2}px`,\n              width: `calc(100% + ${value}px)`\n            };\n            if (len) {\n              if (!negativeMarginStyles) {\n                negativeMarginStyles = {};\n              }\n              negativeMarginStyles[`@media ${this.mediaQueries[media]}`] = negativeMarginstyles;\n            } else {\n              negativeMarginStyles = negativeMarginstyles;\n            }\n          });\n          return negativeMarginStyles as any;\n        }\n      }, this.elementRef.nativeElement, this._negativeMarginClass);\n    }\n  }\n\n  get spacingClass() {\n    return this._spacingClass;\n  }\n\n  constructor(\n    @Optional() @Inject(LY_MEDIA_QUERIES) private mediaQueries: any,\n    private theme: LyTheme2,\n    private elementRef: ElementRef,\n  ) {\n    this.elementRef.nativeElement.classList.add(this.classes.root);\n  }\n}\n\n@Directive({\n  selector: 'ly-grid[item]'\n})\nexport class LyGridCol implements OnInit {\n  private _col: string | number;\n  private _colClass: string;\n\n  @Input()\n  get col(): string | number {\n    return this._col;\n  }\n  set col(val: string | number) {\n    if (val !== this.col) {\n      this._colClass = this.theme.addStyle(`lyGrid-negative-margin:${val}`, () => {\n        if (typeof val === 'number') {\n          return getColStyle(val);\n        } else {\n          let colStyles: {\n            maxWidth?: string | number\n            flexBasis?: string | number\n            flexGrow?: number\n          };\n          eachMedia(val, (value, media, len) => {\n            const newColStyles = getColStyle(+value);\n            if (len) {\n              if (!colStyles) {\n                colStyles = {};\n              }\n              colStyles[`@media ${this.mediaQueries[media]}`] = newColStyles;\n            } else {\n              colStyles = newColStyles;\n            }\n          });\n          return colStyles as any;\n        }\n      }, this.el.nativeElement, this._colClass);\n    }\n  }\n\n  constructor(\n    @Optional() @Inject(LY_MEDIA_QUERIES) private mediaQueries: any,\n    private gridContainer: LyGrid,\n    private el: ElementRef,\n    private theme: LyTheme2\n  ) {\n    if (!gridContainer) {\n      throw new Error(`Rquire`);\n    }\n  }\n\n  ngOnInit() {\n    this._updateSpacing();\n  }\n\n  private _updateSpacing() {\n    if (this.gridContainer.spacingClass) {\n      this.el.nativeElement.classList.add(this.gridContainer.spacingClass);\n    }\n  }\n\n}\n\nfunction getColStyle(val: number) {\n  return {\n    maxWidth: val ? getColVal(val) : '100%',\n    flexBasis: val ? getColVal(val) : 0,\n    flexGrow: val ? 0 : 1\n  };\n}\n\nfunction getColVal(val: string | number): string {\n  return val in COL_VALUES\n              ? COL_VALUES[val]\n              : COL_VALUES[val] = `${+val * 100 / 12}%`;\n}\n","import { NgModule } from '@angular/core';\nimport { LyGrid, LyGridCol } from './grid';\n\n@NgModule({\n  exports: [LyGrid, LyGridCol],\n  declarations: [LyGrid, LyGridCol]\n})\nexport class LyGridModule { }\n"],"names":["eachMedia","Directive","Optional","Inject","LY_MEDIA_QUERIES","LyTheme2","ElementRef","Input","NgModule"],"mappings":"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"}
