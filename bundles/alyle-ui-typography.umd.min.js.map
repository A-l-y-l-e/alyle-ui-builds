{"version":3,"sources":["ng://@alyle/ui/typography/typography.service.ts","ng://@alyle/ui/typography/typography.directive.ts","ng://@alyle/ui/typography/typography.module.ts"],"names":["LyTypographyClasses","styleCore","this","root","setUpStyleSecondary","Injectable","args","providedIn","CoreTheme","default","top","bottom","LyTypography","style","elementRef","renderer","classes","addClass","nativeElement","Object","defineProperty","prototype","_lyTyp","val","lyTyp","newClass","_createTypClass","updateClassName","_lyTypClass","_gutter","newVal","toBoolean","gutter","_createGutterClass","Gutter","_gutterClass","updateClass","_gutterTop","gutterTop","_gutterTopClass","_gutterBottom","gutterBottom","_gutterBottomClass","ngOnInit","Error","key","newKey","theme","_a","typography","fontSize","fontWeight","letterSpacing","textTransform","lineHeight","pxToRem","name","Directive","selector","LyTheme2","ElementRef","Renderer2","Input","LyTypographyModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CoreTheme } from '@alyle/ui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyTypographyClasses {\n  root: string;\n  constructor(\n    styleCore: CoreTheme\n  ) {\n    this.root = styleCore.setUpStyleSecondary(\n      'k-typ',\n      () => (\n        // `margin: 1em 0 0.65em 0;` +\n        `margin: 0;` +\n        `display: block;`\n      )\n    );\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input, isDevMode, OnInit } from '@angular/core';\nimport { LyTheme2, toBoolean } from '@alyle/ui';\n// import { IMinimaTheme } from '../themes';\nimport { LyTypographyClasses } from './typography.service';\n\nenum Gutter {\n  default,\n  top,\n  bottom,\n}\n\n@Directive({\n  selector: `[lyTyp]`\n})\nexport class LyTypography implements OnInit {\n  private _lyTyp: string;\n  private _lyTypClass: string;\n\n  private _gutter: boolean;\n  private _gutterClass: string;\n\n  private _gutterTop: boolean;\n  private _gutterTopClass: string;\n\n  private _gutterBottom: boolean;\n  private _gutterBottomClass: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      const newClass = this._createTypClass(val);\n      this.style.updateClassName(this.elementRef.nativeElement, this.renderer, newClass, this._lyTypClass);\n      this._lyTypClass = newClass;\n    }\n  }\n  get lyTyp() {\n    return this._lyTyp;\n  }\n\n  @Input()\n  set gutter(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutter) {\n      this._gutter = newVal;\n      const newClass = this._createGutterClass(Gutter.default, newVal);\n      this._gutterClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterClass);\n    }\n  }\n  get gutter() {\n    return this._gutter;\n  }\n\n  @Input()\n  set gutterTop(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterTop) {\n      this._gutterTop = newVal;\n      const newClass = this._createGutterClass(Gutter.top, newVal);\n      this._gutterTopClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterTopClass);\n    }\n  }\n  get gutterTop() {\n    return this._gutterTop;\n  }\n\n  @Input()\n  set gutterBottom(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterBottom) {\n      this._gutterBottom = newVal;\n      const newClass = this._createGutterClass(Gutter.bottom, newVal);\n      this._gutterBottomClass = this.style.updateClass(this.elementRef.nativeElement, this.renderer, newClass, this._gutterBottomClass);\n    }\n  }\n  get gutterBottom() {\n    return this._gutterBottom;\n  }\n\n  constructor(\n    private style: LyTheme2,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    classes: LyTypographyClasses\n  ) {\n    this.renderer.addClass(this.elementRef.nativeElement, classes.root);\n  }\n\n  ngOnInit() {\n    if ((this.gutterTop && this.gutterBottom)) {\n      throw new Error(`use '<element lyTyp gutter>' instead of '<element lyTyp gutterTop gutterBottom>'`);\n    }\n  }\n\n  private _createTypClass(key: string) {\n    const newKey = `k-typ:${key}`;\n\n    return this.style.setUpStyleSecondary<any/** IMinimaTheme */>(newKey,\n      theme => {\n        const { typography } = theme;\n        const { fontSize, fontWeight, letterSpacing, textTransform, lineHeight } = typography[key || 'body1'];\n        let style = (\n          `font-size:${theme.pxToRem(fontSize)};` +\n          `font-weight:${fontWeight};` +\n          `letter-spacing:${theme.pxToRem(letterSpacing)};`\n        );\n        if (lineHeight) {\n          style += `line-height:${theme.pxToRem(lineHeight)};`;\n        }\n        if (textTransform) {\n          style += `text-transform:${textTransform};`;\n        }\n        return style;\n      }\n    );\n  }\n\n  private _createGutterClass(name: Gutter, val: boolean) {\n    return this.style.setUpStyleSecondary<any>(\n      `k-typ-gutter:${name}:${val}`,\n      theme => {\n        const gutter = name === Gutter.default;\n        return (\n          `margin-top:${ val && (gutter || name === Gutter.top) ? theme.typography.gutterTop : 0 }em;` +\n          `margin-bottom:${ val && (gutter || name === Gutter.bottom) ? theme.typography.gutterBottom : 0 }em;`\n        );\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyTypography],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n"]}