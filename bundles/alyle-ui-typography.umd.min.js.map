{"version":3,"sources":["ng://@alyle/ui/typography/typography.directive.ts","ng://@alyle/ui/typography/typography.module.ts"],"names":["styles","root","margin","display","default","top","bottom","LyTypography","style","elementRef","renderer","this","addStyleSheet","addClass","nativeElement","classes","Object","defineProperty","prototype","_lyTyp","val","lyTyp","_lyTypClass","_createTypClass","_gutter","newVal","toBoolean","gutter","_gutterClass","_createGutterClass","Gutter","_gutterTop","gutterTop","_gutterTopClass","_gutterBottom","gutterBottom","_gutterBottomClass","ngOnInit","Error","key","instance","newKey","addStyle","theme","_a","typography","fontSize","fontWeight","letterSpacing","textTransform","lineHeight","pxToRem","name","Directive","args","selector","LyTheme2","ElementRef","Renderer2","Input","LyTypographyModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Renderer2, Input, isDevMode, OnInit } from '@angular/core';\nimport { LyTheme2, toBoolean } from '@alyle/ui';\n\nconst styles = ({\n  root: {\n    margin: 0,\n    display: 'block'\n  }\n});\n\nenum Gutter {\n  default,\n  top,\n  bottom,\n}\n\n@Directive({\n  selector: `[lyTyp]`\n})\nexport class LyTypography implements OnInit {\n  classes = this.style.addStyleSheet(styles, 'lyTyp', -1);\n  private _lyTyp: string;\n  private _lyTypClass: string;\n\n  private _gutter: boolean;\n  private _gutterClass: string;\n\n  private _gutterTop: boolean;\n  private _gutterTopClass: string;\n\n  private _gutterBottom: boolean;\n  private _gutterBottomClass: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      this._lyTypClass = this._createTypClass(val, this._lyTypClass);\n    }\n  }\n  get lyTyp() {\n    return this._lyTyp;\n  }\n\n  @Input()\n  set gutter(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutter) {\n      this._gutter = newVal;\n      this._gutterClass = this._createGutterClass(Gutter.default, newVal, this._gutterClass);\n    }\n  }\n  get gutter() {\n    return this._gutter;\n  }\n\n  @Input()\n  set gutterTop(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterTop) {\n      this._gutterTop = newVal;\n      // const newClass = this._createGutterClass(Gutter.top, newVal);\n      this._gutterTopClass = this._createGutterClass(Gutter.top, newVal, this._gutterTopClass);\n    }\n  }\n  get gutterTop() {\n    return this._gutterTop;\n  }\n\n  @Input()\n  set gutterBottom(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterBottom) {\n      this._gutterBottom = newVal;\n      this._gutterBottomClass = this._createGutterClass(Gutter.bottom, newVal, this._gutterBottomClass);\n    }\n  }\n  get gutterBottom() {\n    return this._gutterBottom;\n  }\n\n  constructor(\n    private style: LyTheme2,\n    private elementRef: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.renderer.addClass(this.elementRef.nativeElement, this.classes.root);\n  }\n\n  ngOnInit() {\n    if ((this.gutterTop && this.gutterBottom)) {\n      throw new Error(`use '<element lyTyp gutter>' instead of '<element lyTyp gutterTop gutterBottom>'`);\n    }\n  }\n\n  private _createTypClass(key: string, instance: string) {\n    const newKey = `k-typ:${key}`;\n\n    return this.style.addStyle(newKey,\n      theme => {\n        const { typography } = theme;\n        const { fontSize, fontWeight, letterSpacing, textTransform, lineHeight } = typography[key || 'body1'];\n        let style = (\n          `font-size:${theme.pxToRem(fontSize)};` +\n          `font-weight:${fontWeight};` +\n          `letter-spacing:${theme.pxToRem(letterSpacing)};`\n        );\n        if (lineHeight) {\n          style += `line-height:${theme.pxToRem(lineHeight)};`;\n        }\n        if (textTransform) {\n          style += `text-transform:${textTransform};`;\n        }\n        return style;\n      },\n      this.elementRef.nativeElement,\n      instance\n    );\n  }\n\n  private _createGutterClass(name: Gutter, val: boolean, instance: string) {\n    return this.style.addStyle(\n      `k-typ-gutter:${name}:${val}`,\n      theme => {\n        const gutter = name === Gutter.default;\n        return (\n          `margin-top:${ val && (gutter || name === Gutter.top) ? theme.typography.gutterTop : 0 }em;` +\n          `margin-bottom:${ val && (gutter || name === Gutter.bottom) ? theme.typography.gutterBottom : 0 }em;`\n        );\n      },\n      this.elementRef.nativeElement, instance\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyTypography],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n"]}