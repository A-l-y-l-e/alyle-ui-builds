{"version":3,"sources":["ng://@alyle/ui/icon-button/icon-button.service.ts","ng://@alyle/ui/icon-button/icon-button.ts","ng://@alyle/ui/icon-button/icon-button.module.ts"],"names":["LyIconButtonService","coreTheme","this","host","setUpStyle","","content","Injectable","args","providedIn","CoreTheme","LyIconButton","elementRef","renderer","bgAndColor","iconButtonService","theme","setAutoContrast","Object","defineProperty","prototype","_this","config","size","ngOnInit","addClass","nativeElement","classes","Component","selector","template","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","exportAs","ElementRef","Renderer2","LyBgColorAndRaised","decorators","type","Optional","LyTheme2","ViewChild","LyRipple","LyIconButtonModule","NgModule","imports","CommonModule","LyRippleModule","exports","declarations"],"mappings":"mfAAA,IAAAA,EAAA,WAwCE,SAAAA,EACUC,GAAAC,KAAAD,UAAAA,eAlCA,CACRE,KAAMD,KAAKD,UAAUG,WAAW,SAAU,CAACC,GAAI,WAqB7C,MAnBA,iYAqBFC,QAASJ,KAAKD,UAAUG,WAAW,cAAe,CAACC,GAAI,WAAM,MAAA,yIA5BhEE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAJLC,EAAAA,2IAAT,GCAAC,EAAA,WAsDE,SAAAA,EACSC,EACCC,EACYC,EACbC,EACCC,GAJDd,KAAAU,WAAAA,EACCV,KAAAW,SAAAA,EACYX,KAAAY,WAAAA,EACbZ,KAAAa,kBAAAA,EACCb,KAAAc,MAAAA,EAEJF,GACFA,EAAWG,yBAlBfC,OAAAC,eAAIR,EAAAS,UAAA,UAAO,KAAX,WAAA,IAAAC,EAAAnB,KACE,MAAO,CACLoB,OAAQpB,KAAKc,MAAMZ,WAAW,mBAAoB,CAChDC,GAAI,WAAM,MACR,SAASgB,EAAKL,MAAMM,OAAM,WAAYC,KAAI,WAChCF,EAAKL,MAAMM,OAAM,WAAYC,KAAI,yCAiBnDZ,EAAAS,UAAAI,SAAA,WACEtB,KAAKW,SAASY,SAASvB,KAAKU,WAAWc,cAAexB,KAAKa,kBAAkBY,QAAQxB,MACrFD,KAAKW,SAASY,SAASvB,KAAKU,WAAWc,cAAexB,KAAKyB,QAAQL,6BA1CtEM,EAAAA,UAASpB,KAAA,CAAC,CAETqB,SAAU,kEACVC,SAAU,6IAQVC,qBAAqB,EACrBC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,SAAU,4DApCVC,EAAAA,kBAcAC,EAAAA,iBAMiBC,EAAAA,mBAAkBC,WAAA,CAAA,CAAAC,KAkChCC,EAAAA,kBAjCIzC,SAD8B0C,EAAAA,4CAoBpCC,EAAAA,UAASnC,KAAA,CAACoC,EAAAA,eA3Cb,GCAAC,EAAA,oDAMCC,EAAAA,SAAQtC,KAAA,CAAC,CACRuC,QAAS,CAACC,EAAAA,aAAcC,EAAAA,gBACxBC,QAAS,CAACvC,GACVwC,aAAc,CAACxC,SATjB","sourcesContent":["import { CoreTheme } from '@alyle/ui';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyIconButtonService {\n  classes = {\n    host: this.coreTheme.setUpStyle('icnBtn', {'': () => {\n      const style =\n      `-webkit-user-select:none;` +\n      `-moz-user-select:none;` +\n      `-ms-user-select:none;` +\n      `user-select:none;` +\n      `-webkit-tap-highlight-color:rgba(0, 0, 0, 0);` +\n      `justify-content: center;` +\n      `align-items: center;` +\n      `background:transparent;` +\n      `border:0;` +\n      `padding:0;` +\n      `overflow:hidden;` +\n      `cursor:pointer;` +\n      `outline:none;` +\n      `box-sizing:border-box;` +\n      `color:currentColor;` +\n      `display:inline-flex;` +\n      `position:relative;` +\n      `text-decoration: none;` +\n      `border-radius:50%;`;\n      return style;\n    }}),\n    content: this.coreTheme.setUpStyle('icnBtnCntnt', {'': () => (\n      `display:flex;` +\n      `justify-content:inherit;` +\n      `align-items:inherit;` +\n      `width:inherit;` +\n      `height:inherit;` +\n      `overflow:inherit;`\n    )})\n  };\n  constructor(\n    private coreTheme: CoreTheme\n  ) { }\n}\n","import {\n  NgModule,\n  Component,\n  ElementRef,\n  Input,\n  Directive,\n  ModuleWithProviders,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n  HostBinding,\n  HostListener,\n  isDevMode,\n  Optional,\n  Renderer2,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LyRippleModule, LyRipple } from '@alyle/ui/ripple';\nimport { Platform, LyBgColorAndRaised, LyTheme2 } from '@alyle/ui';\nimport { LyIconButtonService } from './icon-button.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button[ly-icon-button], a[ly-icon-button], span[ly-icon-button]',\n  template: `\n  <div class=\"{{ iconButtonService.classes.content }}\"\n  lyRipple\n  lyRippleCentered\n  >\n    <ng-content></ng-content>\n  </div>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'lyIconButton'\n})\nexport class LyIconButton implements OnInit {\n  private _iconStyle: {[key: string]: string | number};\n  @ViewChild(LyRipple) ripple: LyRipple;\n  get classes() {\n    return {\n      config: this.theme.setUpStyle('iconButtonConfig', {\n        '': () => (\n          `width:${this.theme.config.iconButton.size};` +\n          `height:${this.theme.config.iconButton.size};`\n        )\n      })\n    };\n  }\n  constructor(\n    public elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() private bgAndColor: LyBgColorAndRaised,\n    public iconButtonService: LyIconButtonService,\n    private theme: LyTheme2\n  ) {\n    if (bgAndColor) {\n      bgAndColor.setAutoContrast();\n    }\n  }\n\n  ngOnInit() {\n    this.renderer.addClass(this.elementRef.nativeElement, this.iconButtonService.classes.host);\n    this.renderer.addClass(this.elementRef.nativeElement, this.classes.config);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyRippleModule } from '@alyle/ui/ripple';\nimport { LyIconButton } from './icon-button';\n\n\n@NgModule({\n  imports: [CommonModule, LyRippleModule],\n  exports: [LyIconButton],\n  declarations: [LyIconButton],\n})\nexport class LyIconButtonModule { }\n"]}