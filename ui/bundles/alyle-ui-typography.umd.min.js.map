{"version":3,"sources":["ng://@alyle/ui/typography/typography.service.ts","ng://@alyle/ui/typography/typography.directive.ts","ng://@alyle/ui/typography/typography.module.ts"],"names":["LyTypographyClasses","styleCore","this","root","setUpStyleSecondary","Injectable","args","providedIn","CoreTheme","LyTypography","style","elementRef","renderer","classes","addClass","nativeElement","prototype","_lyTyp","val","lyTyp","newClass","_createTypClass","updateClassName","_lyTypClass","key","newKey","theme","_a","typography","typographyVariants","fontSize","fontWeight","letterSpacing","textTransform","lineHeight","pxToRem","Directive","selector","LyTheme2","ElementRef","Renderer2","Input","LyTypographyModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"2aAAA,IAAAA,EAAA,WAQE,SAAAA,EACEC,GAEAC,KAAKC,KAAOF,EAAUG,oBACpB,QACA,WAAM,MAAA,sEAVXC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHLC,EAAAA,2IADT,GCAAC,EAAA,WAuBE,SAAAA,EACUC,EACAC,EACAC,EACRC,GAHQX,KAAAQ,MAAAA,EACAR,KAAAS,WAAAA,EACAT,KAAAU,SAAAA,EAGRV,KAAKU,SAASE,SAASZ,KAAKS,WAAWI,cAAeF,EAAQV,mCAhB5DM,EAAAO,UAAA,QAAK,KAOT,WACE,OAAOd,KAAKe,qBARJC,GACR,GAAIA,IAAQhB,KAAKiB,MAAO,CACtB,IAAMC,EAAWlB,KAAKmB,gBAAgBH,GACtChB,KAAKQ,MAAMY,gBAAgBpB,KAAKS,WAAWI,cAAeb,KAAKU,SAAUQ,EAAUlB,KAAKqB,aACxFrB,KAAKqB,YAAcH,oCAefX,EAAAO,UAAAK,yBAAgBG,GACtB,IAAMC,EAAS,SAASD,EAExB,OAAOtB,KAAKQ,MAAMN,oBAA4CqB,EAC5D,SAAAC,GACU,IACRC,EADQD,EAAAE,WACRC,mBAAAL,GAAA,SAAQM,EAAAH,EAAAG,SAAUC,EAAAJ,EAAAI,WAAYC,EAAAL,EAAAK,cAAeC,EAAAN,EAAAM,cAAeC,EAAAP,EAAAO,WACxDxB,EACF,aAAagB,EAAMS,QAAQL,GAAS,gBACrBC,EAAU,mBACPL,EAAMS,QAAQH,GAAc,IAQhD,OANIE,IACFxB,GAAS,eAAegB,EAAMS,QAAQD,GAAW,KAE/CD,IACFvB,GAAS,kBAAkBuB,EAAa,KAEnCvB,yBA7Cd0B,EAAAA,UAAS9B,KAAA,CAAC,CACT+B,SAAU,uDALHC,EAAAA,gBADWC,EAAAA,kBAAYC,EAAAA,iBAGvBxC,oCASNyC,EAAAA,WAZH,GCAAC,EAAA,oDAICC,EAAAA,SAAQrC,KAAA,CAAC,CACRsC,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAACrC,GACVsC,aAAc,CAACtC,SATjB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CoreTheme } from '@alyle/ui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LyTypographyClasses {\n  root: string;\n  constructor(\n    styleCore: CoreTheme\n  ) {\n    this.root = styleCore.setUpStyleSecondary(\n      'k-typ',\n      () => (\n        `margin: 1em 0 0.65em 0;` +\n        `display: block;`\n      )\n    );\n  }\n}\n","import { Directive, ElementRef, Renderer2, Input } from '@angular/core';\nimport { LyTheme2 } from '@alyle/ui';\n// import { IMinimaTheme } from '../themes';\nimport { LyTypographyClasses } from './typography.service';\n\n@Directive({\n  selector: `[lyTyp]`\n})\nexport class LyTypography {\n  private _lyTyp: string;\n  private _lyTypClass: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      const newClass = this._createTypClass(val);\n      this.style.updateClassName(this.elementRef.nativeElement, this.renderer, newClass, this._lyTypClass);\n      this._lyTypClass = newClass;\n    }\n  }\n  get lyTyp() {\n    return this._lyTyp;\n  }\n  constructor(\n    private style: LyTheme2,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    classes: LyTypographyClasses\n  ) {\n    this.renderer.addClass(this.elementRef.nativeElement, classes.root);\n  }\n\n  private _createTypClass(key: string) {\n    const newKey = `k-typ:${key}`;\n\n    return this.style.setUpStyleSecondary<any/** IMinimaTheme */>(newKey,\n      theme => {\n        const { typography } = theme;\n        const { fontSize, fontWeight, letterSpacing, textTransform, lineHeight } = typography.typographyVariants[key || 'body1'];\n        let style = (\n          `font-size:${theme.pxToRem(fontSize)};` +\n          `font-weight:${fontWeight};` +\n          `letter-spacing:${theme.pxToRem(letterSpacing)};`\n        );\n        if (lineHeight) {\n          style += `line-height:${theme.pxToRem(lineHeight)};`;\n        }\n        if (textTransform) {\n          style += `text-transform:${textTransform};`;\n        }\n        return style;\n      }\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyTypography],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n"]}