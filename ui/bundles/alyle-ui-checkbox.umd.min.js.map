{"version":3,"sources":["ng://@alyle/ui/checkbox/ly-checkbox/ly-checkbox.component.ts","ng://@alyle/ui/checkbox/ly-checkbox.service.ts","ng://@alyle/ui/checkbox/ly-checkbox.module.ts"],"names":["LY_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","LyCheckbox","multi","CheckboxState","Init","EventEmitter","value","prototype","toggle","this","checked","_onChangeEvent","event","stopPropagation","_onInputClick","ev","_controlValueAccessorChangeFn","console","log","writeValue","registerOnChange","fn","ngOnChanges","changes","registerOnTouched","onTouched","ngOnInit","ngAfterContentInit","ngOnDestroy","Component","args","selector","template","styles","providers","Input","Output","LyCheckboxService","Injectable","LyCheckboxModule","forRoot","ngModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"ibAAA,IAeaA,EAA0C,CACrDC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAAC,IAC9BC,OAAO,2KAuDP,SAAAD,4BAlB4CE,EAAcC,mBAY9B,cAEkB,IAAIC,EAAAA,sCAC0B,IAAIA,EAAAA,4BACzD,gDACuC,SAACC,YAI/DL,EAAAM,UAAAC,OAAA,WACEC,KAAKC,SAAWD,KAAKC,SAGvBT,EAAAM,UAAAI,eAAA,SAAeC,GACbA,EAAMC,mBAERZ,EAAAM,UAAAO,cAAA,SAAcF,GACZ,IAAMG,EAAKH,EAAgC,OAC3CH,KAAKC,QAAUK,EAAGL,QAClBD,KAAKO,8BAA8BP,KAAKC,SACxCO,QAAQC,IAAI,gBAAiBH,EAAGL,UAGlCT,EAAAM,UAAAY,WAAA,SAAWb,GACTG,KAAKC,UAAYJ,EACjBW,QAAQC,IAAI,QAAST,KAAKC,UAG5BT,EAAAM,UAAAa,iBAAA,SAAiBC,GACfZ,KAAKO,8BAAgCK,GAEvCpB,EAAAM,UAAAe,YAAA,SAAYC,GACVN,QAAQC,IAAI,UAAWK,GACnBA,EAAa,KAKnBtB,EAAAM,UAAAiB,kBAAA,SAAkBH,GAChBZ,KAAKgB,UAAYJ,GAGnBpB,EAAAM,UAAAmB,SAAA,aAIAzB,EAAAM,UAAAoB,mBAAA,aAGA1B,EAAAM,UAAAqB,YAAA,iCArFDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,SAAU,4hBAkBVC,OAAQ,CAAC,+BACTC,UAAW,CAACtC,yEAIXuC,EAAAA,MAAKL,KAAA,CAAC,yBAENK,EAAAA,MAAKL,KAAA,CAAC,2CAENK,EAAAA,MAAKL,KAAA,CAAC,0CACNK,EAAAA,MAAKL,KAAA,CAAC,mCACNK,EAAAA,MAAKL,KAAA,CAAC,gCACNK,EAAAA,MAAKL,KAAA,CAAC,wBACNK,EAAAA,MAAKL,KAAA,CAAC,uBACNK,EAAAA,MAAKL,KAAA,CAAC,0BACNK,EAAAA,MAAKL,KAAA,CAAC,6BACNK,EAAAA,MAAKL,KAAA,CAAC,kCACNK,EAAAA,MAAKL,KAAA,CAAC,iCACNM,EAAAA,OAAMN,KAAA,CAAC,uCACPM,EAAAA,OAAMN,KAAA,CAAC,+BCtEVO,EAAA,WAKE,SAAAA,gCAHDC,EAAAA,qDAFD,GCAAC,EAAA,gCAcgBA,EAAAC,mBACZ,MAAO,CACLC,SAAUF,wBAXfG,EAAAA,SAAQZ,KAAA,CAAC,CACRa,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAC5C,GACV6C,aAAc,CAAC7C,GACfiC,UAAW,CAACG,SAXd","sourcesContent":["import {\n  Component,\n  OnInit,\n  AfterContentInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const LY_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => LyCheckbox),\n  multi: true\n};\nexport enum CheckboxState {\n  /** The initial state. */\n  Init,\n  /** Checked state. */\n  Checked,\n  /** Unchecked state. */\n  Unchecked,\n  /** Indeterminate state. */\n  Indeterminate,\n}\n\n@Component({\n  selector: 'ly-checkbox',\n  template: `<label>\n  <div class=\"ly-checkbox-container\">\n    <input #input\n           [hidden]=\"false\" type=\"checkbox\"\n           [id]=\"id\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [value]=\"value\"\n           [disabled]=\"disabled\"\n           [name]=\"name\"\n           [indeterminate]=\"indeterminate\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n  </div>\n</label>\n`,\n  styles: [`:host{display:inline-block}`],\n  providers: [LY_CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class LyCheckbox implements OnInit, AfterContentInit, ControlValueAccessor, OnChanges, OnDestroy {\n  private _currentCheckState: CheckboxState = CheckboxState.Init;\n  @Input('id') id: string;\n  // tslint:disable-next-line:no-input-rename\n  @Input('attr.aria-label') ariaLabel: string;\n  // tslint:disable-next-line:no-input-rename\n  @Input('attr.aria-labelledby') ariaLabelledby: string;\n  @Input('required') required: string;\n  @Input('labelPosition') labelPosition: string;\n  @Input('color') color: string;\n  @Input('value') value: string;\n  @Input('name') name: string;\n  @Input('disabled') disabled: string;\n  @Input('checked') checked = false;\n  @Input('indeterminate') indeterminate: string;\n  @Output('change') change: EventEmitter<any> = new EventEmitter<any>();\n  @Output('indeterminateChange') indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  onTouched: () => any = () => {};\n  private _controlValueAccessorChangeFn: (value: any) => void = (value) => {};\n  constructor() { }\n\n  /** Toggles the `checked` state of the checkbox. */\n  toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  _onChangeEvent(event: Event) {\n    event.stopPropagation();\n  }\n  _onInputClick(event: Event) {\n    const ev = event.target as HTMLInputElement;\n    this.checked = ev.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n    console.log('_onInputClick', ev.checked);\n  }\n\n  writeValue(value: any) {\n    this.checked = !!value;\n    console.log('value', this.checked);\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('changes', changes);\n    if (changes['src']) {\n      // fn\n    }\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterContentInit() {\n\n  }\n  ngOnDestroy() {\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LyCheckboxService {\n\n  constructor() { }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LyCheckbox } from './ly-checkbox/ly-checkbox.component';\nimport { LyCheckboxService } from './ly-checkbox.service';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [LyCheckbox],\n  declarations: [LyCheckbox],\n  providers: [LyCheckboxService]\n})\nexport class LyCheckboxModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LyCheckboxModule,\n    };\n  }\n}\n"]}